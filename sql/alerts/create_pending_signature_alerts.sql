-- Create view and task to surface pending signature requests older than a threshold (demo 7 days) and write to ALERTS table
USE DATABASE AI_FEATURE_HUB;
USE SCHEMA DOCGEN;

CREATE OR REPLACE VIEW DOCGEN.V_PENDING_SIGNATURE_ALERTS AS
SELECT REQUEST_ID,
       ACCOUNT_ID,
       CREATED_AT,
       DATEDIFF('day', CREATED_AT, CURRENT_TIMESTAMP()) AS AGE_DAYS,
       STATUS
FROM DOCGEN.SIGNATURE_REQUESTS
WHERE STATUS IN ('PENDING','VIEWED')
  AND CREATED_AT < DATEADD('day', -7, CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ALERTS (
  ALERT_ID STRING PRIMARY KEY,
  ALERT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP,
  ALERT_TYPE STRING,
  PAYLOAD VARIANT,
  SEVERITY STRING,
  RESOLVED BOOLEAN DEFAULT FALSE
);

-- Task: run every morning to materialize alerts
CREATE OR REPLACE TASK DOCGEN.TASK_PENDING_SIGNATURE_ALERTS
  WAREHOUSE = "COMPUTE_WH"
  SCHEDULE = 'USING CRON 0 6 * * * UTC'
AS
INSERT INTO DOCGEN.ALERTS (ALERT_ID, ALERT_TYPE, PAYLOAD, SEVERITY)
SELECT 'alert_' || REPLACE(TO_CHAR(CURRENT_TIMESTAMP(), 'YYYYMMDDHH24MISS') || '_' || REQUEST_ID, ' ', '_') AS ALERT_ID,
       'PENDING_SIGNATURE_AGE',
       OBJECT_CONSTRUCT('request_id', REQUEST_ID, 'account_id', ACCOUNT_ID, 'age_days', AGE_DAYS),
       CASE WHEN AGE_DAYS > 30 THEN 'HIGH' WHEN AGE_DAYS > 14 THEN 'MEDIUM' ELSE 'LOW' END
FROM DOCGEN.V_PENDING_SIGNATURE_ALERTS
WHERE NOT EXISTS (
  SELECT 1 FROM DOCGEN.ALERTS a
   WHERE a.PAYLOAD:request_id::string = DOCGEN.V_PENDING_SIGNATURE_ALERTS.REQUEST_ID
     AND a.ALERT_TYPE = 'PENDING_SIGNATURE_AGE'
     AND a.RESOLVED = FALSE
);

