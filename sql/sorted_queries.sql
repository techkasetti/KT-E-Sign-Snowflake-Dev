CREATE OR REPLACE DATABASE IF NOT EXISTS AI_FEATURE_HUB;

USE DATABASE AI_FEATURE_HUB;

CREATE SCHEMA IF NOT EXISTS DOCGEN;

USE SCHEMA DOCGEN;

CREATE OR REPLACE FILE FORMAT DOCGEN.JSON_FORMAT TYPE = 'JSON';

CREATE OR REPLACE INDEX IDX_EVENTS_RAW_PROVIDER ON DOCGEN.SIGNATURE_EVENTS_RAW (PROVIDER);

CREATE OR REPLACE ROW ACCESS POLICY docgen_tenant_row_access AS (account_id STRING) RETURNS BOOLEAN -> CURRENT_ROLE() IN ('SYSADMIN','DOCGEN_SIGNATURE_ADMIN') OR account_id = CURRENT_SESSION():ACCOUNT_ID;

CREATE OR REPLACE SCHEMA IF NOT EXISTS DOCGEN;

CREATE OR REPLACE STAGE DOCGEN.STAGE_EVIDENCE_EXPORTS FILE_FORMAT = DOCGEN.JSON_FORMAT;

CREATE OR REPLACE STAGE DOCGEN.STAGE_SIGNATURE_EVENTS FILE_FORMAT = DOCGEN.JSON_FORMAT;

-- Role creation

CREATE ROLE IF NOT EXISTS ROLE_DEMO_SERVICE;

GRANT USAGE ON DATABASE AI_FEATURE_HUB TO ROLE ROLE_DEMO_SERVICE;

GRANT USAGE ON SCHEMA AI_FEATURE_HUB.DOCGEN TO ROLE ROLE_DEMO_SERVICE;

GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA AI_FEATURE_HUB.DOCGEN TO ROLE ROLE_DEMO_SERVICE;

GRANT EXECUTE ON ALL PROCEDURES IN SCHEMA AI_FEATURE_HUB.DOCGEN TO ROLE ROLE_DEMO_SERVICE;

CREATE OR REPLACE ROLE DOCGEN_OPERATOR;

GRANT SELECT ON ALL TABLES IN SCHEMA DOCGEN TO ROLE DOCGEN_OPERATOR;

GRANT EXECUTE ON ALL PROCEDURES IN SCHEMA DOCGEN TO ROLE DOCGEN_OPERATOR;

CREATE OR REPLACE TABLE DOCGEN.ABUSE_ACTIONS_06 ( ACTION_ID STRING PRIMARY KEY, REPORT_ID STRING, ACTION STRING, ACTIONED_BY STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ABUSE_INVESTIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, REPORT_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ABUSE_INVESTIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ABUSE_REPORTS ( REPORT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REPORT_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ABUSE_REPORTS_06 ( REPORT_ID STRING PRIMARY KEY, REPORTED_BY STRING, TARGET_REF STRING, DESCRIPTION STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_EXPERIMENT_RESULTS ( RESULT_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEST_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_ASSIGNMENT_LOG ( LOG_ID STRING PRIMARY KEY, TEST_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_EXPOSURES ( EXPOSURE_ID STRING PRIMARY KEY, TEST_ID STRING, VARIANT_ID STRING, SUBJECT_REF STRING, EXPOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_METRICS ( METRIC_ID STRING PRIMARY KEY, EXP_ID STRING, VARIANT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_METRICS ( METRIC_ID STRING PRIMARY KEY, TEST_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_METRICS ( MET_ID STRING PRIMARY KEY, CONFIG_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_REGISTRATIONS ( TEST_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_REGISTRY ( TEST_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, TEST_ID STRING, METRICS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, TEST_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_ROLLUP ( ROLL_ID STRING PRIMARY KEY, EXP_ID STRING, AGG_METRICS VARIANT, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, EXP_ID STRING, SUMMARY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_TELEMETRY ( TELE_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AB_TEST_VARIANTS ( VARIANT_ID STRING PRIMARY KEY, TEST_ID STRING, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESSIBILITY_CONFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LEVEL STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_ANALYTICS_LOGS_6105 ( LOG_ID STRING PRIMARY KEY, ANALYTIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQUESTER STRING, RESOURCE_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, ACTOR STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, WF_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, APPROVAL_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, APPROVAL_JSON VARIANT, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_APPROVAL_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_AUDIT_09 ( AUDIT_ID STRING PRIMARY KEY, RESOURCE_REF STRING, PRINCIPAL STRING, ACTION STRING, DETAIL VARIANT, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SUBJECT STRING, SCOPE VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CERTIFICATE_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CERTIFICATION_LOGS_6072 ( LOG_ID STRING PRIMARY KEY, CERT_REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CERTIFICATION_QUEUE_6071 ( CERT_REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CERT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROLS_09 ( CONTROL_ID STRING PRIMARY KEY, RESOURCE_REF STRING, PRINCIPAL STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROL_AUDIT ( ACA_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROL_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, RESOURCE_REF STRING, SUBJECT_REF STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROL_POLICIES ( POLICY_ID STRING PRIMARY KEY, TARGET_RESOURCE STRING, CONDITIONS VARIANT, ACTIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_CONTROL_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_DELEGATION_LOGS ( LOG_ID STRING PRIMARY KEY, DELEGATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, REQUEST_ID STRING, GRANTED_TO STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, SUBJECT STRING, RESOURCE_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, SOURCE_IP STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOGS_06 ( LOG_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, SOURCE_IP STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOGS_09 ( LOG_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, SOURCE_IP STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOGS_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, LOG_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOGS_V2 ( LOG_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, SOURCE_IP STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_LOG_AGGREGATES ( AGG_ID STRING PRIMARY KEY, AGG_KEY STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_PATTERN_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, PATTERN_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_PATTERN_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_PATTERN_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_PATTERN_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICIES_06 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICIES_06 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, SUBJECT_REF STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_CHANGES ( CHANGE_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_EXCEPTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EX_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_TEMPLATES_V2 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_VIOLATION_APPEALS ( APPEAL_ID STRING PRIMARY KEY, VIOL_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_POLICY_VIOLATION_RESULTS ( RES_ID STRING PRIMARY KEY, VIOLATION_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_AUDIT ( AR_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_COMPLIANCE ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, REQUEST_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REQUEST_WORKFLOW ( WF_ID STRING PRIMARY KEY, REQ_REF STRING, STAGES VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TARGET_REF STRING, DUE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TARGET_REF STRING, SCHEDULE VARIANT, LAST_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REVIEW_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSIGNEE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_SCOPE VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_HISTORY ( HIST_ID STRING PRIMARY KEY, REVIEW_ID STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, REVIEWER STRING, OUTCOME STRING, NOTES VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, REVIEW_ID STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, SCHEDULE VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TARGET_REF STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, RESOURCE_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SCOPE VARIANT, ASSIGNEE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, RESOURCE_REF STRING, REVIEWERS ARRAY, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_REQUESTS_14 ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, REVIEWER STRING, OUTCOME STRING, NOTES VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, REVIEW_ID STRING, SUBJECT_REF STRING, RESULT VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RESULTS_11 ( RESULT_ID STRING PRIMARY KEY, TASK_ID STRING, FINDINGS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RUNS ( RUN_ID STRING PRIMARY KEY, REVIEW_ID STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, SCOPE VARIANT, FREQUENCY STRING, NEXT_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, NAME STRING, INTERVAL JSON, NEXT_RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TASKS ( TASK_ID STRING PRIMARY KEY, SCOPE VARIANT, OWNER STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TASKS_11 ( TASK_ID STRING PRIMARY KEY, TARGET STRING, SCHEDULE STRING, LAST_RUN TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TEAMS ( TEAM_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TEAM_LOGS ( LOG_ID STRING PRIMARY KEY, TEAM_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TEMPLATES ( ART_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVIEW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, GRANT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVOCATION_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESOURCE_REF STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_REVOCATION_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKENS ( AT_ID STRING PRIMARY KEY, SUBJECT STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT STRING, SCOPE ARRAY, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVoked BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKENS_12 ( TOKEN_ID STRING PRIMARY KEY, SUBJECT STRING, SCOPE STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOKEN_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOKEN_REF STRING, SUBJECT_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOKEN_REF STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_BLACKLIST ( TOKEN_ID STRING PRIMARY KEY, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_BLACKLIST ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_ISSUANCE ( ISSUE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_LEDGER ( LEDGER_ID STRING PRIMARY KEY, TOKEN_ID STRING, SUBJECT_REF STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_REVOCATION ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.ACCESS_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, ISSUE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNTS ( ACCOUNT_ID STRING PRIMARY KEY, ACCOUNT_NAME STRING, ADMIN_CONTACT_EMAIL STRING, INTEGRATION_KEY_HASH VARIANT, INTEGRATION_STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNTS ( ACCOUNT_ID STRING PRIMARY KEY, ACCOUNT_NAME STRING, BILLING_PROFILE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNTS (ACCOUNT_ID STRING PRIMARY KEY, NAME STRING, INTEGRATION_KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ACTIVATION_METRICS ( MET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ACTIVATION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ACTIVITY_INDEX ( ACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTIVITY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ACTIVITY_INDEX ( ACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTIVITY_TYPE STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ADMINS ( ADMIN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ADMINS_REGISTRY ( ADMIN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_REF STRING, ROLE_NAME STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ALERT_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, TRIGGERS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_API_KEYS ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, ROLE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_CYCLE_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CYCLE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, HEALTH_JSON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_HISTORY ( HIST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RUN_ID STRING, TOTAL NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_OVERRIDES ( OV_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, OVERRIDE_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_PROFILE_V2 ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_BILLING_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SETTINGS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CHURN_PREDICTIONS ( PRED_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, PREDICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CHURN_PREDICTIONS ( PRED_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, PREDICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CHURN_RISK ( RISK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_SCORE NUMBER, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_COLLECTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_COMPLIANCE_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, DASH_CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_COMPLIANCE_FLAGS ( FLAG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FLAG_KEY STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_COMPLIANCE_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CONFIG ( CONFIG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CONTACTS_14 ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CONTACT_ROLES ( ROLE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CONTACT_ID STRING, ROLE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CREDITS_07 ( CREDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, CURRENCY STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CREDIT_BALANCES ( BAL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BALANCE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CREDIT_HISTORY ( CH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, APPLIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_CREDIT_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMIT_AMOUNT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_DISCOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_DISCOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PAYLOAD VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_DISPUTE_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DESCRIPTION CLOB, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ENTITLEMENTS_10 ( ENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE STRING, ENABLED BOOLEAN, META VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ENTITLEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ENTITLEMENT_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, ACTION STRING, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ENTITLEMENT_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EXCEPTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ESCALATIONS_14 ( ESC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ISSUE_REF STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ESCALATION_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LEVEL INT, CONTACT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FLAG_NAME STRING, VALUE BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FEATURE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, LIMIT_VALUE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FEATURE_PRICING ( ACCOUNT_ID STRING, FEATURE_KEY STRING, BASE_UNIT_PRICE NUMBER(18,6), UNIT STRING, MARKUP_PCT NUMBER(5,2), OVERRIDE_FLAG BOOLEAN, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FEATURE_PRICING ( PRICING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, PRICE_PER_UNIT NUMBER, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FINANCIAL_CONTROLS ( CTRL_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FINANCIAL_CONTROL_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, CTRL_ID STRING, TENANT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_FINANCIAL_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUMMARY VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DESCRIPTION STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_HISTORY ( HH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_INDEX_6089 ( HEALTH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, HEALTH_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_INTERVENTIONS ( INTERV_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIONS VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_LOGS_6090 ( LOG_ID STRING PRIMARY KEY, HEALTH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE FLOAT, DRIVERS VARIANT, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, METRICS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INCIDENTS_14 ( INCIDENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SEVERITY STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INCIDENT_UPDATES_14 ( UPDATE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, NOTE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INTEGRATION_ERRORS ( ERR_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INTEGRATION STRING, ERROR_TEXT CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INTEGRATION_KEYS ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INTEGRATION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INTEGRATION STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INVOICE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_INVOICING_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_LEGAL_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_LIMITS_06 ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_MARKUP ( ACCOUNT_ID STRING, DEFAULT_MARKUP_PCT NUMBER(5,2), EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_NOTIFICATIONS_LOG ( LOG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNEL STRING, SUBJECT STRING, BODY CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_NOTIFICATION_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SETTINGS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ITEMS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_EVENTS ( EVT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_FLOW ( FLOW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STEP INT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_FUNNEL ( FUNNEL_ID STRING PRIMARY KEY, TENANT_ID STRING, STAGES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_HISTORY ( HIST_ID STRING PRIMARY KEY, FLOW_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_METRICS_MV ( MV_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_PROGRESS ( PROG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STEP STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ONBOARDING_STATES ( STATE_ID STRING PRIMARY KEY, TENANT_ID STRING, STATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PAYMENT_METHODS ( PM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METHOD_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PREFLIGHT_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RESULT JSON, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PRICING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PRIVACY_FLAGS ( FLAG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FLAG_NAME STRING, VALUE BOOLEAN, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PRIVACY_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PRIVILEGE_INDEX_6164 ( INDEX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PRIVS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PRIVILEGE_LOGS_6165 ( LOG_ID STRING PRIMARY KEY, INDEX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_PROVIDER_BINDINGS ( BIND_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROVIDER STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_QUOTA_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_REENGAGEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CAMPAIGN_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RESUMPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUESTOR STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RESUMPTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RETENTION_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_ID STRING, OVERRIDE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, SCORE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_EXPOSURE ( EXP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_JSON VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_HISTORY ( HIST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_LEVEL STRING, REASON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_MITIGATIONS ( MIT_ID STRING PRIMARY KEY, EXP_ID STRING, MITIGATION_JSON VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_LEVEL STRING, DETAILS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_LEVEL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, DETAILS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ROLE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_REF STRING, ROLE_NAME STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_ROLE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECRETS_META ( META_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SECRET_KEY STRING, SECRET_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, REC_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_TYPE STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EVENTS ( EVT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REASON STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY VARIANT, ENFORCED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_POSTURE ( POSTURE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROFILE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_RECOMMENDATIONS ( REC_ID STRING PRIMARY KEY, POSTURE_ID STRING, RECOMMENDATION CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_SCORECARD ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, FACTORS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SECURITY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, VIOL_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SERVICE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMITS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SERVICE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SIGNATURE_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SLACK_HOOKS ( HOOK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNEL STRING, HOOK_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SLA_BINDINGS ( BIND_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SLO_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SLO_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SSO_BINDINGS ( BIND_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROVIDER_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_STATEMENTS ( STATEMENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATEMENT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_STORAGE_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_BYTES NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SUCCESS_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SUPPORT_TIERS ( TIER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TIER_NAME STRING, EFFECTIVE_FROM TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_SUSPENSION_LOGS ( LOG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REASON CLOB, SUSPENDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESUMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TEMPLATE_ENTITLEMENTS ( ENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_ID STRING, ENT_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TEMPLATE_ENTITLEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, ENT_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC_NAME STRING, THRESHOLD_VALUE NUMBER, NOTIFY BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TOS_ACCEPT ( ACC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, VERSION_ID STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TRIAL_METRICS ( METRIC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USAGE_SUMMARY VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TRUST_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_TRUST_SCORES_14 ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC STRING, THRESHOLD NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_ALERTS_6366 ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ALERT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_ANOMALIES ( ANOMALY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_USAGE_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOKS ( WEBHOOK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROVIDER STRING, URL STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, STATUS STRING, ATTEMPT INT, LOG_TEXT CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOK_DLQ ( DLQ_ID STRING PRIMARY KEY, EVT_ID STRING, ERROR TEXT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOK_EVENTS ( EVENT_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, EVENT_PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOK_EVENTS ( EVT_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WEBHOOK_REGISTRY ( WEBHOOK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TARGET_URL STRING, EVENTS ARRAY, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNT_WHITELIST ( WL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, ENTITY_REF STRING, SUBJECT STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACL_APPROVAL_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACL_CHANGE_LOGS_6159 ( LOG_ID STRING PRIMARY KEY, ACL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACL_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTION_RESULTS_10 ( RESULT_ID STRING PRIMARY KEY, ACTION_ID STRING, STATUS STRING, DETAIL VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ACTION_TRACE ( TRACE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, META VARIANT, TRACE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION_TYPE STRING, -- e.g., 'INTEGRATION_KEY_CREATED','FEATURE_ENABLED','FEATURE_DISABLED' ACTION_BY STRING, -- admin user or service account ACTION_PAYLOAD VARIANT, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, RESULT_STATUS STRING, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.ACTIVATION_AUDIT (AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ACTIVATION_AUDIT( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVATION_AUDIT_CONSOLIDATED AS SELECT * FROM DOCGEN.ACTIVATION_AUDIT;

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, EQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_EXPORT_QUEUE ( EQ_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_LOG ( ACT_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_RATE_METRICS ( METRIC_ID STRING PRIMARY KEY, METRIC_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_REPLAY_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ACTIVITY_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADAPTIVE_CHALLENGE_QUEUE ( Q_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHALLENGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADAPTIVE_CHALLENGE_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADAPTIVE_ROUTING_LOGS ( LOG_ID STRING PRIMARY KEY, ROUTE_ID STRING, INPUT VARIANT, CHOSEN_TARGET STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADAPTIVE_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADJUSTMENT_LEDGER ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMINISTRATIVE_ANNOUNCEMENTS ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, CERTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_LOGS_12 ( LOG_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_REVIEW ( REVIEW_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, RESULT STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_REVIEW_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, DECISION STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, ADMIN_USER STRING, SCOPE VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACKNOWLEDGEMENT_LOGS ( ACK_ID STRING PRIMARY KEY, ADMIN_USER STRING, ITEM_REF STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ACTION_NAME STRING, PAYLOAD VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS_03 ( ACTION_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_OBJECT STRING, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS_07 ( ACTION_ID STRING PRIMARY KEY, ADMIN_ID STRING, ACTION STRING, TARGET_REF STRING, NOTES STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS_LOG ( LOG_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_REF STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIONS_QUEUE_08 ( QUEUE_ID STRING PRIMARY KEY, ACTION VARIANT, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_QUEUE ( ACTION_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_QUEUE ( ACTION_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_RESULTS ( RESULT_ID STRING PRIMARY KEY, ACTION_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_RESULTS_08 ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INITIATOR STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTION_TEMPLATES_09 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, ACTION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIVITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIVITY JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIVITY_INDEX ( INDEX_ID STRING PRIMARY KEY, ACTION_ID STRING, ADMIN_USER STRING, TARGET_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ACTIVITY_SUMMARY ( SUM_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTIVITY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERTS ( ALERT_ID STRING PRIMARY KEY, ALERT_KEY STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, DELIVERY_STATUS STRING, DELIVERY_META VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_ROUTES_09 ( ROUTE_ID STRING PRIMARY KEY, NAME STRING, CHANNELS ARRAY, CRITERIA VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ADMIN_USER STRING, ALERT_RULE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ALERT_TYPE STRING, SUBSCRIBER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ALERT_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, SCOPE STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ANNOUNCEMENTS_12 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), AUTHOR STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ANNOUNCEMENT_INDEX ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ANNOUNCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, ANNOUNCEMENT_ID STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTOR STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ANNOUNCEMENT_READS ( READ_ID STRING PRIMARY KEY, ANN_ID STRING, USER_REF STRING, READ_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_API_ACCESS_LOG ( LOG_ID STRING PRIMARY KEY, USER_REF STRING, ENDPOINT STRING, METHOD STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_API_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_ACTIONS ( ACTION_ID STRING PRIMARY KEY, APPROVAL_ID STRING, ACTION_BY STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_QUEUE ( APPROVAL_ID STRING PRIMARY KEY, ENTITY_REF STRING, REASON STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_QUEUE ( APPROVAL_ID STRING PRIMARY KEY, REQUEST_JSON VARIANT, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, APPROVED_BY STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, ACTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_APPROVAL_WORKFLOW ( WF_ID STRING PRIMARY KEY, ITEM_JSON VARIANT, STEPS VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_AGGREGATES ( AGG_ID STRING PRIMARY KEY, AGG_KEY STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_AGG_BY_DAY ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, DAY DATE, AGG JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_CONFIGS_08 ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_EVENTS ( EVENT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_EXPORTS_09 ( EXPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, OUT_REF STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, EXPORT_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_INDEXES_08 ( INDEX_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_INDEX_BY_TENANT ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, AUDIT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_LOGS_04 ( LOG_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_METRICS ( AM_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_NOTICES ( NOTICE_ID STRING PRIMARY KEY, AUDIT_ID STRING, NOTICE_TEXT CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, RET_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_RETENTION ( RET_ID STRING PRIMARY KEY, AUDIT_SCOPE VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_SUMMARY ( SUM_ID STRING PRIMARY KEY, SCOPE STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_SUMMARY ( SUM_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_SUMMARY_MV ( MV_ID STRING PRIMARY KEY, SCOPE STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_OBJECT STRING, DETAILS VARIANT, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_OBJECT STRING, DETAILS VARIANT, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ADMIN_BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.ADMIN_BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_BILLING_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, RUN_ID STRING, LINE_REF STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CHANGE_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, CHANGE_JSON VARIANT, REQUESTOR STRING, APPROVER STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVALS ( APR_ID STRING PRIMARY KEY, CHANGE_REF STRING, APPROVER STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVAL_LOGS_6067 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVAL_QUEUE ( Q_ID STRING PRIMARY KEY, CHANGE_JSON VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVAL_QUEUE_6066 ( REQ_ID STRING PRIMARY KEY, CHANGE_JSON VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, APP_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ADMIN_USER STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_COMMUNICATION_LOG ( LOG_ID STRING PRIMARY KEY, CHANGE_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANNEL STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_IMPACT_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, CHANGE_ID STRING, IMPACT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGE_JSON VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CHANNEL_USAGE ( USAGE_ID STRING PRIMARY KEY, CHANNEL_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, THREAD_ID STRING, AUTHOR STRING, BODY CLOB, POSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMMENT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, COMMENT_ID STRING, TARGET_USER STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMMENT_THREADS ( THREAD_ID STRING PRIMARY KEY, CONTEXT_REF STRING, SUBJECT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMPLIANCE_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMPLIANCE_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, NAME STRING, REQUIREMENT JSON, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMPLIANCE_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, DASH_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMPLIANCE_FINDINGS ( FIND_ID STRING PRIMARY KEY, RUN_ID STRING, ITEM_ID STRING, FINDING JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COMPLIANCE_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIGURATIONS ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONFIG_KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIG_AUDIT_6074 ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, CONFIG_KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIG_CHANGES ( CHANGE_ID STRING PRIMARY KEY, KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIG_CHANGES_09 ( CHANGE_ID STRING PRIMARY KEY, CONFIG_KEY STRING, OLD_VAL VARIANT, NEW_VAL VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONFIG_LOGS_6075 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONTACT_DIRECTORY ( CONTACT_ID STRING PRIMARY KEY, NAME STRING, EMAIL STRING, ROLE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONTACT_DIRECTORY ( CONTACT_ID STRING PRIMARY KEY, NAME STRING, ROLE STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_CONTACT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CONTACT_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_COVERAGE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TENANT_ID STRING, COVERAGE_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARDS_06 ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_LAYOUTS ( LAYOUT_ID STRING PRIMARY KEY, NAME STRING, WIDGETS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_METRICS_09 ( METRIC_ID STRING PRIMARY KEY, VIEW_ID STRING, METRIC_DEF VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_TILES ( TILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_VIEWS ( VIEW_ID STRING PRIMARY KEY, NAME STRING, DEFINITION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_VIEWS_09 ( VIEW_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DASHBOARD_WIDGETS ( WIDGET_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_DOCUMENT_NOTES ( NOTE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ESCALATION_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, RULE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ESCALATION_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LEVEL STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION JSON, ACTION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_EVENTS ( EVENT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_ADOPTION_METRICS ( MET_ID STRING PRIMARY KEY, FEATURE_ID STRING, TENANT_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, FEATURE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_FLAGS_HISTORY ( HIST_ID STRING PRIMARY KEY, FLAG_NAME STRING, OLD_VALUE BOOLEAN, NEW_VALUE BOOLEAN, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_FLAG_HISTORY ( HIST_ID STRING PRIMARY KEY, FLAG_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_FLAG_OVERRIDES ( OV_ID STRING PRIMARY KEY, FEATURE_KEY STRING, SCOPE_REF STRING, OVERRIDE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_ROLLBACKS ( ROLLBACK_ID STRING PRIMARY KEY, FEATURE_ID STRING, REVERTED_BY STRING, REVERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_TOGGLE_REQUESTS ( REQ_ID STRING PRIMARY KEY, FEATURE_NAME STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_TOGGLE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_USAGE_SUMMARY ( SUM_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEATURE_USAGE_TRENDS ( TREND_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, TREND_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_12 ( FB_ID STRING PRIMARY KEY, ANN_ID STRING, USER STRING, FEEDBACK TEXT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_ACTIONS ( ACTION_ID STRING PRIMARY KEY, LOOP_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, FB_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_INDEX ( FB_ID STRING PRIMARY KEY, ADMIN_USER STRING, FEEDBACK_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_INDEX ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, CATEGORY STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_LOOP ( LOOP_ID STRING PRIMARY KEY, SOURCE STRING, FEEDBACK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_QUEUE ( FB_ID STRING PRIMARY KEY, AUTHOR STRING, MESSAGE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, HANDLED_BY STRING, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FINOPS_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FINOPS_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SNAPSHOT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_FINOPS_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_HEALTHCHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_HEARTBEAT_09 ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_INCIDENT_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_INCIDENT_METRICS ( MET_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_ALERTS ( ALERT_ID STRING PRIMARY KEY, KPI_ID STRING, THRESHOLD JSON, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_RESULTS ( RES_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, KPI_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_RUNS ( RUN_ID STRING PRIMARY KEY, KPI_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_RUNS ( RUN_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KPI_VALUES ( VAL_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_KVSTORE ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_LOCKOUTS_08 ( LOCKOUT_ID STRING PRIMARY KEY, ADMIN_ID STRING, REASON STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_LOGIN_ATTEMPTS_08 ( ATTEMPT_ID STRING PRIMARY KEY, ADMIN_ID STRING, SUCCESS BOOLEAN, IP STRING, USER_AGENT STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_MAINTENANCE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, MAINT_ID STRING, ENTRY JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_MAINTENANCE_WINDOWS_6287 ( WINDOW_ID STRING PRIMARY KEY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTES ( NOTE_ID STRING PRIMARY KEY, ADMIN_USER STRING, CONTEXT VARIANT, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTES ( NOTE_ID STRING PRIMARY KEY, ENTITY_REF STRING, NOTE TEXT, AUTHOR STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTICE_BOARD ( NOTICE_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTICE_DISPATCHES ( DISPATCH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_SCOPE VARIANT, STATUS STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTICE_HISTORY ( NOTICE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, PUBLISHED_BY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTICE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS ( NOTIFY_ID STRING PRIMARY KEY, CONTEXT VARIANT, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ADMIN_USER STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TARGET_ROLE STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS_03 ( NOTIFY_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, LEVEL STRING, CONTEXT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS_07 ( NOTIF_ID STRING PRIMARY KEY, ADMIN_ID STRING, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS_09 ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY VARIANT, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATIONS_12 ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, TARGET_ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_CHANNELS ( CHANNEL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, ADMIN_REF STRING, NOTIF_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_HISTORY ( LOG_ID STRING PRIMARY KEY, PREF_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_LOGS_6103 ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ADMIN_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ADMIN_USER STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_PREFERENCES_V2 ( PREF_ID STRING PRIMARY KEY, ADMIN_USER STRING, CHANNELS ARRAY, CONDITIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_REGISTRY_6102 ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_SENDS ( SEND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_SCOPE VARIANT, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_SEND_RESULTS ( RES_ID STRING PRIMARY KEY, SEND_ID STRING, DETAIL VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_NOTIFICATION_TEMPLATES_V2 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY CLOB, LOCALE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONBOARDING_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, NAME STRING, REQUIRED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, ITEM_ID STRING, PERFORMED_BY STRING, STATUS STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, DESCRIPTION CLOB, OWNER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LEVEL INT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ONCALL_REF STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_PLAYBOOKS ( PLAY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, ADMIN_USER STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, TEAM_REF STRING, MEMBERS ARRAY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ROTATION ( ROT_ID STRING PRIMARY KEY, TEAM_REF STRING, MEMBERS ARRAY, ROTATION_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ONCALL_RUNS ( RUN_ID STRING PRIMARY KEY, PLAY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATIONAL_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SNAPSHOT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATIONAL_NOTES ( NOTE_ID STRING PRIMARY KEY, CONTEXT VARIANT, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATIONAL_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATIONAL_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATIONAL_SUMMARY_MV ( MV_ID STRING PRIMARY KEY, SCOPE STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXEC_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATION_LOGS_6375 ( LOG_ID STRING PRIMARY KEY, OP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATION_METRICS ( MET_ID STRING PRIMARY KEY, OP_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATION_QUEUE_6374 ( OP_ID STRING PRIMARY KEY, OP_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_OPERATION_RUN_LOGS ( LOG_ID STRING PRIMARY KEY, PB_ID STRING, EXEC_ID STRING, LOG_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PATCH_ROLLBACKS ( ROLLBACK_ID STRING PRIMARY KEY, PATCH_ID STRING, ROLLED_BACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, ROLE STRING, RESOURCE STRING, ACTIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PERMISSIONS_LOG ( LOG_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PB_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_HISTORY ( HIST_ID STRING PRIMARY KEY, PB_ID STRING, RUN_ID STRING, ACTIONS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_INDEX ( PLAY_ID STRING PRIMARY KEY, TITLE STRING, STEPS VARIANT, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_LIBRARY ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_METRICS ( METRIC_ID STRING PRIMARY KEY, PB_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_TEMPLATES ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PLAYBOOK_USAGE ( USAGE_ID STRING PRIMARY KEY, PB_ID STRING, EXEC_REF STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICIES_12 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_AUDIT_12 ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_CATEGORIZATION_6130 ( CAT_ID STRING PRIMARY KEY, POLICY_ID STRING, CATEGORY STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_CHANGES ( CHANGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGE JSON, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, CHANGES VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_EFFECTIVENESS ( EFFECT_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, INSTANCE_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_EXCEPTION_METRICS ( METRIC_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_HISTORY ( HIST_ID STRING PRIMARY KEY, RULE_ID STRING, OLD JSON, NEW JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_LIBRARY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_METRICS ( MET_ID STRING PRIMARY KEY, POLICY_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_QA_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, QA_ASSIGNEE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_QA_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_REVIEW_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_ID STRING, REVIEW_JSON VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_ROLLBACK_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_USAGE ( USAGE_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_USAGE ( USAGE_ID STRING PRIMARY KEY, POLICY_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, ENTITY_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PRIVILEGE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, ADMIN_USER STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PRIVILEGE_ESCALATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ADMIN_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PRIVILEGE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PRIV_ESCALATION_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_PRIV_ESCALATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, TARGET_PRIV STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_QUICK_ACTIONS ( ACTION_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RBAC_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RBAC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, GRANTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RELEASE_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, VERSION STRING, RELEASE_DATE TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REPORTS_07 ( REPORT_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REPORT_RUNS_07 ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, ITEM_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REVIEW_TASKS ( TASK_ID STRING PRIMARY KEY, TARGET_REF STRING, ASSIGNED_TO STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_REVIEW_WORK_ITEMS ( ITEM_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEM_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RISK_ACCEPTANCE_LOG ( LOG_ID STRING PRIMARY KEY, CHANGE_ID STRING, RISK_JSON VARIANT, ACCEPTED_BY STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROADMAP_REGISTRY ( ROADMAP_ID STRING PRIMARY KEY, TITLE STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROADMAP_UPDATES ( UPDATE_ID STRING PRIMARY KEY, ROADMAP_ID STRING, UPDATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS ARRAY, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES_04 ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLES_07 ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ROLE_ID STRING, ADMIN_USER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ROLE_ID STRING, USER_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_ASSIGNMENTS_07 ( ASSIGN_ID STRING PRIMARY KEY, ADMIN_ID STRING, ROLE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_GRANTS ( GRANT_ID STRING PRIMARY KEY, ROLE_NAME STRING, PRINCIPAL STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_GRANTS ( GRANT_ID STRING PRIMARY KEY, ROLE_NAME STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_LOGS ( LOG_ID STRING PRIMARY KEY, ASSIGN_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_ROLE_MEMBERS_04 ( MEMBER_ID STRING PRIMARY KEY, ROLE_ID STRING, USER_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RUNBOOKS ( RB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_RUNBOOK_REVISIONS ( REV_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, REV_NOTE STRING, REVISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SAVED_QUERIES ( QUERY_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SCHEDULED_MAINT ( MAINT_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE JSON, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SCHEDULED_TASKS ( TASK_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, OWNER STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SNAPSHOT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_INCIDENT_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SEVERITY STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, SUMMARY CLOB, SEVERITY STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_PATCHES ( PATCH_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_REVIEW_QUEUE ( REQ_ID STRING PRIMARY KEY, ITEM_JSON VARIANT, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SECURITY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SERVICE_ROTATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SERVICE_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ANALYSIS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SERVICE_ROTATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SESSIONS_08 ( SESSION_ID STRING PRIMARY KEY, ADMIN_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SESSION_ACTIVITIES_08 ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PAYLOAD VARIANT, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SESSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, SESSION_REF STRING, ACTION STRING, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SESSION_AUDIT ( SESSION_AUDIT_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_REF STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SETTINGS ( SETTING_KEY STRING PRIMARY KEY, SETTING_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SETTINGS_04 ( SETTING_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLA_BREACH_HIST ( HIST_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLA_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, SLA_ID STRING, TENANT_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLA_LOGS_6125 ( LOG_ID STRING PRIMARY KEY, SLA_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLA_SUMMARY ( SLA_SUM_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLA_TARGETS_6124 ( SLA_ID STRING PRIMARY KEY, NAME STRING, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SLO_REPORTS ( REPORT_ID STRING PRIMARY KEY, SCOPE STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_STAGING ( STAGE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ADMIN_USER STRING, NOTIF_LEVELS ARRAY, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASKS ( TASK_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASKS_12 ( TASK_ID STRING PRIMARY KEY, NAME STRING, COMMAND STRING, SCHEDULE STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, TASK_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_LOGS ( LOG_ID STRING PRIMARY KEY, ADMIN_TASK_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_LOGS ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, OUTPUT VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_LOGS_6109 ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_METRICS ( MET_ID STRING PRIMARY KEY, TASK_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_QUEUE ( ADMIN_TASK_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_RUNS ( RUN_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, OUTPUT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_RUNS_12 ( RUN_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, LOGS VARIANT, STARTED_AT TIMESTAMP_LTZ, FINISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TASK_TEMPLATES_6108 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SCOPE STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TELEMETRY_EVENTS ( EVENT_ID STRING PRIMARY KEY, MODULE STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TELEMETRY_EVENTS ( EVT_ID STRING PRIMARY KEY, COMPONENT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_THREAT_RESPONSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_THREAT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TILE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TILE_ID STRING, PAYLOAD VARIANT, SNAP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_TODO ( TODO_ID STRING PRIMARY KEY, ASSIGNED_TO STRING, TASK STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_UI_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, ADMIN_USER STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_UI_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, ADMIN_USER STRING, ACTION STRING, TARGET_REF STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_UI_SESSION_INDEX ( SESSION_ID STRING PRIMARY KEY, ADMIN_USER STRING, STARTED_AT TIMESTAMP_LTZ, LAST_ACTIVE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_USERS_07 ( ADMIN_ID STRING PRIMARY KEY, USER_REF STRING, ROLES ARRAY, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_VIOLATION_RESOLUTION_WF ( WF_ID STRING PRIMARY KEY, VIOL_ID STRING, STEPS VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_VULNERABILITY_REPORTS ( REP_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, DETAILS CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_VULNERABILITY_TRACKING ( TRACK_ID STRING PRIMARY KEY, REP_ID STRING, STATUS STRING, ASSIGNED_TO STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_WORKFLOW_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_INDEX INT, ACTION_JSON VARIANT, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_WORKFLOW_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INITIATED_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ADMIN_WORKFLOW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_BILLING_REPORTS ( REPORT_ID STRING PRIMARY KEY, PARAMETERS VARIANT, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_QUERIES ( QUERY_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_ID STRING, EXECUTED_BY STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DURATION_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_QUERY_REGISTRY ( QUERY_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_QUERY_REGISTRY ( QUERY_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT CLOB, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AD_HOC_REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AFFIDAVITS_03 ( AFFIDAVIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TEXT CLOB, SIGNED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ACTION_LOGS ( LOG_ID STRING PRIMARY KEY, AGENT_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ACTIVITY_LOGS ( LOG_ID STRING PRIMARY KEY, AGENT_REF STRING, ACTIVITY_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_BACKEND_HEALTH ( HB_ID STRING PRIMARY KEY, BACKEND_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AGENT_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, AGENT_ID STRING, CAPACITY_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_COMPATIBILITY_MATRIX ( MAT_ID STRING PRIMARY KEY, AGENT_REF STRING, CAPABILITIES VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_CONFIG ( AGENT_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_CONFIG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, AGENT_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_DEPLOYMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_DEPLOYMENT_RUNS ( RUN_ID STRING PRIMARY KEY, AGENT_ID STRING, VERSION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ERROR_METRICS ( METRIC_ID STRING PRIMARY KEY, AGENT_ID STRING, ERROR_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ERROR_REPORTS ( ERR_ID STRING PRIMARY KEY, RUN_ID STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_FAILURE_DLQ ( DLQ_ID STRING PRIMARY KEY, RUN_ID STRING, ERROR CLOB, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_FAILURE_PATTERNS ( PATTERN_ID STRING PRIMARY KEY, AGENT_ID STRING, PATTERN_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_HEARTBEAT_HISTORY ( HB_ID STRING PRIMARY KEY, AGENT_ID STRING, STATUS STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AGENT_LOAD_BALANCER_REGISTRY ( REG_ID STRING PRIMARY KEY, AGENT_ID STRING, BACKENDS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_PROVENANCE_STORE ( PROV_ID STRING PRIMARY KEY, RUN_ID STRING, PROVENANCE JSON, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RELEASE_NOTES ( NOTE_ID STRING PRIMARY KEY, AGENT_ID STRING, VERSION STRING, NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RESTART_LOGS ( LOG_ID STRING PRIMARY KEY, AGENT_ID STRING, RESTARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RESULT_INDEX ( IDX_ID STRING PRIMARY KEY, AGENT_ID STRING, RESULT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, AGENT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ROLLBACK_REQUESTS ( REQ_ID STRING PRIMARY KEY, AGENT_ID STRING, TO_VERSION STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RUN_EVENTS ( EVT_ID STRING PRIMARY KEY, RUN_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RUN_HISTORIES ( HISTORY_ID STRING PRIMARY KEY, AGENT_ID STRING, INPUT JSON, OUTPUT JSON, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, AGENT_ID STRING, INPUT VARIANT, OUTPUT VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_RUN_INDEX ( RUN_ID STRING PRIMARY KEY, AGENT_REF STRING, INPUT VARIANT, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_SCALING_EVENTS ( EVT_ID STRING PRIMARY KEY, AGENT_ID STRING, ACTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AGENT_SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, AGENT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_STATUS ( STATUS_ID STRING PRIMARY KEY, AGENT_ID STRING, HOST STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AGENT_TASK_QUEUE ( TASK_ID STRING PRIMARY KEY, AGENT_ID STRING, TASK_TYPE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, AGENT_ID STRING, STATUS STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AGENT_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, AGENT_ID STRING, METRICS VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_TELEMETRY_METRICS ( MET_ID STRING PRIMARY KEY, AGENT_ID STRING, METRICS VARIANT, COLLECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_TELEMETRY_STORE ( TELE_ID STRING PRIMARY KEY, AGENT_ID STRING, TELE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_VERSION_REGISTRY ( AGENT_VER_ID STRING PRIMARY KEY, AGENT_ID STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGENT_VERSION_REGISTRY ( VER_ID STRING PRIMARY KEY, AGENT_ID STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGGREGATE_AUDIT_LOGS_6143 ( LOG_ID STRING PRIMARY KEY, AGG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AGING_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BUCKETS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ANNOTATION_FEEDBACK ( FB_ID STRING PRIMARY KEY, ANN_ID STRING, USER_REF STRING, RATING INT, NOTES CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ANNOTATION_INDEX_6043 ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ASSIST_CONFIDENCE_METRICS ( METRIC_ID STRING PRIMARY KEY, PROMPT_ID STRING, CONFIDENCE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ASSIST_FEEDBACK ( FB_ID STRING PRIMARY KEY, PROMPT_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ASSIST_PROMPTS ( PROMPT_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_ASSIST_USAGE ( USAGE_ID STRING PRIMARY KEY, PROMPT_ID STRING, USER_REF STRING, INPUT_HASH STRING, OUTPUT_SUMMARY CLOB, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_EXPLAINABILITY ( EXPL_ID STRING PRIMARY KEY, REQUEST_ID STRING, MODEL_REF STRING, EXPLANATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_EXPLAINABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, MODEL_ID STRING, EXPLAIN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_EXPLAINABILITY_LOGS_14 ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, EXPLANATION VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_MODEL_VALIDATION_QUEUE ( Q_ID STRING PRIMARY KEY, MODEL_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_MODEL_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, METRICS VARIANT, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_MODERATION_ISSUES ( ISSUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE_JSON VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_MODERATION_WORKFLOW ( WF_ID STRING PRIMARY KEY, ISSUE_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_QA_AGGREGATES ( AGG_ID STRING PRIMARY KEY, METRIC_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_QA_FEEDBACK ( FEEDBACK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_REQUESTS ( REQ_ID STRING PRIMARY KEY, TYPE STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_RESPONSES ( RESP_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_TRAINING_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, DATASET_ID STRING, MODEL_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AI_TRAINING_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERTS ( ALERT_ID STRING PRIMARY KEY, ALERT_TYPE STRING, PAYLOAD VARIANT, SEVERITY STRING, ALERT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, RESOLVED BOOLEAN DEFAULT FALSE, RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERTS( ALERT_ID STRING PRIMARY KEY, ALERT_TYPE STRING, PAYLOAD VARIANT, SEVERITY STRING, RESOLVED BOOLEAN DEFAULT FALSE, ALERT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACKED_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACK_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACKS ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACKED_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACTION_HISTORY_6060 ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ACTION_LOGS_6061 ( LOG_ID STRING PRIMARY KEY, ACTION_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DEDUP_INDEX ( DEDUP_ID STRING PRIMARY KEY, ALERT_HASH STRING, FIRST_SEEN AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DEFINITIONS ( ALERT_DEF_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DELIVERY_HISTORY ( DELIVERY_ID STRING PRIMARY KEY, POLICY_ID STRING, DESTINATION STRING, STATUS STRING, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DELIVERY_LOG ( DELIVERY_ID STRING PRIMARY KEY, ALERT_ID STRING, PRINCIPAL STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ALERT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, ALERT_REF STRING, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISMISSAL_LOGS ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, DISMISSED_BY STRING, REASON CLOB, DISMISSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_LOG ( DISPATCH_ID STRING PRIMARY KEY, ALERT_ID STRING, CHANNEL STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_LOG ( DISPATCH_ID STRING PRIMARY KEY, ALERT_ID STRING, CHANNEL STRING, STATUS STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_LOG ( DISPATCH_ID STRING PRIMARY KEY, ALERT_ID STRING, HANDLER_ID STRING, RESULT VARIANT, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_LOGS ( DISPATCH_ID STRING PRIMARY KEY, ALERT_ID STRING, SUB_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_DISPATCH_QUEUE ( Q_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, FIRE_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_CONFIG ( CONFIG_ID STRING PRIMARY KEY, ALERT_TYPE STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, ESCALATION_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, ALERT_TYPE STRING, ESCALATION_CHAIN VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, ALERT_TYPE STRING, ESCALATION_PATH VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_EVENTS_07 ( EVENT_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, FIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_EVENTS_10 ( ALERT_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_EVENTS_12 ( ALERT_ID STRING PRIMARY KEY, POLICY_ID STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_FEEDBACK_QUEUE ( QUEUE_ID STRING PRIMARY KEY, ALERT_ID STRING, FEEDBACK JSON, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, OUTCOME VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_FIRING_HISTORY ( FIRE_ID STRING PRIMARY KEY, ALERT_ID STRING, FIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT, HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.ALERT_HANDLERS ( HANDLER_ID STRING PRIMARY KEY, ALERT_NAME STRING, HANDLER_TYPE STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_HISTORY ( AH_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_HISTORY ( AH_ID STRING PRIMARY KEY, ALERT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_HISTORY_02 ( HISTORY_ID STRING PRIMARY KEY, RULE_ID STRING, BUNDLE_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT, RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.ALERT_HISTORY_MV ( MV_ID STRING PRIMARY KEY, ALERT_ID STRING, POLICY_ID STRING, SEVERITY STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_INCIDENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ALERT_ID STRING, INCIDENT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_INCIDENT_CORRELATION ( CORR_ID STRING PRIMARY KEY, ALERT_ID STRING, INCIDENT_ID STRING, CORRELATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_INCIDENT_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, INCIDENT_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_LAST_SENT ( LAST_ID STRING PRIMARY KEY, SUB_ID STRING, LAST_SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_LOG ( ALERT_ID STRING PRIMARY KEY, ALERT_NAME STRING, LEVEL STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ALERT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ALERT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ALERT_ID STRING, CHANNEL STRING, TARGET STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_POLICIES_12 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_POSTMORTEM_REPORTS ( PM_ID STRING PRIMARY KEY, EXEC_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, SUB_ID STRING, MAX_PER_HOUR INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RATE_USAGE ( USAGE_ID STRING PRIMARY KEY, SUB_ID STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RETRY_TRACKER ( TRACKER_ID STRING PRIMARY KEY, ALERT_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES_03 ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES_09 ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RULES_10 ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS ARRAY, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RUNBOOK_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TRIGGER_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_RUNBOOK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIBERS ( SUB_ID STRING PRIMARY KEY, ALERT_TYPE STRING, SUBSCRIBER STRING, PREFERENCES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIBERS ( SUB_ID STRING PRIMARY KEY, RULE_ID STRING, CHANNEL STRING, DESTINATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ADMIN_USER STRING, ALERT_RULE_ID STRING, CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ALERT_TYPE STRING, SUBSCRIBER STRING, CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, PRINCIPAL STRING, ALERT_TYPE STRING, CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_KEY STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTIONS_07 ( SUB_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, CHANNELS ARRAY, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUBSCRIPTION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERTS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSIONS ( SUPPRESS_ID STRING PRIMARY KEY, ALERT_TYPE STRING, SUPPRESS_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSIONS ( SUPPRESS_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSIONS ( SUPP_ID STRING PRIMARY KEY, RULE_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUPP_ID STRING, ACTION STRING, BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_HISTORY ( HIST_ID STRING PRIMARY KEY, RULE_ID STRING, ALERT_ID STRING, SUPPRESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_HISTORY ( H_ID STRING PRIMARY KEY, SUPPRESS_ID STRING, ALERT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_HITS ( HIT_ID STRING PRIMARY KEY, RULE_ID STRING, ALERT_ID STRING, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_INDEX ( SUPP_ID STRING PRIMARY KEY, ALERT_KEY STRING, SUPPRESSION_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_REGISTRY ( SUPP_ID STRING PRIMARY KEY, RULE_REF STRING, TENANT_ID STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RULES ( RULE_ID STRING PRIMARY KEY, ALERT_KEY STRING, SUPPRESSION_WINDOW_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RULES ( RULE_ID STRING PRIMARY KEY, ALERT_TYPE STRING, SUPPRESSION_WINDOW_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RULES ( RULE_ID STRING PRIMARY KEY, POLICY_ID STRING, WINDOW JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_SUPPRESSION_RUNS ( RUN_ID STRING PRIMARY KEY, SUPP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ALGORITHM_COMPAT_MATRIX ( MATRIX_ID STRING PRIMARY KEY, ALG_FROM STRING, ALG_TO STRING, COMPAT BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CASE_QUEUE ( CASE_QID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AML_CASE_RESULTS ( RES_ID STRING PRIMARY KEY, CASE_QID STRING, OUTCOME JSON, CLOSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS ( AML_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHECK_RESULT STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS ( AML_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHECK_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS ( AML_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHECK_RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS ( CHECK_ID STRING PRIMARY KEY, SIGNER_ID STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS_08 ( AML_ID STRING PRIMARY KEY, SIGNER_ID STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECKS_11 ( AML_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_JOBS ( JOB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, AML_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_EVENT_LOG ( AML_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVENT JSON, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AML_KYC_CHECKS ( CHECK_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHECK_PROVIDER STRING, RESULT STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_MONITORING_INDEX ( MON_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_SCREENING_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, MATCHES VARIANT, SCREENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AML_SCREENING_JOBS ( JOB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AML_SCREENING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANALYTICS_ALERTS ( ALERT_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANALYTICS_EVENTS ( EVT_ID STRING PRIMARY KEY, EVENT_NAME STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_HISTORY ( AH_ID STRING PRIMARY KEY, JOB_ID STRING, ANCHOR_TXID STRING, PUBLISHED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_CHAIN STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, TX_ID STRING, STATUS STRING, DETAILS VARIANT, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHORING_TX_INDEX ( TX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN_REF STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, COT_ID STRING, ANCHOR_TXID STRING, VERIFIED_AT TIMESTAMP_LTZ, VERIFIED BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER STRING, TX_REF STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_INDEX ( IDX_ID STRING PRIMARY KEY, TX_ID STRING, BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, TX_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_LOGS_6251 ( LOG_ID STRING PRIMARY KEY, ANCHOR_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_MONITOR_JOBS ( JOB_ID STRING PRIMARY KEY, PUB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_MONITOR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PROOFS ( PROOF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TXID STRING, PROOF_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PROOFS ( PROOF_ID STRING PRIMARY KEY, TX_ID STRING, PROOF_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PROVIDERS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLICATION_INDEX ( PUB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NETWORK STRING, TXID STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLICATION_JOBS ( JOB_ID STRING PRIMARY KEY, ANCHOR_ID STRING, STATUS STRING, ATTEMPTS INT DEFAULT 0, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, NETWORK STRING, TXID STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLISH_JOBS_13 ( JOB_ID STRING PRIMARY KEY, PROV_ID STRING, STATUS STRING, PUBLISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLISH_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NETWORK STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLISH_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LEDGER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLISH_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, TX_HASH STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_PUBLISH_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, TX_ID STRING, STATUS STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILE ( RECON_ID STRING PRIMARY KEY, ANCHOR_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILE_RESULTS ( RES_ID STRING PRIMARY KEY, ANCHOR_ID STRING, OK BOOLEAN, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, ANCHOR_ID STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, TX_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILIATION ( REC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TX_ID STRING, STATUS STRING, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECONCILIATIONS_07 ( RECON_ID STRING PRIMARY KEY, TX_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECON_LOG ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EXPECTED_HASH STRING, SEEN_HASH STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RECORDS_09 ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TYPE STRING, ANCHOR_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_REGISTRY_6250 ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN_REF STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_REQUESTS ( ANCHOR_REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RESPONSES ( ANCHOR_RESP_ID STRING PRIMARY KEY, ANCHOR_REQ_ID STRING, TXID STRING, EXPLORER_URL STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TX_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_STATUS_CACHE ( CACHE_ID STRING PRIMARY KEY, TX_ID STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_SUBMISSIONS ( SUB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TRANSACTIONS ( TX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN STRING, TX_HASH STRING, CONFIRMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TRANSACTIONS_05 ( TX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TYPE STRING, ANCHOR_REF STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TRANSACTIONS_07 ( TX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN STRING, TX_HASH STRING, PUBLISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TXID_REGISTRY ( REG_ID STRING PRIMARY KEY, ANCHOR_ID STRING, TXID STRING, NETWORK STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TX_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TX_HASH STRING, CHAIN STRING, ANCHORED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_TX_INDEX ( TX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, BLOCKCHAIN_REF STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, TX_REF STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_VERIF_REQS ( REQ_ID STRING PRIMARY KEY, MANIFEST_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANCHOR_VERIF_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, VERIFIED BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_ACTIVITY_LOG ( LOG_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_ACTIVITY_LOG ( LOG_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, BY_USER STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ANNO_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ANNO_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ANN_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_HISTORY ( H_ID STRING PRIMARY KEY, ANNOTATION_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_INDEX ( IDX_ID STRING PRIMARY KEY, ANNOT_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_METRICS ( MET_ID STRING PRIMARY KEY, ANNOT_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_JOBS ( JOB_ID STRING PRIMARY KEY, ANNOT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_QUEUE ( Q_ID STRING PRIMARY KEY, ANNOT_ID STRING, MODERATOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_QUEUE ( Q_ID STRING PRIMARY KEY, ANN_ID STRING, REASON STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, VERDICT STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_PERMISSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ANNOT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_PERMISSION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REGISTRY ( ANNOT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANNOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REGISTRY ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, AUTHOR_REF STRING, ANNOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_LOGS_6045 ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, ANNOT_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, ANNO_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, RES_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_QUEUE_6044 ( QUEUE_ID STRING PRIMARY KEY, ANNOT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_SENTIMENT_INDEX ( IDX_ID STRING PRIMARY KEY, ANNOT_ID STRING, SENTIMENT_SCORE NUMBER, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_STORE ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, ANNOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_STORE ( ANNO_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE INT, ANNOTATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_TAGGING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOTATION_VERSION_HISTORY ( VER_ID STRING PRIMARY KEY, ANNOT_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOUNCEMENT_BROADCASTS_6285 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, CHANNELS ARRAY, SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNOUNCEMENT_LOGS_6286 ( LOG_ID STRING PRIMARY KEY, ANN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNUAL_AUDIT_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, AUDIT_ID STRING, OUTCOME VARIANT, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANNUAL_AUDIT_REGISTRY ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, YEAR INT, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, ANOM_ID STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, ENTITY_REF STRING, ALERT_TYPE STRING, SCORE NUMBER, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SCORE_ID STRING, LEVEL STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, IDX_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, PAYLOAD VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_INDEX ( ANOM_ID STRING PRIMARY KEY, SCOPE STRING, METRICS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_INDEX ( IDX_ID STRING PRIMARY KEY, SCOPE VARIANT, PATTERN JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, SCORE NUMBER, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_DETECTION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_INVESTIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, ANOM_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANOMALY_INVESTIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANONYMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ANONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTcome VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_ACCESS_LOGS_03 ( LOG_ID STRING PRIMARY KEY, TOKEN_ID STRING, ENDPOINT STRING, REQUEST_PAYLOAD VARIANT, RESPONSE_CODE INT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_AUDIT ( API_AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, API_NAME STRING, REQUEST_PAYLOAD VARIANT, RESPONSE_PAYLOAD VARIANT, STATUS STRING, CALLED_BY STRING, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.API_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, METHOD STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, CALL_ID STRING, API_NAME STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_AUDIT_SAMPLE ( SAMPLE_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, RESPONSE_CODE INT, LATENCY_MS NUMBER, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_BACKOFF_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENDPOINT STRING, LAST_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPT_COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.API_BACKOFF_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CALL_AUDIT ( CALL_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, STATUS_CODE INT, RESPONSE_TIME_MS NUMBER, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CALL_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, WINDOW_SECONDS INT, MAX_CALLS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CALL_USAGE ( USG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, WINDOW_START TIMESTAMP_LTZ, CALLS INT DEFAULT 0, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENTS ( CLIENT_ID STRING PRIMARY KEY, CLIENT_NAME STRING, CLIENT_SECRET_HASH STRING, OWNER_ACCOUNT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENTS_02 ( CLIENT_ID STRING PRIMARY KEY, CLIENT_NAME STRING, CLIENT_SECRET_HASH STRING, OWNER_ACCOUNT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ACTIVITY ( ACT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ACTIVITY ( ACT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, METHOD STRING, STATUS_CODE INT, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ALERTS ( ALERT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_AUDIT_6240 ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_AUDIT_LOGS_6241 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_BLOCKLIST ( BL_ID STRING PRIMARY KEY, CLIENT_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_CONSENT_REGISTRY ( REG_ID STRING PRIMARY KEY, CLIENT_ID STRING, CONSENTS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, REG_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ERROR_RATES ( METRIC_ID STRING PRIMARY KEY, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, ERR_RATE NUMBER );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_PERMISSIONS ( CLIENT_ID STRING PRIMARY KEY, CLIENT_NAME STRING, PERMISSIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, CLIENT_ID STRING, PERMISSION STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, CLIENT_ID STRING, PERMISSIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_QUOTA ( QUOTA_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMIT INT, WINDOW_SECONDS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_QUOTA_BREACHES ( BREACH_ID STRING PRIMARY KEY, CLIENT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_QUOTA_EVENTS ( EVENT_ID STRING PRIMARY KEY, CLIENT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_QUOTA_USAGE ( USG_ID STRING PRIMARY KEY, CLIENT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, RATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_REGISTRATIONS ( CLIENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, REDIRECT_URIS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CLIENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ROTATIONS ( ROT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_ROTATION_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_SCOPES ( SCOPE_ID STRING PRIMARY KEY, CLIENT_ID STRING, SCOPE_JSON VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_SCOPES ( SCOPE_ID STRING PRIMARY KEY, CLIENT_ID STRING, SCOPE_NAME STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_SECRETS ( SECRET_ID STRING PRIMARY KEY, CLIENT_ID STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_USAGE ( USAGE_ID STRING PRIMARY KEY, CLIENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_USAGE_HISTORY ( USAGE_ID STRING PRIMARY KEY, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, CALLS INT );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, METHOD STRING, STATUS_CODE INT, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_USAGE_QUOTA ( QUOTA_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMITS VARIANT, WINDOW STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, CLIENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CLIENT_WHITELIST ( WL_ID STRING PRIMARY KEY, CLIENT_ID STRING, ALLOWED_PREFIXES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, CLIENT_ID STRING, CONTRACT_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CONTRACT_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_CATALOG ( CONTRACT_ID STRING PRIMARY KEY, NAME STRING, SPEC CLOB, VERSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, DIFF VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, CONTRACT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_REGISTRY ( CONTRACT_ID STRING PRIMARY KEY, NAME STRING, SCHEMA JSON, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CONTRACT_REGISTRY ( CONTRACT_ID STRING PRIMARY KEY, NAME STRING, SPEC CLOB, VERSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CREDENTIAL_REGISTRY ( CRED_ID STRING PRIMARY KEY, CLIENT_ID STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_CREDENTIAL_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY_USER STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_DEPRECATION_NOTICES ( NOTICE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION STRING, MESSAGE CLOB, ANNOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, VERSION_ID STRING, MESSAGE CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_ERROR_LOGS ( ERROR_ID STRING PRIMARY KEY, API_KEY_ID STRING, ENDPOINT STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_GATEWAY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, PATH STRING, METHOD STRING, STATUS_CODE INT, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_GATEWAY_BAN_HISTORY ( H_ID STRING PRIMARY KEY, BAN_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_GATEWAY_IP_BANS ( BAN_ID STRING PRIMARY KEY, IP_ADDRESS STRING, REASON STRING, BANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_GATEWAY_THREAT_HITS ( HIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, TYPE STRING, DETAIL VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_INTEGRATION_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_INTEGRATION_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, INTEGRATION_KEY_HASH STRING, LIMIT_PER_MINUTE INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_INTEGRATION_TELEMETRY ( TELE_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS ( API_KEY_HASH STRING PRIMARY KEY, ACCOUNT_ID STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS ( API_KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS ( API_KEY_ID STRING PRIMARY KEY, OWNER STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS_05 ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS_13 ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH_STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS_14 ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS_15 ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEYS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, ACTION_BY STRING, META VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, API_KEY_ID STRING, ACTION STRING, BY_USER STRING, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, API_KEY_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, KEY_ID STRING, HEALTH_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_REVOCATIONS ( REV_ID STRING PRIMARY KEY, KEY_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATIONS ( ROT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATIONS_13 ( ROTATION_ID STRING PRIMARY KEY, KEY_ID STRING, PREV_HASH STRING, NEW_HASH STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_HISTORY ( ROTATION_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_BY STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OLD_KEY_HASH STRING, NEW_KEY_HASH STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_HISTORY ( ROTATION_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_BY STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OLD_KEY_HASH STRING, NEW_KEY_HASH STRING );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_HISTORY ( ROT_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, CLIENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, CLIENT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_LOG ( ROT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CLIENT_ID STRING, NEXT_ROTATION_AT TIMESTAMP_LTZ, POLICY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_USAGE ( USG_ID STRING PRIMARY KEY, KEY_ID STRING, ENDPOINT STRING, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_USAGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, USAGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_KEY_USAGE_LEDGER ( ENTRY_ID STRING PRIMARY KEY, API_KEY_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_QUOTA_HISTORY ( HIST_ID STRING PRIMARY KEY, PROFILE_ID STRING, USED NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_QUOTA_RESET_JOBS ( JOB_ID STRING PRIMARY KEY, PROFILE_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.API_QUOTA_RESET_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_QUOTA_USAGE_06 ( USAGE_ID STRING PRIMARY KEY, CLIENT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, USAGE_COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.API_QUOTA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, WINDOW_START TIMESTAMP_LTZ, CALLS INT, QUOTA INT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_COUNTERS ( COUNTER_ID STRING PRIMARY KEY, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MAX_PER_MIN INT, WINDOW_SECONDS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMITS_06 ( LIMIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_COUNTERS ( COUNTER_ID STRING PRIMARY KEY, PROFILE_ID STRING, KEY_REF STRING, COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_LOG ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_USAGE ( USAGE_ID STRING PRIMARY KEY, PROFILE_ID STRING, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_LIMIT_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, METRICS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_USAGE ( USAGE_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, ATTEMPTED INT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_RATE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, WINDOW_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_REQ_SIGNATURE_CHECKS ( CHECK_ID STRING PRIMARY KEY, REQUEST_REF STRING, VALID BOOLEAN, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THREAT_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THREAT_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_BINDINGS ( BIND_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, CLIENT_ID STRING, PROFILE_ID STRING, VIOLATION_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, CLIENT_ID STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, CLIENT_ID STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, CLIENT_ID STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, CLIENT_REF STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_THROTTLE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_TOKENS_03 ( TOKEN_ID STRING PRIMARY KEY, NAME STRING, TOKEN_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_TOKEN_ROTATION_HISTORY ( ROT_ID STRING PRIMARY KEY, TOKEN_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY STRING );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE ( USAGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ENDPOINT STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE ( USAGE_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_AGG ( AGG_ID STRING PRIMARY KEY, CLIENT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, CALLS INT, ERRORS INT );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, CLIENT_ID STRING, METRIC JSON, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_ALERT_EVENTS ( EVT_ID STRING PRIMARY KEY, PROFILE_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_ALERT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, THRESHOLDS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_CONSUMPTION ( CONSUMPTION_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, CONSUMED NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_METERING ( METER_ID STRING PRIMARY KEY, CLIENT_ID STRING, API_ENDPOINT STRING, CALL_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, API_CLIENT STRING, ENDPOINT STRING, CALL_COUNT INT, ERROR_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_POLICY_6062 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_QUOTA ( QUOTA_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_QUOTA ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, LIMIT_NAME STRING, LIMIT_VALUE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_KEY STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_SAMPLES ( SAMPLE_ID STRING PRIMARY KEY, CLIENT_ID STRING, USAGE_METRICS VARIANT, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_TOKENS ( TOKEN_ID STRING PRIMARY KEY, API_KEY_ID STRING, USAGE_COUNT NUMBER, RESET_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_VIOLATION_6063 ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.API_USAGE_VIOLATION_LOGS_6064 ( LOG_ID STRING PRIMARY KEY, VIOL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_VERSION_COMPAT_INDEX ( IDX_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION STRING, COMPAT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.API_VERSION_REGISTRY ( VERSION_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APM_TRACE_INDEX ( TRACE_ID STRING PRIMARY KEY, SERVICE_NAME STRING, DURATION_MS NUMBER, TRACE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPLIANCE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_OK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CR_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, ACTOR STRING, ACTION STRING, COMMENT STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, ACTOR STRING, ACTION STRING, COMMENTS STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ACTIONS_11 ( ACTION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STEP_REF STRING, ACTOR STRING, ACTION STRING, COMMENTS STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, INSTANCE_ID STRING, SUMMARY VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ESCALATIONS_11 ( ESCALATION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STEP_REF STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ESCALATIONS_12 ( ESCALATION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STEP_REF STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_ESCALATIONS_13 ( ESCALATION_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STEP_REF STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, PIPE_ID STRING, TARGET_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, WF_ID STRING, REF_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_INSTANCES_11 ( INSTANCE_ID STRING PRIMARY KEY, WF_ID STRING, TARGET_REF STRING, STATUS STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_LOGS_06 ( LOG_ID STRING PRIMARY KEY, INSTANCE_ID STRING, APPROVER STRING, ACTION STRING, NOTES CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TARGET_REF STRING, ROLE_ORDER ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_PIPELINES ( PIPE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, MATRIX_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_WORKFLOWS_11 ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVAL_WORKFLOW_LOGS_6321 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVER_ASSIGNMENTS_07 ( ASSIGN_ID STRING PRIMARY KEY, QUEUE_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.APPROVER_QUEUES_07 ( QUEUE_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, OBJECT_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, PACKET_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ARCHIVE_LOCATION STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, PACKET_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ARCHIVE_LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_AUDIT_INDEX ( INDEX_ID STRING PRIMARY KEY, MANIFEST_ID STRING, ARCHIVE_STAGE STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_ENCRYPTION_KEYS ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_INDEX_05 ( ARCH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ARCH_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_JOB_HISTORY ( HIST_ID STRING PRIMARY KEY, MAN_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_JOB_MANIFEST ( MAN_ID STRING PRIMARY KEY, JOB_ID STRING, OBJECTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_KEY_USAGE_LOG ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, REQUEST_ID STRING, FILES ARRAY, ARCHIVE_STAGE STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_POLICY_BINDINGS ( BINDING_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_REQUESTS_12 ( REQ_ID STRING PRIMARY KEY, TARGET STRING, FORMAT STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_REQUEST_LOGS_6053 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_REQUEST_QUEUE_6052 ( REQ_ID STRING PRIMARY KEY, BUNDLE_REF STRING, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_RESTORE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVAL_RETENTION_INDEX ( INDEX_ID STRING PRIMARY KEY, TARGET_REF STRING, RETENTION_POLICY_ID STRING, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_CONTROLS ( CTRL_ID STRING PRIMARY KEY, MANIFEST_ID STRING, POLICY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_METRICS ( MET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACCESS_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_REQ_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_AUDIT_HISTORY ( AUDIT_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, ARCHIVE_REF STRING, BUNDLE_ID STRING, ACTION STRING, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_AUDIT_INDEX_6214 ( AUDIT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_AUDIT_LOGS_6215 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_CATALOG ( CATALOG_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_CATALOG_INDEX ( ARCH_ID STRING PRIMARY KEY, LOCATION STRING, CHECKSUM STRING, BACKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_CATALOG_INDEX ( IDX_ID STRING PRIMARY KEY, MANIFEST_ID STRING, LOCATION STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_CHECKSUMS_04 ( ARCHIVE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_FAILURES ( FAIL_ID STRING PRIMARY KEY, MANIFEST_ID STRING, ERROR_DETAIL VARIANT, FAILED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, STAGE STRING, LAST_SYNC TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, TARGET_STAGE STRING, LAST_SYNCHRONIZED TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_HEALTH_METRICS ( MET_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, LAST_VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_INDEX ( ARCHIVE_INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CHECKSUM STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_INDEX ( INDEX_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, FILE_REF STRING, CHECKSUM STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_INDEX_13 ( ARCHIVE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_JOBS_09 ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_LOGS ( LOG_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, TARGET_STAGE STRING, OBJECTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_MANIFEST_INDEX ( MAN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, MANIFEST JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_MANIFEST_INDEX_6054 ( MANIFEST_ID STRING PRIMARY KEY, LOCATION STRING, FILE_COUNT INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_MANIFEST_LOCKS ( LOCK_ID STRING PRIMARY KEY, MANIFEST_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_MANIFEST_LOGS_6055 ( LOG_ID STRING PRIMARY KEY, MANIFEST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_METRICS ( MET_ID STRING PRIMARY KEY, LOCATION STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGES VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_POLICY_DEFINITIONS ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_PURGE_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_PURGE_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, ARCHIVE_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, EVIDENCE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, MANIFEST_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECALL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECONCILIATION ( REC_ID STRING PRIMARY KEY, ARCHIVE_LOCATION STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MISMATCHES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECON_QUEUE ( Q_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECON_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RECOVERY_TESTS ( TEST_ID STRING PRIMARY KEY, MANIFEST_ID STRING, TEST_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_REFERENCES ( REF_ID STRING PRIMARY KEY, ORIGINAL_REF STRING, ARCHIVE_LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_REPLICATION_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, TARGET_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_REPLICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_EVENTS ( EVT_ID STRING PRIMARY KEY, REQ_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ARCHIVE_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_REQUESTS ( REQ_ID STRING PRIMARY KEY, MANIFEST_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_REQUESTS ( REQ_ID STRING PRIMARY KEY, MANIFEST_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESTORED_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ARCHIVE_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RESULTS_09 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RETAIN_LOGS_6264 ( LOG_ID STRING PRIMARY KEY, ARCH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RETRIEVAL_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RETRIEVE_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_RETRIEVE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_STATUS ( ARCHIVE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STAGE_PATH STRING, ARCHIVED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, VALID BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_VERIFICATIONS ( VERIF_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, VERIFIED_AT TIMESTAMP_LTZ, RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ARCHIVE_VERIFICATION_METRICS ( MET_ID STRING PRIMARY KEY, MANIFEST_ID STRING, VERIFIED_COUNT INT, FAILED_COUNT INT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ARK_INDEX ( ARK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASSEMBLY_ERRORS ( ERROR_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASSEMBLY_LOCK_HISTORY ( LH_ID STRING PRIMARY KEY, LOCK_ID STRING, OBJECT_REF STRING, LOCKED_BY STRING, ACQUIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ASSEMBLY_METRICS ( METRIC_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASSEMBLY_RUNS ( RUN_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, LOG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ASSEMBLY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASSIGNMENT_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ASYNCHRONOUS_RENDER_CALLBACKS ( CB_ID STRING PRIMARY KEY, Q_ID STRING, CALLBACK_URL STRING, STATUS STRING, ATTEMPT_COUNT INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_CALLBACKS ( CALLBACK_ID STRING PRIMARY KEY, TARGET_URL STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_CALLBACKS_03 ( CALLBACK_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_CALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, CALLBACK_ID STRING, PAYLOAD VARIANT, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_CALLBACK_REGISTRY ( CALLBACK_ID STRING PRIMARY KEY, TARGET_URL STRING, METHOD STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_JOB_METRICS ( MET_ID STRING PRIMARY KEY, JOB_REF STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_JOB_MONITORING ( MON_ID STRING PRIMARY KEY, JOB_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_METRICS_04 ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ASYNC_WORKERS_07 ( WORKER_ID STRING PRIMARY KEY, TYPE STRING, PAYLOAD VARIANT, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, ATT_ID STRING, SUBJECT_REF STRING, ACCESS_TYPE STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_INDEX ( ATTACH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PATH STRING, CONTENT_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_MIME_INDEX ( ATT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, MIME_TYPE STRING, SIZE_BYTES NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_PURGE_HISTORY ( H_ID STRING PRIMARY KEY, Q_ID STRING, ATT_ID STRING, RESULT VARIANT, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, ATT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_PURGE_QUEUE ( Q_ID STRING PRIMARY KEY, ATT_ID STRING, TARGET_TIER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, ATT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_STORAGE_INDEX ( ATT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_STORAGE_INDEX ( ATT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ATTACH_REF STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTACHMENT_STORAGE_TIERS ( TIER_ID STRING PRIMARY KEY, NAME STRING, COST_PER_GB NUMBER, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TEMPLATE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTENT CLOB );

CREATE OR REPLACE TABLE DOCGEN.ATTESTATION_REPORTS ( REPORT_ID STRING PRIMARY KEY, ATTEST_ID STRING, STATUS STRING, REPORT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTESTATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ATTESTATION_VERIFICATION_LOG ( LOG_ID STRING PRIMARY KEY, ATTEST_ID STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ATTESTATION_VERIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, ATTEST_ID STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIO_EVIDENCE_INDEX ( AUDIO_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, DURATION_MS NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIO_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, MEDIA_ID STRING, FINGERPRINT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, LOG_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_CONTROL_EVENTS ( EVT_ID STRING PRIMARY KEY, OBJECT_REF STRING, ACTION STRING, SUBJECT_REF STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_GRANTS_12 ( GRANT_ID STRING PRIMARY KEY, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_POLICIES_12 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_PROFILE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACCESS_REQUESTS_12 ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ACTIVITY_STREAM_MV ( MV_ID STRING PRIMARY KEY, SCOPE STRING, STREAM_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_AGGREGATES ( AGG_ID STRING PRIMARY KEY, AGG_KEY STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_AGGREGATES_V2 ( AGG_ID STRING PRIMARY KEY, AGG_KEY STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SOURCE STRING );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ARCHIVAL_INDEX_11 ( ARCHIVE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CHAIN_LINKS ( LINK_ID STRING PRIMARY KEY, AUDIT_REF STRING, PREV_REF STRING, NEXT_REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CHAIN_STATES ( STATE_ID STRING PRIMARY KEY, CHAIN_ID STRING, STATE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CHECKSUMS ( CHECKSUM_ID STRING PRIMARY KEY, RESOURCE_REF STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CHECKSUM_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPARISON_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPARISON_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DELTA JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, CHECKLIST_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ISSUES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_COMPLIANCE_RUNS ( RUN_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CONFIGURATIONS_07 ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CONFIGURATIONS_11 ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_CONFIG_ENTRIES_08 ( ENTRY_ID STRING PRIMARY KEY, CONFIG_KEY STRING, CONFIG_VAL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_DIGEST_INDEX ( DIGEST_ID STRING PRIMARY KEY, AUDIT_REF STRING, DIGEST STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_DIGEST_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, DIGEST_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENTS_11 ( EVENT_ID STRING PRIMARY KEY, CONFIG_ID STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_DISPATCH_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_DISPATCH_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, RETENTION_POLICY STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_SUMMARY_MV ( SUMMARY_ID STRING PRIMARY KEY, SCOPE STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, TYPE_ID STRING, TEMPLATE_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVENT_TYPES ( TYPE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVIDENCE_CROSSREFS ( XF_ID STRING PRIMARY KEY, AUDIT_ID STRING, EVID_ID STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVIDENCE_INDEX ( EVID_ID STRING PRIMARY KEY, AUDIT_REF STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVIDENCE_LINKS ( LINK_ID STRING PRIMARY KEY, AUDIT_ID STRING, BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EVIDENCE_RETENTION ( RETAIN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_EXPIRES_AT TIMESTAMP_LTZ, NOTIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, REQUESTED_BY STRING, SCOPE VARIANT, LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, REQUEST_ID STRING, TARGET_LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS_02 ( EXPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTED_BY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS_06 ( EXPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORTS_09 ( EXPORT_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STORAGE_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_ERRORS ( ERR_ID STRING PRIMARY KEY, EXPORT_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_FAILURES ( FAIL_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_DETAIL VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_ITEMS ( ITEM_ID STRING PRIMARY KEY, EXPORT_ID STRING, BUNDLE_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCHEDULE_CRON STRING, TARGET_STAGE STRING, STATUS STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, DESTINATION VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_JOBS_09 ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, OUTPUT_REF STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, JOB_ID STRING, FILES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, JOB_ID STRING, FILE_LIST ARRAY, STAGE_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, TENANT_ID STRING, PRINCIPAL STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_QUEUE ( QUEUE_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_QUEUE_13 ( QUEUE_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, DESTINATION STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_REQUESTS_12 ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, FILE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FILE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS_02 ( RESULT_ID STRING PRIMARY KEY, EXPORT_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS_06 ( RESULT_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS_09 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, OUT_REF STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RUNS ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, SCHED_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPORT_SCHEDULER ( SCHED_ID STRING PRIMARY KEY, POLICY_ID STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ, NEXT_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_EXPOSURE_INDEX ( EXPOSURE_ID STRING PRIMARY KEY, AUDIT_REF STRING, SUBJECT_REF STRING, EXPOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_FINDING_RESOLUTION ( RES_ID STRING PRIMARY KEY, FINDING_ID STRING, RESOLUTION_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_IMMUTABLE_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8501_signature_policy_violation_notifications.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.AUDIT_IMMUTABLE_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8501_signature_policy_violation_notifications.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INDEX ( AIDX_ID STRING PRIMARY KEY, REF_TYPE STRING, REF_ID STRING, SUMMARY VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, OBJECT_TYPE STRING, OBJECT_ID STRING, AUDIT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INDEX_08 ( AUDIT_IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, PAYLOAD VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INDEX_LOGS ( LOG_ID STRING PRIMARY KEY, AIDX_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INSIGHTS_INDEX ( INSIGHT_ID STRING PRIMARY KEY, TENANT_ID STRING, INSIGHT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INSIGHTS_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESULTS_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INSIGHTS_RUNS ( RUN_ID STRING PRIMARY KEY, INSIGHT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, SCOPE STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, SCOPE VARIANT, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INTEGRITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, VER_ID STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_INTEGRITY_VERIFICATIONS ( VER_ID STRING PRIMARY KEY, AUDIT_REF STRING, RESULT STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_KEY_ROTATION ( ROT_ID STRING PRIMARY KEY, KEY_NAME STRING, ROTATED_AT TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_KPI_RUNS ( RUN_ID STRING PRIMARY KEY, KPI_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, METRIC JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_ARCHIVAL_INDEX ( IDX_ID STRING PRIMARY KEY, ARCHIVE_REF STRING, ROW_COUNT NUMBER, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_ARCHIVE_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, ARCHIVE_LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_ARCHIVE_JOBS ( JOB_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_ARCHIVE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_DIGEST ( DIGEST_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, HASH STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, EXPORT_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_IMMUTABILITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, AUDIT_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_INDEX ( IDX_ID STRING PRIMARY KEY, ENTITY_REF STRING, ACTION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_INGEST_QUEUE ( Q_ID STRING PRIMARY KEY, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_INGEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_PURGE_QUEUE ( Q_ID STRING PRIMARY KEY, TARGET_RANGE VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PURGED_ROWS INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_RETENTION_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, AUDIT_ID STRING, REASON CLOB, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_RETENTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED_COUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_LOG_SHARDS ( SHARD_ID STRING PRIMARY KEY, PATH STRING, ROW_COUNT NUMBER, LAST_ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, AUDIT_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PACKET_STORE ( PACKET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PACKET_JSON VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PARTITIONS ( PARTITION_ID STRING PRIMARY KEY, SCOPE STRING, RANGE_START TIMESTAMP_LTZ, RANGE_END TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_REMEDIATION ( REM_ID STRING PRIMARY KEY, VIOL_ID STRING, PLAN_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, REM_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, AUDIT_ID STRING, POLICY_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_VIOLATION_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, POLICY_ID STRING, VIOLATION_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_POLICY_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PURGE_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PURGE_LOGS ( LOG_ID STRING PRIMARY KEY, TARGET_TABLE STRING, PURGED_COUNT INT, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, QUERY TEXT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RESPONSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, WORKFLOW_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RESPONSE_WORKFLOW ( WORKFLOW_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETAINMENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETAIN_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETAIN_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_CHECK_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_CONFIG ( CONFIG_ID STRING PRIMARY KEY, TARGET_TABLE STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_ENFORCEMENT ( ENF_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, LAST_RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_ENFORCEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_VER_ID STRING, TARGETS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, AUDIT_ID STRING, REASON CLOB, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, RETENTION_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, RETENTION_UNTIL TIMESTAMP_LTZ, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_INDEX ( INDEX_ID STRING PRIMARY KEY, TENANT_ID STRING, RETENTION_DAYS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, TARGET_REF STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, APPLIED_TO VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, SCOPE VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_POLICY_VERSIONS ( VER_ID STRING PRIMARY KEY, POLICY_ID STRING, RETENTION_DAYS INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_PURGE_QUEUE ( Q_ID STRING PRIMARY KEY, IDX_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RETENTION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, TARGET_SCOPE VARIANT, RETENTION_DAYS INT, NEXT_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_REVIEW_TASKS ( TASK_ID STRING PRIMARY KEY, REVIEW_ID STRING, ASSIGNEE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_ROLE_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, ROLE_NAME STRING, AUDIT_SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_RUN_HISTORY_10 ( RUN_ID STRING PRIMARY KEY, AUDIT_ID STRING, STATUS STRING, RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SHARDS ( SHARD_ID STRING PRIMARY KEY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SHARES ( SHARE_ID STRING PRIMARY KEY, AUDIT_ID STRING, SHARED_WITH STRING, SHARE_METHOD STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SIGNATURE_PROVENANCE ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROVENANCE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SNAPSHOT_TIME TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SNAP_JSON VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_CATALOG ( CATALOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SNAPSHOT_LOC STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_CHECKSUMS ( CHK_ID STRING PRIMARY KEY, MANIFEST_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_ERRORS ( ERR_ID STRING PRIMARY KEY, SNAP_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_FILES ( FILE_ID STRING PRIMARY KEY, MANIFEST_ID STRING, LOCATION STRING, CHECKSUM STRING, SIZE_BYTES NUMBER );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_INDEX ( SNAP_IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, SNAPSHOT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_ITEMS ( ITEM_ID STRING PRIMARY KEY, MANIFEST_ID STRING, PAYLOAD VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_ITEMS ( ITEM_ID STRING PRIMARY KEY, SNAP_ID STRING, ITEM_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_LINKS ( LINK_ID STRING PRIMARY KEY, SNAP_ID STRING, RELATED_AUDIT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, CREATED_BY STRING, ITEM_COUNT INT, MANIFEST_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SCOPE VARIANT, FILES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SCOPE VARIANT, S3_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SCOPE VARIANT, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_RECONCILES ( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SNAPSHOT_RUNS ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, STATUS STRING, RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_STREAM_02 ( AUDIT_ID STRING PRIMARY KEY, SOURCE STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SUMMARIES_07 ( SUMMARY_ID STRING PRIMARY KEY, SCOPE VARIANT, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_SUMMARY_MV ( SUMMARY_ID STRING PRIMARY KEY, SCOPE STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRACEBACK_INDEX ( IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, TRACE_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, OBJECT_REF STRING, ACTION STRING, PAYLOAD VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_ARCHIVES ( ARCH_ID STRING PRIMARY KEY, AUDIT_REF STRING, LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_EXPORT_INDEX ( EXPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_EXPORT_RECONCILE ( RECON_ID STRING PRIMARY KEY, EXPORT_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, SCOPE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_REPAIR_ACTIONS ( ACTION_ID STRING PRIMARY KEY, CHECK_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUDIT_TRAIL_SUMMARIES ( SUM_ID STRING PRIMARY KEY, SCOPE STRING, SUMMARY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHENTICATION_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ANOMALY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHN_LOGS ( AUTHN_ID STRING PRIMARY KEY, SUBJECT STRING, METHOD STRING, RESULT STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHN_METHOD_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHODS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHN_METHOD_REGISTRY ( METHOD_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHN_METHOD_USAGE ( USAGE_ID STRING PRIMARY KEY, METHOD_ID STRING, SUBJECT_REF STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUTHN_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHORITY_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, AUTHORITY STRING, KEY_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHORITY_KEY_REVOCATIONS ( REV_ID STRING PRIMARY KEY, KEY_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_CACHE_INVALIDATION_QUEUE ( Q_ID STRING PRIMARY KEY, CACHE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_CACHE_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_DECISION_CACHE ( CACHE_ID STRING PRIMARY KEY, KEY_REF STRING, DECISION JSON, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_DECISION_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESOURCE_REF STRING, DECISION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_LOGS ( AUTHZ_ID STRING PRIMARY KEY, SUBJECT STRING, RESOURCE STRING, DECISION STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_METRICS ( MET_ID STRING PRIMARY KEY, ACTION STRING, SUBJECT_REF STRING, COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTHZ_POLICY_INDEX ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTH_AUDIT_05 ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATED_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_INDEX ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_INDEX ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_REGISTRY ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_REGISTRY ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_RUNBOOK_INDEX ( INDEX_ID STRING PRIMARY KEY, RUNBOOK_REF STRING, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_SCRIPT_REGISTRY ( SCRIPT_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_SCRIPT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTPUT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOMATION_SCRIPT_RUNS ( RUN_ID STRING PRIMARY KEY, SCRIPT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTORESOLVE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTORESOLVE_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTORESOLVE_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.AUTOSAVE_LOGS_6399 ( LOG_ID STRING PRIMARY KEY, SAVE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RULE_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALE_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, SERVICE_REF STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALE_RULES ( RULE_ID STRING PRIMARY KEY, PLAN_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALING_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.AUTOSCALING_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, SERVICE_REF STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_CLASSIFICATION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOMES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_CLASSIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, DATA_SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_REMEDIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, ACTIONS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_SUGGEST_JOBS ( JOB_ID STRING PRIMARY KEY, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AUTO_SUGGEST_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AVAILABILITY_CALENDAR ( CAL_ID STRING PRIMARY KEY, OPERATOR STRING, DATE_DAY DATE, AVAILABLE BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.AVAILABILITY_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR STRING, DATE_RANGE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.AVAIL_APPROVAL_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, OUTCOME STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BACKFILL_LOGS ( LOG_ID STRING PRIMARY KEY, BACKFILL_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKFILL_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_TABLE STRING, QUERY VARIANT, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKFILL_RUNS ( RUN_ID STRING PRIMARY KEY, REQ_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BACKLOG_WORK_ITEM_RESULTS ( RES_ID STRING PRIMARY KEY, BACKLOG_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKOFF_RETRY_HISTORY ( HISTORY_ID STRING PRIMARY KEY, POLICY_ID STRING, EVENT_REF STRING, ATTEMPT INT, LAST_ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BACKOFF_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKPRESSURE_SIGNALS_07 ( SIGNAL_ID STRING PRIMARY KEY, SOURCE STRING, LEVEL STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, BACKUP_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_CATALOG ( BACKUP_ID STRING PRIMARY KEY, TARGET_REF STRING, LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_DOCUMENT_ARCHIVE_CLONE CLONE DOCGEN.DOCUMENT_ARCHIVE;

CREATE OR REPLACE TABLE DOCGEN.BACKUP_DOCUMENT_ARCHIVE_CLONE LIKE DOCGEN.DOCUMENT_ARCHIVE;

CREATE OR REPLACE TABLE DOCGEN.BACKUP_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_HISTORY ( BH_ID STRING PRIMARY KEY, SCHED_ID STRING, BACKUP_LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFEST ( BACKUP_ID STRING PRIMARY KEY, TARGET_TABLE STRING, BACKUP_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING, CHECKSUM STRING );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, FILES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, TARGET_REF STRING, LOCATION STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, TARGET_TABLE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFESTS_06 ( MANIFEST_ID STRING PRIMARY KEY, TARGETS VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFESTS_09 ( MANIFEST_ID STRING PRIMARY KEY, DESCRIPTION STRING, STORAGE_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_MANIFESTS_12 ( MANIFEST_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_OPERATION_INDEX ( OP_ID STRING PRIMARY KEY, TARGET STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_OPERATION_RESULTS ( RES_ID STRING PRIMARY KEY, OP_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE STRING, TARGET_LOCATION STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RESTORE ( BACKUP_ID STRING PRIMARY KEY, TARGET_TABLE STRING, LOCATION STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, ACTION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, TYPE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RUNS ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RUNS_06 ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, OUTPUT VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RUNS_12 ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_RUN_DETAILS ( DETAIL_ID STRING PRIMARY KEY, RUN_ID STRING, FILE_REF STRING, STATUS STRING, DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_SCHEDULES_12 ( SCHEDULE_ID STRING PRIMARY KEY, TARGET STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_VERIFY_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BACKUP_VERIFY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BADGE_REVOCATION_LOGS ( LOG_ID STRING PRIMARY KEY, BADGE_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_LOGS_6065 ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_MANIFESTS ( MAN_ID STRING PRIMARY KEY, SCOPE VARIANT, DESTINATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_QUEUE_6064 ( QUEUE_ID STRING PRIMARY KEY, PARAMETERS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_EXPORT_RUNS ( RUN_ID STRING PRIMARY KEY, MAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOBS ( JOB_ID STRING PRIMARY KEY, JOB_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOBS_08 ( JOB_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_HISTORY ( HIST_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STEP STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_RESULTS_08 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, STATUS STRING, RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, JOB_NAME STRING, CRON_EXPR STRING, NEXT_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_JOB_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_DETAILS ( DETAIL_ID STRING PRIMARY KEY, SUM_ID STRING, NOTIF_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_JOBS_6364 ( JOB_ID STRING PRIMARY KEY, PARAMETERS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_LOGS_6365 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGETS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_SUMMARIES ( SUM_ID STRING PRIMARY KEY, BATCH_REF STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_NOTIFICATION_SUMMARIES ( SUM_ID STRING PRIMARY KEY, JOB_ID STRING, SUCCESS INT, FAILED INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_PROCESSING_METRICS ( METRIC_ID STRING PRIMARY KEY, JOB_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_PROVIDER_HEALTH_CHECKS ( BPH_ID STRING PRIMARY KEY, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, NUM_RENDERED INT, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RENDER_RUNS ( RUN_ID STRING PRIMARY KEY, REQUESTOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RESULTS ( RESULT_ID STRING PRIMARY KEY, RUN_ID STRING, SUMMARY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RETRY_HISTORY ( HISTORY_ID STRING PRIMARY KEY, EXPORT_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RETRY_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, RUN_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_RUNS ( RUN_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BATCH_SIGNATURE_ERRORS ( ERROR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_SIGNATURE_METRICS ( METRIC_ID STRING PRIMARY KEY, JOB_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BATCH_STEP_LOGS ( STEP_LOG_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_NAME STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BCP_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BCP_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, BCP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_ANOMALY_HITS ( HIT_ID STRING PRIMARY KEY, PROFILE_ID STRING, ANOMALY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_ANOMALY_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_ANOMALY_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, MODEL_ID STRING, SCORE NUMBER, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_ANOMALY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_EVENT_STORE ( EVENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_INSIGHT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INSIGHT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODEL_RETRAIN_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODEL_RETRAIN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIORAL_MODEL_TELEMETRY ( TEL_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_LOGS ( ANOM_ID STRING PRIMARY KEY, SIGNER_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_ANOMALY_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_FINGERPRINT_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, FPR_ID STRING, OTHER_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_MODEL_METRICS ( MET_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_MODEL_TELEMETRY ( T_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_MODEL_VERSIONS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, PROFILE_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BEHAVIOR_SIMILARITY_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, INVOICE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, LINE_ITEM_ID STRING, AMOUNT NUMBER, REASON STRING, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENTS_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ADJUSTMENT JSON, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, ADJ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADJ_ID STRING, ADMIN_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADJ_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ADJ_ID STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_HISTORY ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, ADJUSTMENT JSON, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, APPLIED BOOLEAN, APPLIED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AD_HOC_QUERIES ( QUERY_ID STRING PRIMARY KEY, REQUESTOR STRING, QUERY TEXT, RESULT_LOCATION STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERTS ( ALERT_ID STRING PRIMARY KEY, RULE_ID STRING, ACCOUNT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERTS ( ALERT_ID STRING PRIMARY KEY, RUN_ID STRING, ISSUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERTS_06 ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TRIGGER VARIANT, ACTION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TRIG_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_DISPATCH_Q ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_HISTORY ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_LOGS_6123 ( LOG_ID STRING PRIMARY KEY, THRESHOLD_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_TYPE STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_THRESHOLDS_6122 ( THRESHOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALERT_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, RULE_ID STRING, TRIGGER_JSON VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALLOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, RULE_ID STRING, RUN_ID STRING, OUTCOME VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ALLOCATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, INVOICE_ID STRING, METRIC VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ANOMALY_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ANOMALY_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ANOMALY_INDEX ( IDX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ANOMALY_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, INVOICE_ID STRING, CHANGES VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, ACCOUNT_ID STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_INDEXES ( IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_INDEXES ( IDX_ID STRING PRIMARY KEY, RUN_ID STRING, INDEX_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRACES ( TRACE_ID STRING PRIMARY KEY, RUN_ID STRING, ACTION STRING, DETAIL VARIANT, TRACE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, INVOICE_REF STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, ACTION STRING, DETAILS VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_AUDIT_TRAIL_MV ( MV_ID STRING PRIMARY KEY, RUN_REF STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CACHE_11 ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREVIEW VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACKS ( CB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACKS_Q ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACKS_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESULTS JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACK_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CHARGEBACK_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COLLECTION_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, JOB_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COLLECTION_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COLLECTION_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ATTEMPT_COUNT INT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COLLECTION_METRICS ( MET_ID STRING PRIMARY KEY, JOB_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COLLECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COMPLIANCE_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, NAME STRING, REQUIREMENT JSON, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COMPLIANCE_FINDINGS ( FIND_ID STRING PRIMARY KEY, RUN_ID STRING, ITEM_ID STRING, FINDING JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COMPLIANCE_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CONTACT_UPDATES ( UPDATE_ID STRING PRIMARY KEY, CONTACT_ID STRING, UPDATED_BY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CORRECTIONS ( CORR_ID STRING PRIMARY KEY, RUN_ID STRING, DESCRIPTION STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_COST_CENTER_MAP ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, COST_CENTER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_APPROVALS ( APP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_MEMO_INDEX ( MEMO_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_MEMO_INDEX_6178 ( MEMO_ID STRING PRIMARY KEY, INV_ID STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_MEMO_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_REF STRING, AMOUNT NUMBER, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_MEMO_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTES ( CREDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, AMOUNT NUMBER, REASON CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REFERENCE JSON );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTE_APPEALS ( APPEAL_ID STRING PRIMARY KEY, NOTE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_NOTE_HISTORY ( H_ID STRING PRIMARY KEY, NOTE_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CREDIT_REVERSALS ( REV_ID STRING PRIMARY KEY, NOTE_ID STRING, ACCOUNT_ID STRING, REVERSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CURRENCY_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, OLD_AMOUNT NUMBER, NEW_AMOUNT NUMBER, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CURRENCY_RATES ( RATE_ID STRING PRIMARY KEY, SRC_CURRENCY STRING, DST_CURRENCY STRING, RATE NUMBER, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_CUTOFF_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_ID STRING, REASON STRING, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTES_06 ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, REASON STRING, STATUS STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DISPUTE_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DISPUTE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_COMMUNICATIONS ( COMM_ID STRING PRIMARY KEY, DISPUTE_ID STRING, SENDER STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_EVENTS ( E_ID STRING PRIMARY KEY, DISPUTE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_INDEX ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, REASON CLOB, STATUS STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_LOGS ( LOG_ID STRING PRIMARY KEY, DISPUTE_ID STRING, ENTRY JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME_JSON VARIANT, FINALIZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_ID STRING, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_REF STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RUN_ID STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, TENANT_ID STRING, INVOICE_REF STRING, STATUS STRING DEFAULT 'OPEN', OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BILL_REF STRING, REASON CLOB, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REASONS ( REASON_ID STRING PRIMARY KEY, CODE STRING, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REGISTRY ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_REF STRING, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REGISTRY ( DISPUTE_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, TENANT_ID STRING, ISSUE JSON, STATUS STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REGISTRY ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REGISTRY ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_REF STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME VARIANT, CLOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_DISPUTE_WORKFLOW ( WORKFLOW_ID STRING PRIMARY KEY, DISPUTE_ID STRING, STEPS VARIANT, STATUS STRING DEFAULT 'ACTIVE', UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ESTIMATE_JSON VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ESTIMATE_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_CACHE ( CACHE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, ESTIMATE JSON, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_HISTORY ( HIST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ESTIMATE_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_INVALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_ESTIMATE_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORT_HISTORY ( EH_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, LOCATION STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FILE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, TRAINED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, MODEL_ID STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FORECAST_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_FORECAST_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SNAPSHOT VARIANT, SNAP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_INTEGRATION_HOOKS ( HOOK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, HOOK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_INVOICE_REASSIGNMENT ( REASSIGN_ID STRING PRIMARY KEY, OLD_ACCOUNT STRING, NEW_ACCOUNT STRING, INVOICE_ID STRING, REASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_KPI_DEFS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_KPI_SAMPLES ( SAMPLE_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE NUMBER, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LEDGER_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, RUN_ID STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LEDGER_SNAPSHOT_INDEX ( IDX_ID STRING PRIMARY KEY, SNAP_ID STRING, ACCOUNT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LINE_ITEM ( LINE_ID STRING PRIMARY KEY, RUN_ID STRING, ACCOUNT_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LINE_ITEM ( LINE_ID STRING PRIMARY KEY, RUN_ID STRING, ACCOUNT_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LINE_ITEM ( LINE_ITEM_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, ACCOUNT_ID STRING, FEATURE_KEY STRING, UNITS NUMBER, BASE_COST NUMBER(18,6), MARKUP_PCT NUMBER(5,2), MARKUP_AMOUNT NUMBER(18,6), TOTAL_COST NUMBER(18,6) );

CREATE OR REPLACE TABLE DOCGEN.BILLING_LINE_ITEM ( LINE_ITEM_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, CURRENCY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_METRIC_EXPOSURE ( EXP_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC JSON, EXPOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTICE_HISTORY ( NOTICE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INVOICE_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTICE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MESSAGE STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, OUTCOME JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_QUEUE ( QUEUE_ID STRING PRIMARY KEY, INVOICE_ID STRING, CHANNEL STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAIL VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGETS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PAYMENT_METHODS ( PM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METHOD_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PLAN_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PLAN_ID STRING, ACTIVE_FROM TIMESTAMP_LTZ, ACTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PLAN_CATALOG ( PLAN_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_POLICY_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, LOG_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_POLICY_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREDICTION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREDICTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTPUT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREDICTION_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PREVIEW_ID STRING, USER_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREVIEW_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREVIEW_JSON VARIANT, INVOICE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TENANT_ID STRING, PREVIEW_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_CACHE ( PREVIEW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREVIEW_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PREVIEW_CACHE_14 ( PREVIEW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROFILE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROFILE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROFILE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROFILE_HISTORY ( H_ID STRING PRIMARY KEY, ASSIGN_ID STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROMOTIONS ( PROMO_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PROVIDER_COSTS ( COST_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, PROVIDER STRING, COST_AMOUNT NUMBER, CURRENCY STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_PUBLIC_LINKS ( LINK_ID STRING PRIMARY KEY, INVOICE_ID STRING, PUBLIC_URL STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RATE_CARD_VERSIONS ( VERSION_ID STRING PRIMARY KEY, RATE_CARD_ID STRING, VERSION_NUMBER INT, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILE_JOBS_06 ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, DETAIL VARIANT, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION ( REC_ID STRING PRIMARY KEY, RUN_ID STRING, EXPECTED_TOTAL NUMBER, ACTUAL_TOTAL NUMBER, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, BILL_ID STRING, EXTERNAL_INVOICE_REF STRING, STATUS STRING, DETAILS VARIANT, RECONCILED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, REASON CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_INDEX ( IDX_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_ITEMS ( ITEM_ID STRING PRIMARY KEY, JOB_ID STRING, LINE_REF STRING, EXPECTED_AMOUNT NUMBER, ACTUAL_AMOUNT NUMBER, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING, STARTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_MISMATCH ( MISMATCH_ID STRING PRIMARY KEY, RECONC_RUN_ID STRING, BILLING_RUN_ID STRING, FIELD_NAME STRING, EXPECTED_VAL VARIANT, ACTUAL_VAL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, IDX_ID STRING, MISMATCHES INT, RESOLVED BOOLEAN, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_RUN ( RECONC_RUN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RUN_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, EXPECTED_INVOICE_HASH STRING, ACTUAL_INVOICE_HASH STRING, STATUS STRING, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECONCILIATION_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_REF STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RECON_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_HISTORY ( REF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_JOBS ( JOB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_JOBS ( JOB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, BILLING_LINE_ID STRING, TENANT_ID STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, SUB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_REPORT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REPORT_REF STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RETENTION_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, INVOICE_ID STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RETRY_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, RESULT_VARIANT VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RULE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, CHANGE JSON, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RULE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RULE_PREVIEW ( PREVIEW_ID STRING PRIMARY KEY, RULE_ID STRING, PREVIEW_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN ( BILLING_RUN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RUN_PERIOD_START DATE, RUN_PERIOD_END DATE, TOTAL_AMOUNT NUMBER(18,6), PREVIEW_HASH STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN ( RUN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, INVOICE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN ( RUN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, INVOICE_HASH STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, INVOICE_HASH STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BILLING_RUN_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, AUDIT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN_CHECKSUMS ( CHECK_ID STRING PRIMARY KEY, RUN_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_RUN_METADATA ( METADATA_ID STRING PRIMARY KEY, RUN_ID STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SETTLEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SETTLEMENT_REF STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SETTLEMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SLA_CREDITS ( CREDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SLA_INDEX ( SLA_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SNAPSHOT_HISTORY ( SNAP_ID STRING PRIMARY KEY, RUN_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_TAX_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, ADJUSTMENT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_TAX_RULE_REGISTRY ( TAX_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BILLING_TAX_RUN_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, TAX_BREAKDOWN VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BILLING_WEBHOOK_LOG ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, EVENT_PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.BINARY_BLOB_REGISTRY ( BLOB_ID STRING PRIMARY KEY, LOCATION STRING, SIZE NUMBER, CONTENT_TYPE STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, OPERATION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_INDEX_11 ( BIOMETRIC_ID STRING PRIMARY KEY, SIGNER_ID STRING, TYPE STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_MATCH_JOBS_06 ( JOB_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_PROFILES_06 ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BIOMETRIC_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DELETED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_RETENTION_LOGS ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRICS_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, RESULT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, REASON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, BY_WHOM STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_CAPTURE_LOGS ( LOG_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNER_REF STRING, CAPTURE_HASH STRING, CAPTURE_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_COMPLIANCE_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_CONFIGURATIONS ( CFG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_DATA_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_DATA_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_DEVICE_REGISTRY ( DEVICE_ID STRING PRIMARY KEY, SIGNER_REF STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOCUMENT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_EVENTS_06 ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_EVENTS_11 ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_HASHES ( BH_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH TYPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_HASHES_13 ( HASH_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_HASH_INDEX ( IDX_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH STRING, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_HASH_STORE ( HASH_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_LOGS_6195 ( LOG_ID STRING PRIMARY KEY, BIO_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHES ( MATCH_ID STRING PRIMARY KEY, SIGNER_ID STRING, MATCH_SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHES ( MATCH_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHES ( MATCH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHES_06 ( MATCH_ID STRING PRIMARY KEY, JOB_ID STRING, CANDIDATE_PROFILE_ID STRING, SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHES_08 ( MATCH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHING_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CANDIDATE_HASH STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCHING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHED BOOLEAN, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, SCORE FLOAT, MATCHED BOOLEAN, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, MATCH_SCORE NUMBER, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_HISTORY ( MATCH_ID STRING PRIMARY KEY, SIGNER_ID STRING, MATCH_SCORE FLOAT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_HISTORY ( MATCH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, DECISION STRING, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_JOBS ( JOB_ID STRING PRIMARY KEY, BIO_ID STRING, TARGET_PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_JOBS ( JOB_ID STRING PRIMARY KEY, SIGNER_ID STRING, TARGET_HASH STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_JOBS ( JOB_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_JOBS ( JOB_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CANDIDATE_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, MATCH_SCORE NUMBER, RESULT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, SCORE NUMBER, MATCHED BOOLEAN, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SCORE FLOAT, RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MATCH_SCORE NUMBER, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_LOGS_13 ( LOG_ID STRING PRIMARY KEY, HASH_ID STRING, SCORE NUMBER, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCH_SCORE NUMBER, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCH_SCORE NUMBER, MATCHED_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, MATCHED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_MODEL_TELEMETRY ( TELEM_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STORE_HASH_ONLY BOOLEAN DEFAULT TRUE, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICIES_11 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICIES_13 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICY_ENFORCEMENTS ( ENF_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, STATUS STRING, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICY_LOGS_6237 ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICY_REGISTRY_6236 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_POLICY_TEMPLATES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_PRIVACY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, FINDINGS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_PRIVACY_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTROLS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_PRIVACY_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_RETRIES ( RETRY_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ATTEMPTS INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_REVOCATION_LOG ( REV_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_SAMPLE_INDEX ( SAMPLE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SAMPLE_META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOCUMENT_ID STRING, SCORE_DECIMAL NUMBER, MODEL_VERSION STRING, REASONS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, MODEL_ID STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_SIGNATURE_INDEX_6194 ( BIO_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, BIOMETRIC_META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, TEMPLATE_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE_HASH STRING, TEMPLATE_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES ( TPL_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE BINARY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATES_08 ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_INDEX ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, MODEL_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_INDEX ( TPL_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_REGISTRY ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_REGISTRY ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_REGISTRY ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_STORE ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_STORE ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_STORE ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_TEMPLATE_STORE ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TEMPLATE_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, IDX_ID STRING, RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VERIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, RESULT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, LOG_ID STRING, VERIFIED BOOLEAN, SCORE NUMBER, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, SAMPLE_ID STRING, MATCH_SCORE NUMBER, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VERIF_JOBS ( JOB_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BIOMETRIC_VERIF_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, VERIFIED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_ACCESS_CONTROL ( ACL_ID STRING PRIMARY KEY, DASH_ID STRING, SUBJECT_REF STRING, PERMS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_COST_CUBES ( CUBE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CUBE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_DASHBOARD_INDEX ( DASH_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_DATA_CATALOG ( CAT_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BI_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_MODEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_MODEL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_PLUGIN_REGISTRY ( PLUGIN_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, INSTALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_QUERY_LOGS ( LOG_ID STRING PRIMARY KEY, PLUGIN_ID STRING, RUN_BY STRING, QUERY_TEXT CLOB, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_REFRESH_JOBS ( JOB_ID STRING PRIMARY KEY, DASH_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BI_REFRESH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_SIGNATURE_TRENDS ( TREND_ID STRING PRIMARY KEY, TENANT_ID STRING, TREND_METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_USAGE_CUBES ( CUBE_ID STRING PRIMARY KEY, TENANT_ID STRING, CUBE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BI_USER_ACTIVITY ( ACT_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY_TYPE STRING, PAYLOAD VARIANT, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLACKLIST_APPEAL_RESULTS ( RES_ID STRING PRIMARY KEY, APPEAL_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLACKLIST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BLACK_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLACKLIST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BL_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLACKLIST_LOGS_6081 ( LOG_ID STRING PRIMARY KEY, BL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOB_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, BLOB_ID STRING, SUBJECT STRING, ACTION STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLOB_PART_INDEX ( PART_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PART_NUMBER INT, LOCATION STRING, SIZE_BYTES NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_AFFINITY_INDEX ( AFF_ID STRING PRIMARY KEY, NETWORK STRING, PROVIDER_PREF JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TX_ID STRING, NETWORK STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHORS_09 ( TX_ID STRING PRIMARY KEY, ANCHOR_ID STRING, BLOCKCHAIN STRING, TX_REF STRING, CONFIRMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_EVENTS ( EVT_ID STRING PRIMARY KEY, ANCHOR_HASH STRING, NETWORK STRING, TX_HASH STRING, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_HEALTH ( H_ID STRING PRIMARY KEY, NETWORK STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN_REF STRING, TX_HASH STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_INDEX_6267 ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TXID STRING, CHAIN_NAME STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TX_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_LOG ( ANCHOR_ID STRING PRIMARY KEY, EVID_ID STRING, TX_HASH STRING, CHAIN STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_LOGS ( LOG_ID STRING PRIMARY KEY, ANCHOR_ID STRING, STATUS STRING, TXHASH STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_LOGS_6268 ( LOG_ID STRING PRIMARY KEY, ANCHOR_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, TXID STRING, NETWORK STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_QUEUE ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TXHASH STRING, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_RECORDS ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TX_ID STRING, CHAIN STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_REG ( REG_ID STRING PRIMARY KEY, ANCHOR_HASH STRING, NETWORK STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TXID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TX_HASH STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_ANCHOR_VERIFICATIONS ( VER_ID STRING PRIMARY KEY, ANCHOR_ID STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_INDEX_05 ( INDEX_ID STRING PRIMARY KEY, TX_ID STRING, BUNDLE_ID STRING, PROOF VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_INTEGRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NETWORK STRING, ACTION STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_INTEGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, TXID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_JOBS_07 ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_PEERS ( PEER_ID STRING PRIMARY KEY, NAME STRING, RPC_ENDPOINT STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_PROVIDERS_07 ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_PUBLISH_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_PUBLISH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TX_ID STRING, STATUS STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_RESULTS_07 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, TX_HASH STRING, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_SUBMISSION_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLOCKCHAIN_SUBMISSION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, TX_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BLUEPRINT_INSTANTIATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLUEPRINT_INSTANTIATION_JOBS ( JOB_ID STRING PRIMARY KEY, BP_ID STRING, TARGETS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLUEPRINT_LOGS_6085 ( LOG_ID STRING PRIMARY KEY, FLOW_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLUEPRINT_TEMPLATES ( BP_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BLUE_GREEN_SWITCH_HISTORY ( SWITCH_ID STRING PRIMARY KEY, SERVICE_NAME STRING, FROM_VERSION STRING, TO_VERSION STRING, SWITCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BOARD_REPORT_INDEX ( REPORT_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BOT_DETECTION_METRICS ( MET_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BOT_INTERACTION_LOGS ( LOG_ID STRING PRIMARY KEY, BOT_ID STRING, SESSION_ID STRING, MESSAGE_IN VARIANT, MESSAGE_OUT VARIANT, INTERACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BOT_SESSION_INDEX ( SESSION_ID STRING PRIMARY KEY, BOT_ID STRING, STATE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BREACH_INVESTIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, INV_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BREACH_NOTIFICATION_REGISTRY ( NOTIF_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BREACH_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BREACH_RESPONSE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACTION JSON, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BROWSER_FINGERPRINTS ( BF_ID STRING PRIMARY KEY, SESSION_ID STRING, FP JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BROWSER_FINGERPRINT_REGISTRY ( REG_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BROWSER_SIGNALS ( SIGNAL_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_AGENT STRING, SIGNALS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUCKET_ARCHIVAL_INDEX ( INDEX_ID STRING PRIMARY KEY, BUCKET_PATH STRING, OBJECT_COUNT INT, LAST_INDEXED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUDGET_ALERTS ( ALERT_ID STRING PRIMARY KEY, CC_ID STRING, THRESHOLD NUMBER, NOTIFIED BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.BUDGET_ALERT_DEFINITIONS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD NUMBER, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUDGET_ALERT_HISTORY ( HIST_ID STRING PRIMARY KEY, ALERT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BUDGET_RUNS ( RUN_ID STRING PRIMARY KEY, CC_ID STRING, SPENT NUMBER, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.BUDGET_THRESHOLD_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUDGET_ID STRING, LEVEL STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUG_FIX_METRICS ( METRIC_ID STRING PRIMARY KEY, BUG_ID STRING, FIX_TIME_MIN NUMBER, DEPLOY_RUN STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUG_TRACKING_INDEX ( BUG_ID STRING PRIMARY KEY, TITLE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_URI STRING, STATUS STRING DEFAULT 'CREATED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_INGEST_QUEUE ( QUEUE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_INGEST_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_OPERATION_DLQ ( DLQ_ID STRING PRIMARY KEY, JOB_ID STRING, RECORD_REF STRING, ERROR_JSON VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_OPERATION_JOBS ( JOB_ID STRING PRIMARY KEY, TYPE STRING, PAYLOAD VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BULK_OPERATION_PROGRESS ( PROG_ID STRING PRIMARY KEY, JOB_ID STRING, PCT_COMPLETE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_OPERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_ITEMS ( ITEM_ID STRING PRIMARY KEY, JOB_ID STRING, SIGNER_ID STRING, STATUS STRING, ATTEMPTS INT DEFAULT 0, LAST_TRIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, PARAMETERS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_JOBS_6362 ( JOB_ID STRING PRIMARY KEY, BATCH_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_LOGS_6363 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.BULK_SIGNING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUNDLE_BLOCKCHAIN_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TX_ID STRING, BLOCKCHAIN STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUNDLE_STORAGE_QOS ( QOS_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STORAGE_TIER STRING, COST_ESTIMATE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUSINESS_CONTINUITY_PLANS ( BCP_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUSINESS_CONTINUITY_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, LAST_VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUSINESS_HOURS_14 ( BH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TIMEZONE STRING, HOURS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUSINESS_METRICS_KPI ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.BUSINESS_METRIC_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_KEY STRING, THRESHOLD_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_AUDIT_06 ( AUDIT_ID STRING PRIMARY KEY, AUTH_ID STRING, PAYLOAD VARIANT, VALIDATED BOOLEAN, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_AUTHORIZATIONS_06 ( AUTH_ID STRING PRIMARY KEY, SUB_ID STRING, AUTH_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, PAYLOAD VARIANT, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE_CODE INT );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_ENDPOINTS ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, AUTH CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_ENDPOINTS_10 ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, SECRET_REF STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_ENDPOINT_REGISTRY ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, AUTH JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, CALLBACK_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, REQUEST VARIANT, RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, CALLBACK_URL STRING, STATUS STRING, RESPONSE_CODE INT, RESPONSE_BODY VARIANT, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_LOGS_10 ( LOG_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, PAYLOAD VARIANT, RESPONSE VARIANT, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CALLBACK_RESPONSES_03 ( RESPONSE_ID STRING PRIMARY KEY, CALLBACK_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAMPAIGNS_REGISTRY ( CAMPAIGN_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, META VARIANT, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CAMPAIGN_EVENTS ( EVENT_ID STRING PRIMARY KEY, CAMPAIGN_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAMPAIGN_METRICS ( METRIC_ID STRING PRIMARY KEY, CAMPAIGN_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANARY_METRICS ( MET_ID STRING PRIMARY KEY, ROLL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANARY_MONITORING ( MON_ID STRING PRIMARY KEY, CANARY_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANARY_RELEASE_DECISIONS ( DEC_ID STRING PRIMARY KEY, VERSION STRING, DECISION_JSON VARIANT, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANARY_RELEASE_METRICS ( MET_ID STRING PRIMARY KEY, VERSION STRING, METRICS JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANCELLATION_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CANCELLATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PLAN_ID STRING, METRIC VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, RESOURCE_REF STRING, LEVEL STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TARGET_REF STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, PLAN_ID STRING, ACCOUNT_ID STRING, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_ALLOCATION_LOG ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, ALLOC_JSON VARIANT, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_BILLING_CHARGES ( CHARGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, CURRENCY STRING, CHARGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, PLAN_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, RESOURCE_REF STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLANNING_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLANNING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOMES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLANNING_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLANS_06 ( PLAN_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PLAN_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PROVISIONING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_PROVISIONING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_RECOMMENDATIONS ( RECO_ID STRING PRIMARY KEY, PLAN_ID STRING, RECOMMENDATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_SCALING_EVENTS ( EVT_ID STRING PRIMARY KEY, PLAN_ID STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_SCALING_HISTORY ( H_ID STRING PRIMARY KEY, EVT_ID STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_USAGE ( USAGE_ID STRING PRIMARY KEY, PLAN_ID STRING, USAGE_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPACITY_USAGE_HISTORY ( USAGE_ID STRING PRIMARY KEY, PLAN_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPTCHA_CHALLENGE_REGISTRY ( CHALLENGE_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CAPTCHA_RESULTS ( RES_ID STRING PRIMARY KEY, CHALLENGE_ID STRING, PASSED BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASES ( CASE_ID STRING PRIMARY KEY, SUBJECT STRING, STATUS STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASES ( CASE_ID STRING PRIMARY KEY, TITLE STRING, STATUS STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASES_07 ( CASE_ID STRING PRIMARY KEY, TITLE STRING, OWNER STRING, STATUS STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ACTIVITIES ( ACT_ID STRING PRIMARY KEY, CASE_ID STRING, ACTOR STRING, ACTION JSON, HAPPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ATTACHMENTS ( ATTACH_ID STRING PRIMARY KEY, CASE_ID STRING, FILE_URL STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, COMMENT_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, CASE_ID STRING, LEVEL INT, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, CASE_ID STRING, POLICY_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, CASE_REF STRING, LEVEL STRING, HANDLED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_REGISTRY ( ESC_ID STRING PRIMARY KEY, CASE_REF STRING, POLICY_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, ESC_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CASE_EVENTS_07 ( EVENT_ID STRING PRIMARY KEY, CASE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_FILES ( FILE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, PATH STRING, META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_NOTES_07 ( NOTE_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_PRIORITY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, CASE_REF STRING, RULE_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_PRIORITY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_RESOLUTION_REPORTS ( REPORT_ID STRING PRIMARY KEY, CASE_ID STRING, SUMMARY CLOB, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_SLA_METRICS ( MET_ID STRING PRIMARY KEY, CASE_ID STRING, SLA_VIOLATIONS INT, RESOLUTION_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CASE_REF STRING, SLA_ID STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_SLA_REGISTRY ( SLA_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, CASE_REF STRING, SLA_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_SLA_WEEKLY_ROLLUP ( ROLL_ID STRING PRIMARY KEY, TEAM_REF STRING, WEEK_START DATE, METRICS VARIANT, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CASE_TRANSITIONS ( TRANS_ID STRING PRIMARY KEY, CASE_ID STRING, FROM_STATUS STRING, TO_STATUS STRING, TRANSITIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY_USER STRING );

CREATE OR REPLACE TABLE DOCGEN.CASE_WORKFLOW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CASE_ID STRING, FROM_STEP STRING, TO_STEP STRING, TRANSITIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CATALOG_SYNC_JOBS_6058 ( JOB_ID STRING PRIMARY KEY, TARGET_SCHEMA STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CATALOG_SYNC_LOGS_6059 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CATEGORIZATION_LOGS_6117 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CCPA_RECORDS_INDEX ( REC_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_CACHE ( CHAIN_ID STRING PRIMARY KEY, CERT_ID STRING, CHAIN_JSON VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_HEALTH ( HEALTH_ID STRING PRIMARY KEY, CHAIN_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, CERT_ID STRING, CHAIN_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, CERT_IDS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_INDEX_6204 ( CERT_ID STRING PRIMARY KEY, CHAIN_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_LOGS_6205 ( LOG_ID STRING PRIMARY KEY, CERT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_CHAIN_STORE ( CHAIN_ID STRING PRIMARY KEY, CERT_CHAIN VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_EXPIRY_MONITOR ( MON_ID STRING PRIMARY KEY, CERT_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, NOTIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_INVENTORY ( CERT_ID STRING PRIMARY KEY, SUBJECT STRING, ISSUER STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, FINGERPRINT STRING, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_INVENTORY ( CERT_ID STRING PRIMARY KEY, SUBJECT STRING, ISSUER STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ISSUANCE_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, PURPOSE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ISSUANCE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, CERT_PEM CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ISSUER_INDEX ( IDX_ID STRING PRIMARY KEY, ISSUER STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ISSUER_INDEX ( ISSUER_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_OCSP_CACHE ( CACHE_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_JSON VARIANT, FRESH_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_OWNERSHIP_INDEX ( IDX_ID STRING PRIMARY KEY, CERT_ID STRING, OWNER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( IDX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( IDX_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOCATION_JSON VARIANT, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED BOOLEAN, REVOKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REVOKE_REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_LIST ( CRL_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CERT_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, CERT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, PERFORMED_BY STRING, OUTCOME STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ROTATION_LOGS ( LOG_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OLD_CERT_REF STRING, NEW_CERT_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CERT_ID STRING, NEXT_ROTATION_AT TIMESTAMP_LTZ, FREQUENCY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, SUBJECT STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, SUBJECT STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, SUBJECT STRING, ISSUER STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, SUBJECT STRING, ISSUER STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM CLOB, SUBJECT STRING, ISSUER STRING, SERIAL_NUMBER STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE ( CERT_REF STRING PRIMARY KEY, CERT_META VARIANT, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE_09 ( CERT_ID STRING PRIMARY KEY, KEY_REF STRING, PEM CLOB, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_STORE_INDEX ( CERT_ID STRING PRIMARY KEY, SUBJECT STRING, META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTIFICATE_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OCSP_STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERTS_INVENTORY ( CI_ID STRING PRIMARY KEY, CERT_ID STRING, LOCATION STRING, OWNER STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERT_CHAIN_CACHE ( CERT_FP STRING PRIMARY KEY, CHAIN VARIANT, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERT_CHAIN_CACHE ( CHAIN_ID STRING PRIMARY KEY, CERTS VARIANT, CACHE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_CHAIN_INDEX ( CERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, CHECK_RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_FINGERPRINTS ( FINGERPRINT_ID STRING PRIMARY KEY, CERT_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_RECERT_HISTORY ( H_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_RECERT_QUEUE ( Q_ID STRING PRIMARY KEY, CERT_ID STRING, DUE_DATE DATE, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.CERT_REQ_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATIONS_09 ( REVOC_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED BOOLEAN DEFAULT FALSE, REVOKED_AT TIMESTAMP_LTZ ) ;

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED BOOLEAN DEFAULT FALSE, REVOKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REVOKE_REASON STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATION_INDEX_06 ( CERT_ID STRING PRIMARY KEY, REVOCATION_STATUS STRING, LAST_CHECK TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOCATION_LIST ( ENTRY_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERT_REVOKE_LOG ( LOG_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CERT_ROTATION_HISTORY ( ROT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERT_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, SCHED_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PERFORMED_BY STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CERT_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, NEXT_ROTATION TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CERT_ROTATION_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, CERT_ID STRING, NEXT_ROTATION TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, COT_ID STRING, PEER_ID STRING, TXID STRING, PUBLISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY ( COC_ID STRING PRIMARY KEY, ART_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTE CLOB );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY ( COC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVENT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_06 ( COC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEPS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CUSTODY_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, ACTOR STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_INDEX_6256 ( COC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_LOGS ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_LOGS ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_LOGS_6257 ( LOG_ID STRING PRIMARY KEY, COC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_RECORDS ( COC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEP JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_REGISTRY ( CUSTODY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEPS VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_CUSTODY_REPORTS ( REPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_OF_TRUST ( COT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH_CHAIN VARIANT, ANCHOR_TXID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_PROOFS_06 ( PROOF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROOF VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAIN_VALIDATIONS ( VALID_ID STRING PRIMARY KEY, COT_ID STRING, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VALID BOOLEAN, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHALLENGE_RESPONSES_01 ( RESPONSE_ID STRING PRIMARY KEY, CHALLENGE_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VERIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.CHANGELOG_INDEX ( CHANGE_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, CHANGE_REF STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_METRICS ( METRIC_ID STRING PRIMARY KEY, CHANGE_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_QUEUE ( Q_ID STRING PRIMARY KEY, CHANGE_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_WORKFLOW ( WF_ID STRING PRIMARY KEY, REQ_ID STRING, STEPS JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.CHANGE_APPROVAL_WORKFLOW ( WF_ID STRING PRIMARY KEY, REQ_ID STRING, STEPS JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CHANGE_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_REGISTRY ( CHANGE_ID STRING PRIMARY KEY, TITLE STRING, SCOPE VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_CONTROL_REQUESTS ( REQ_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_FAILURE_RATE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM STRING, FAILURE_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_IMPACT_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, CHANGE_REF STRING, IMPACT_JSON VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_IMPACT_INDEX ( IDX_ID STRING PRIMARY KEY, CHANGE_REF STRING, AFFECTED_COMPONENTS ARRAY, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_LEAD_TIME_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM STRING, LEAD_DAYS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_LOGS ( CHANGE_ID STRING PRIMARY KEY, OBJECT_REF STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_LOGS_12 ( LOG_ID STRING PRIMARY KEY, ENTITY_NAME STRING, ENTITY_ID STRING, CHANGES VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CHANGE_ID STRING, APPROVER STRING, STATUS STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CHANGE_ID STRING, ACTION STRING, BY_USER STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_LOG ( LOG_ID STRING PRIMARY KEY, CHANGE_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_REGISTRY ( CHANGE_ID STRING PRIMARY KEY, TITLE STRING, DETAILS VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, CHANGE_JSON VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_MANAGEMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_REQUESTS ( CR_ID STRING PRIMARY KEY, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_ROLLBACK_JOBS ( JOB_ID STRING PRIMARY KEY, CHANGE_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_ROLLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ROLLBACK_BY STRING, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANGE_TELEMETRY_LOGS_6099 ( LOG_ID STRING PRIMARY KEY, TELE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_CONFIGS_04 ( CONFIG_ID STRING PRIMARY KEY, CHANNEL STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_DISPATCH_TELEMETRY ( TEL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANNEL STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_FAILOVER_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_FAILOVER_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_PROVIDER_BINDINGS ( BIND_ID STRING PRIMARY KEY, TENANT_ID STRING, PROVIDER_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHANNEL_PROVIDER_CATALOG ( PROVIDER_ID STRING PRIMARY KEY, CHANNEL STRING, PROVIDER_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAOS_EXPERIMENT_REGISTRY ( EXP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAOS_EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OBSERVATIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHAOS_EXPERIMENT_RUNS ( RUN_ID STRING PRIMARY KEY, EXP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, BILL_LINE_REF STRING, CC_ID STRING, AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_EVENTS ( CB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_INVOICES ( INVOICE_ID STRING PRIMARY KEY, RUN_ID STRING, ACCOUNT_ID STRING, TOTAL_AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_REGISTRY ( CB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_REGISTRY ( CB_ID STRING PRIMARY KEY, TX_ID STRING, TENANT_ID STRING, DETAILS VARIANT, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_REGISTRY ( CHARGE_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, CB_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, CHARGE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGEBACK_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGE_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, CHARGE_REF STRING, COST_CENTER_ID STRING, AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHARGE_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKLIST_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, EXECUTOR STRING, OUTCOME VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKLIST_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, RUN_BY STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CHECKLIST_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, RUN_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.CHECKPOINT_RECOVERY_LOGS ( LOG_ID STRING PRIMARY KEY, CP_ID STRING, RECOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_MISMATCH_JOBS ( JOB_ID STRING PRIMARY KEY, CHK_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_MISMATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9151_signature_document_repair_jobs.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_MISMATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9151_signature_document_repair_jobs.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, VALID BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_VERIFICATIONS ( VER_ID STRING PRIMARY KEY, CHECK_ID STRING, VERIFIED_BY STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT BOOLEAN, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CHECKSUM_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, VERIFIED BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHUNK_CITATION_INDEX ( CIT_ID STRING PRIMARY KEY, CHUNK_ID STRING, CITATION JSON, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHUNK_REASSEMBLY_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHUNK_REASSEMBLY_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CHURN_EVENT_REGISTRY ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, REASON CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CICD_DEPLOY_EVENTS ( EVT_ID STRING PRIMARY KEY, DEPLOY_ID STRING, STATUS STRING, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CICD_DEPLOY_REGISTRY ( DEPLOY_ID STRING PRIMARY KEY, ENVIRONMENT STRING, ARTIFACTS VARIANT, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CICD_ROLLBACK_JOBS ( JOB_ID STRING PRIMARY KEY, DEPLOY_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CICD_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CIRCUIT_BREAKER_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CIRCUIT_BREAKER_EVENTS ( EVT_ID STRING PRIMARY KEY, CB_ID STRING, EVENT JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CIRCUIT_BREAKER_STATE ( CB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATE STRING, TRIPPED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CIRCUIT_BREAKER_STATE ( STATE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, STATE STRING, LAST_CHANGED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CIRCUIT_BREAKER_TRIPS ( TRIP_ID STRING PRIMARY KEY, CFG_ID STRING, REASON CLOB, TRIPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_ARTIFACTS_REGISTRY ( ARTIFACT_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_ARTIFACTS_REGISTRY ( ARTIFACT_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_ARTIFACTS_REGISTRY_02 ( ARTIFACT_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_ARTIFACTS_REGISTRY_03 ( ARTIFACT_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_CD_RUNS ( RUN_ID STRING PRIMARY KEY, PIPELINE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CI_DEPLOY_HISTORY ( DEPLOY_ID STRING PRIMARY KEY, ENVIRONMENT STRING, STATUS STRING, TRIGGERED_BY STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_DEPLOY_LOCKS ( LOCK_ID STRING PRIMARY KEY, ENVIRONMENT STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CI_PIPELINE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ARTIFACTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, BRANCH STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CI_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, BRANCH STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CI_RESULTS ( RESULT_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, STATUS STRING, DETAILS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_SMOKE_TEST_INDEX ( TEST_ID STRING PRIMARY KEY, NAME STRING, LAST_RUN TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CI_SMOKE_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, PIPELINE_RUN STRING, STATUS STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CI_SMOKE_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CI_SMOKE_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, TEST_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAIMS_ASSERTION_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CLAIMS VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAIMS_DISCREPANCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DISCREPANCY JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAIMS_MAPPING_JOBS ( JOB_ID STRING PRIMARY KEY, MAP_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAIMS_MAPPING_REGISTRY ( MAP_ID STRING PRIMARY KEY, SOURCE_FIELD STRING, TARGET_FIELD STRING, TRANSFORM JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAIMS_MAPPING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MAPPED_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLASSIFICATION_RESULTS ( CR_ID STRING PRIMARY KEY, REQUEST_ID STRING, RULE_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLASSIFICATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ACTION VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, ACTION STRING, PERFORMED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CATALOG ( CLAUSE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CHANGE_HISTORIES ( CHG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REQUESTOR STRING, PROPOSAL JSON, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REQUESTOR STRING, REQUEST_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CHANGE_REVIEWS ( REV_ID STRING PRIMARY KEY, REQ_ID STRING, REVIEWER STRING, OUTCOME STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CONCORDANCE_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TERM STRING, OCCURRENCES INT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CONFIDENCE_INDEX ( CONF_ID STRING PRIMARY KEY, CLAUSE_ID STRING, AVERAGE_CONFIDENCE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CONFIDENCE_LOG ( LOG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, SOURCE STRING, CONFIDENCE NUMBER, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_CONFLICT_LOGS ( LOG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_DEPENDENCIES ( DEP_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DEPENDS_ON ARRAY );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_DEPRECATION_NOTICE ( NOTICE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REASON CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_DEP_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DEPENDS_ON ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_FEEDBACK_LOGS ( LOG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USER_REF STRING, FEEDBACK CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_INDEX_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, CLAUSE_SET STRING, S3_PREFIX STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY ( CLAUSE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BODY CLOB, TAGS ARRAY, VERSION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY ( CLAUSE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY ( CLAUSE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY ( CLAUSE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, TAGS ARRAY, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY ( CLAUSE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_06 ( CLAUSE_ID STRING PRIMARY KEY, NAME STRING, TEXT CLOB, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_INDEX ( CLAUSE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEXT CLOB, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, METRICS VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_INDEX_6311 ( CLAUSE_ID STRING PRIMARY KEY, TEXT CLOB, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_METRICS ( MET_ID STRING PRIMARY KEY, CLAUSE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_METRICS ( MET_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_STATS_11 ( CLAUSE_ID STRING PRIMARY KEY, TOTAL_REFERENCES NUMBER, LAST_REFERENCED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_LIBRARY_USAGE ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, TENANT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_MODERATION_QUEUE ( Q_ID STRING PRIMARY KEY, CLAUSE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_POPULARITY_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TENANT_ID STRING, POPULARITY_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_QUALITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REPORTER STRING, SEVERITY STRING, DETAILS CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_QUALITY_METRICS ( METRIC_ID STRING PRIMARY KEY, CLAUSE_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, CLAUSE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_RATING_AGGREGATES ( AGG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, AVG_RATING NUMBER, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_RECOMMENDATIONS ( CREC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CLAUSE_ID STRING, SCORE NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_RECOMMENDATIONS ( REC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RECOMMENDATIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_RECOMMEND_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_RECOMMEND_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUGGESTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REUSE_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, OCCURRENCES INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REUSE_REGISTRY ( CLAUSE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REVIEWER STRING, SCORE INT, COMMENT CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_LOGS_6316 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_METRICS ( MET_ID STRING PRIMARY KEY, CLAUSE_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, CLAUSE_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_QUEUE_6315 ( REQ_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_REVISION_INDEX ( REV_ID STRING PRIMARY KEY, CLAUSE_ID STRING, REV_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, EMBEDDING VECTOR, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, EMBEDDING VECTOR, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX ( INDEX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VECTOR VECTOR, EMBEDDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX_08 ( INDEX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VECTOR VECTOR, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_INDEX_6313 ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VECTOR VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_LOGS_6314 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_SHARD_MAP ( MAP_ID STRING PRIMARY KEY, SHARD_ID STRING, RANGE_START INT, RANGE_END INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_SHARD_META ( SHARD_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_SIMILARITY_STORE ( CS_ID STRING PRIMARY KEY, CLAUSE_ID STRING, EMBEDDING VECTOR, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_06 ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_12 ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_HISTORY ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, TENANT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, POSITION JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_INDEX ( IDX_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_INDEX ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, TENANT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_INDEX ( USAGE_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, TENANT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_LOGS_6312 ( LOG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, DOCUMENT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENTRY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_METRICS ( MET_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS ( CLAUSE_ID STRING PRIMARY KEY, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_USAGE_STATS_MV ( MV_ID STRING PRIMARY KEY, CLAUSE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VARIANT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VAR_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VARIANT_REGISTRY ( VARIANT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, BODY CLOB, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VARIANT_REGISTRY ( VAR_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VARIANT_BODY CLOB, LOCALE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VECTOR_QUERIES_08 ( QUERY_ID STRING PRIMARY KEY, QUERY VECTOR, TOP_K INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VENDOR_ORIGIN ( ORIG_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VENDOR STRING, METADATA VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VERSION_HISTORY ( VERSION_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VERSION_INDEX ( VERSION_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLAUSE_VERSION_MAP ( MAP_ID STRING PRIMARY KEY, CLAUSE_ID STRING, VERSION_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ACTIVITY_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTIVITY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ALERT_DELIVERY ( DELIVERY_ID STRING PRIMARY KEY, SUB_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, CLIENT_ID STRING, ALERT_KEYS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_APPLICATIONS ( APP_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, REDIRECT_URIS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_PLAN_MAPPINGS ( MAP_ID STRING PRIMARY KEY, CLIENT_ID STRING, PLAN_ID STRING, EFFECTIVE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_QUOTA_DEFS ( QUOTA_ID STRING PRIMARY KEY, CLIENT_ID STRING, QUOTA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, QUOTA_ID STRING, USAGE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_SCOPES ( SCOPE_ID STRING PRIMARY KEY, CLIENT_ID STRING, SCOPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_SECRET_LEAK_REPORTS ( REPORT_ID STRING PRIMARY KEY, CLIENT_ID STRING, LEAK_DETAIL VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_SECRET_ROTATIONS ( ROT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.CLIENT_USAGE_KEYS ( KEY_ID STRING PRIMARY KEY, CLIENT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLOSURE_RESULTS_06 ( RESULT_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLOSURE_TASKS_06 ( TASK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_AUTOSCALE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_AUTOSCALE_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION JSON, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_MAINTENANCE_JOBS ( JOB_ID STRING PRIMARY KEY, CLUSTER_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_MAINTENANCE_JOBS ( JOB_ID STRING PRIMARY KEY, NODE_ID STRING, ACTION JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_MAINTENANCE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_MANAGEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, ACTION STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_MANAGEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_METADATA ( CLUSTER_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_NODE_HEARTBEATS ( HB_ID STRING PRIMARY KEY, NODE_ID STRING, STATUS STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_NODE_REGISTRY ( NODE_ID STRING PRIMARY KEY, HOST STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_SIMILARITY_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_UPDATE_JOBS ( JOB_ID STRING PRIMARY KEY, CLUSTER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CLUSTER_UPDATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COACHING_LOGS_6298 ( LOG_ID STRING PRIMARY KEY, COACH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COACHING_NOTES ( NOTE_ID STRING PRIMARY KEY, OPERATOR STRING, COACH STRING, NOTE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLABORATION_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HOST STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_ACTIVITY_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, SESSION_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_ACTIVITY_LOG ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTOR STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_ACTIVITY_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_ACTIVITY_STREAM ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTOR STRING, ACTION JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, THREAD_ID STRING, AUTHOR STRING, COMMENT STRING, POSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_COMMENT_MENTIONS ( MENTION_ID STRING PRIMARY KEY, COMMENT_ID STRING, MENTIONED_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_COMMENT_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, COMMENT_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_COMMENT_THREADS ( THREAD_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, SESSION_ID STRING, DETAIL VARIANT, RESOLVED BOOLEAN DEFAULT FALSE, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_CONFLICT_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CONFLICT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_EVENTS ( EVT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, EVENT JSON, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_PARTICIPANTS ( PART_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, ROLE STRING, JOINED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_PARTICIPANT_INDEX ( PID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, JOINED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_PRESENCE_HEARTBEATS ( HB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_PRESENCE_INDEX ( PRES_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, LAST_PING TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTIVITY VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_RECORDINGS_INDEX ( REC_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_REPLAY_ACCESS_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_REPLAY_ACCESS_REQS ( REQ_ID STRING PRIMARY KEY, REPLAY_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_RESOLUTION_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, CONFLICT_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_RESOLUTION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HOST STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PARTICIPANTS ARRAY, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SESSION_REPLAYS ( REPLAY_ID STRING PRIMARY KEY, SESSION_REF STRING, REPLAY_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_SNAPSHOT_RESULTS ( RES_ID STRING PRIMARY KEY, MANIFEST_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLAB_TRANSCRIPT_INDEX ( TID STRING PRIMARY KEY, SESSION_ID STRING, TRANSCRIPT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLECTION_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLECTION_ACTION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COLLECTION_EVENTS ( EVT_ID STRING PRIMARY KEY, PARTNER_ID STRING, ACCOUNT_ID STRING, EVENT_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLECTION_PARTNERS ( PARTNER_ID STRING PRIMARY KEY, NAME STRING, CONTACT JSON, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COLLECTOR_ACCOUNT_BALANCES ( BAL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BALANCE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMMENTS ( COMMENT_ID STRING PRIMARY KEY, THREAD_ID STRING, AUTHOR STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMMENT_THREADS ( THREAD_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMMUNITY_FEEDBACK_INDEX ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, FEEDBACK_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPACTION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ROWS_RECLAIMED INT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPENSATION_LOGS_6119 ( LOG_ID STRING PRIMARY KEY, COMP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLAINTS ( COMPLAINT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DETAILS VARIANT, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLAINT_ESCALATION_MATRIX ( MAT_ID STRING PRIMARY KEY, CONDITION JSON, ESCALATE_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLAINT_REGISTRY ( COMPLAINT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, DESCRIPTION CLOB, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLAINT_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, RESOLVED_BY STRING, RESOLUTION TEXT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLAINT_RESOLUTION_LOG ( LOG_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, RESOLVER STRING, RESOLUTION CLOB, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION_TYPE STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ACTION_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, ASSESS_ID STRING, ACTION_JSON VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ACTIVITY_STREAM ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIVITY VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ANNUAL_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, YEAR INT, REPORT_LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQUEST_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_APPROVAL_QUEUE ( Q_ID STRING PRIMARY KEY, ITEM_JSON VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, REVIEW_ID STRING, OWNER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_AUDIT_FINDINGS ( FINDING_ID STRING PRIMARY KEY, AUDIT_ID STRING, SUMMARY CLOB, SEVERITY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_AUDIT_ISSUES ( ISSUE_ID STRING PRIMARY KEY, RUN_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CASE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, CASE_ID STRING, ACTION JSON, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, CASE_ID STRING, NOTE CLOB, NOTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CASE_REGISTRY ( CASE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, NAME STRING, ISSUED_TO STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, DOC_LOCATION STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATES_03 ( CERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CERT_CHAIN VARIANT, OCSP_SNAPSHOT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATE_EXPIRY ( EXP_ID STRING PRIMARY KEY, CERT_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, NOTIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATE_INDEX ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATE_LOGS_6173 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATE_REQUESTS_6172 ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_PEM CLOB, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, CERT_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_CHECKS ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, CHECK_NAME STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_CHECKS ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_INDEX ( CERT_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_INDEX ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_REGISTRY ( CERT_ID STRING PRIMARY KEY, NAME STRING, ISSUER STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_REGISTRY ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, CERT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERT_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CERT_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ITEMS VARIANT, COMPLETED BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECKLISTS_09 ( CHECK_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECKLISTS_11 ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECKS_05 ( CCHK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECK_NAME STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_HISTORY ( CHK_ID STRING PRIMARY KEY, TENANT_ID STRING, CHECK_NAME STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_HISTORY ( HIST_ID STRING PRIMARY KEY, CHECK_ID STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHECKS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CHECK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHECK_DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CONTACT_DIRECTORY ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, CHANNELS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CONTACT_DIRECTORY ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CONTROL_MATRIX ( CONTROL_ID STRING PRIMARY KEY, NAME STRING, REQUIREMENTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_CONTROL_RESULTS ( RES_ID STRING PRIMARY KEY, CONTROL_ID STRING, SCOPE VARIANT, RESULT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DASHBOARD_ALERTS ( ALERT_ID STRING PRIMARY KEY, DASHBOARD_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DASHBOARD_EVENTS ( EVENT_ID STRING PRIMARY KEY, TILE_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DASHBOARD_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DASHBOARD_TILES ( TILE_ID STRING PRIMARY KEY, NAME STRING, DATA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DEADLINE_TRACKER ( TRACK_ID STRING PRIMARY KEY, OBL_ID STRING, DEADLINE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DOCUMENT_HOLD ( HOLD_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TENANT_ID STRING, REASON CLOB, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_DOCUMENT_TRANSFERS ( TRANSFER_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FROM_TENANT STRING, TO_TENANT STRING, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EVT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_ID STRING, PRIORITY STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_REF STRING, PRIORITY STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, HANDLED_BY STRING, RESOLUTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, HANDLER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_CATALOG ( EVID_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, EVID_ID STRING, LOCATION STRING, STATUS STRING, EXPORTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_HISTORY ( HIST_ID STRING PRIMARY KEY, EVID_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_INDEX_6254 ( EVID_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVIDENCE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_LOGS_6255 ( LOG_ID STRING PRIMARY KEY, EVID_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EVIDENCE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, RESULT_ID STRING, EXPLAIN TEXT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTION_REGISTRY ( EX_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, APPROVAL_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXCEPTION_RUNS ( RUN_ID STRING PRIMARY KEY, EX_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONTEXT VARIANT, RESULT VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, TARGET_STAGE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORTS_11 ( EXPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FORMAT STRING, LOCATION STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, DESTINATION VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_FINDINGS ( FINDING_ID STRING PRIMARY KEY, REVIEW_ID STRING, SEVERITY STRING, DETAILS VARIANT, RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_FLAGS ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FLAG_KEY STRING, FLAG_VALUE STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_FLAGS_04 ( FLAG_ID STRING PRIMARY KEY, TARGET_REF STRING, FLAG_TYPE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_FLAGS_09 ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FLAG_KEY STRING, FLAG_VALUE VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_FLAG_LOGS_6229 ( LOG_ID STRING PRIMARY KEY, FLAG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_BINDINGS ( BIND_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_TABLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, REQ_ID STRING, SUBJECT_REF STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_INDEX ( IDX_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, CREATED_BY STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_REPORTS ( REPORT_ID STRING PRIMARY KEY, HOLD_ID STRING, DETAILS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_INCIDENT_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUES ( ISSUE_ID STRING PRIMARY KEY, CHECK_ID STRING, TARGET_REF STRING, ISSUE_DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUES ( ISSUE_ID STRING PRIMARY KEY, TENANT_ID STRING, ISSUE_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUES_05 ( ISSUE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESCRIPTION STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ISSUE_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, ISSUE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_REGISTRY ( ISSUE_ID STRING PRIMARY KEY, REVIEW_ID STRING, SEVERITY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_REGISTRY ( ISSUE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, SEVERITY STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, ISSUE_ID STRING, RESOLUTION_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, FINDINGS VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, TENANT_ID STRING, DESCRIPTION CLOB, STATUS STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_KPI_RESULTS ( RES_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_METRICS_AGG ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC JSON, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_MITIGATION_TASKS ( TASK_ID STRING PRIMARY KEY, ISSUE_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_MONITORING_ALERTS ( ALERT_ID STRING PRIMARY KEY, EVT_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_MONITORING_EVENTS ( EVT_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, DETECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_MONITORING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_OBLIGATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, OBL_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_OBLIGATION_CATALOG ( OBL_ID STRING PRIMARY KEY, NAME STRING, JURISDICTION STRING, OBL_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_OBLIGATION_REGISTRY ( OBL_ID STRING PRIMARY KEY, REGION STRING, OBL_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_CHECKSUMS ( CHK_ID STRING PRIMARY KEY, MAN_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_CHECKSUMS ( CS_ID STRING PRIMARY KEY, PACKET_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_CHECKSUMS ( CS_ID STRING PRIMARY KEY, PACKET_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_EXPORTS ( EXP_ID STRING PRIMARY KEY, MAN_ID STRING, DESTINATION STRING, EXPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_GENERATIONS ( GEN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BUNDLE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_INDEX_6212 ( PACKET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_LOGS_6213 ( LOG_ID STRING PRIMARY KEY, PACKET_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_MANIFEST ( MAN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_REGISTRY ( PACKET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_REGISTRY ( PACKET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PACKET_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STRUCTURE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INITIATED_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_POLICY_SUMMARIES ( SUM_ID STRING PRIMARY KEY, POLICY_ID STRING, SUMMARY CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_QUERY_CACHE ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULT_LOCATION STRING, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REGISTER ( REG_ID STRING PRIMARY KEY, NAME STRING, REQUIREMENTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORTING_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORTS_09 ( REPORT_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, RESULT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORTS_09 ( REPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, RESULTS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_DELIVERY ( DL_ID STRING PRIMARY KEY, REP_ID STRING, TARGET STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCOPE VARIANT, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_SUBS ( SUB_ID STRING PRIMARY KEY, REP_ID STRING, SUBSCRIBER STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, QUERY_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RESULTS ( RESULT_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, ITEM STRING, PASSED BOOLEAN, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RETENTION_INDEX ( RET_ID STRING PRIMARY KEY, TARGET_REF STRING, RETENTION_DAYS INT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RETENTION_MATRIX ( MATRIX_ID STRING PRIMARY KEY, JURISDICTION STRING, RETENTION_RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REVIEWER STRING, RESULT STRING, NOTES STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, SCOPE VARIANT, REVIEWER STRING, RESULT STRING, NOTES STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REVIEWER STRING, RESULT STRING, NOTES STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_INDEX ( REVIEW_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_OUTCOMES ( OUT_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME STRING, NOTES VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_REVIEW_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, TENANT_ID STRING, ASSESS_JSON VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RISK_HEATMAP ( HEATMAP_ID STRING PRIMARY KEY, TENANT_ID STRING, HEATMAP_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RISK_MITIGATIONS ( MIT_ID STRING PRIMARY KEY, RISK_ID STRING, MITIGATION_JSON VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, LIKELIHOOD STRING, IMPACT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RUNBOOKS ( RB_ID STRING PRIMARY KEY, NAME STRING, STEPS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RUNBOOK_INDEX ( RUN_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCOPE VARIANT, RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SCHEDULER ( SCHED_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCHEDULE STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SCHEDULER_RUNS ( RUN_ID STRING PRIMARY KEY, SCHED_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SELF_ASSESSMENTS ( ASMT_ID STRING PRIMARY KEY, REG_ID STRING, TENANT_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SLA_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SCOPE VARIANT, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, TENANT_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_RECONCILE ( RECON_ID STRING PRIMARY KEY, SNAP_ID STRING, EXPECTED INT, ACTUAL INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_RECONCILE ( RECON_ID STRING PRIMARY KEY, SNAP_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_REGISTRY ( SNAP_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_SNAPSHOT_RESULTS ( RES_ID STRING PRIMARY KEY, SNAP_ID STRING, VERIFICATION VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TRAIN_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_COMPLETION ( REC_ID STRING PRIMARY KEY, USER_REF STRING, COURSE_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_ENROLLMENTS ( ENROLL_ID STRING PRIMARY KEY, OP_REF STRING, TRAINING_ID STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, TARGET_AUDIENCE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, COURSE_REF STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RECORDS ( REC_ID STRING PRIMARY KEY, USER_REF STRING, COURSE_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_REGISTRY ( TRAIN_ID STRING PRIMARY KEY, NAME STRING, CONTENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_REGISTRY ( TRAIN_ID STRING PRIMARY KEY, NAME STRING, CURRICULUM VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_REGISTRY ( TRAIN_ID STRING PRIMARY KEY, NAME STRING, MATERIALS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, ASSIGN_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, ENROLL_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, COMPLETION_METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PARTICIPANT STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_TRAINING_RUNS ( RUN_ID STRING PRIMARY KEY, TRAIN_ID STRING, SUBJECT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RULE STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPLIANCE_WATCHLIST_EVENTS ( EVT_ID STRING PRIMARY KEY, TARGET_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPONENT_DEPENDENCY_HEALTH ( HEALTH_ID STRING PRIMARY KEY, COMPONENT_REF STRING, DEP_STATUS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPONENT_HEARTBEAT ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPOUND_EVENT_INDEX ( IDX_ID STRING PRIMARY KEY, EVENT_KEYS VARIANT, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPROMISE_RESPONSE_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTIONS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COMPUTE_BUDGET_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BUDGET_JSON VARIANT, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COMPUTE_BUDGET_SPEND ( SPEND_ID STRING PRIMARY KEY, ALLOC_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONCEPT_INDEX ( CON_ID STRING PRIMARY KEY, TERM STRING, EMBEDDING_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONCEPT_QUALITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, CON_ID STRING, REPORTER STRING, NOTES CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONCEPT_SYNONYM_INDEX ( SYN_ID STRING PRIMARY KEY, CON_ID STRING, SYNONYM STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONCEPT_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, CON_ID STRING, COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONCURRENT_SIGNS_BY_DOC ( REC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CONCURRENT_COUNT INT, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONDITIONAL_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONDITION JSON, ROUTE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIDENCE_SCORES ( SCORE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, METRIC_NAME STRING, VALUE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIDENCE_SCORES ( SCORE_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, SCORE FLOAT, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIDENTIALITY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, LABEL_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIDENTIALITY_LABELS ( LABEL_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIDENTIALITY_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, ASSIGN_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIGURATION_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, CHANGE_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.CONFIGURATION_VERSIONED_STORE ( CONFIG_ID STRING PRIMARY KEY, KEY STRING, VALUE VARIANT, VERSION_NUMBER INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_BACKUP_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, LAST_BACKUP TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, APPLIED_BY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_LOG ( CCL_ID STRING PRIMARY KEY, KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, CONFIG_KEY STRING, OLD JSON, NEW JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_NAME STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGES VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_LOCKS ( LOCK_ID STRING PRIMARY KEY, CONFIG_REF STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, CONFIG_KEY STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFIG_REVIEW_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFLICT_RESOLUTION_TASKS ( TASK_ID STRING PRIMARY KEY, LOG_ID STRING, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFORMANCE_RUNS ( RUN_ID STRING PRIMARY KEY, TEST_ID STRING, RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONFORMANCE_TESTS ( TEST_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, ASSERTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONNECTOR_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_CHECKED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_ANALYTICS_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, ANALYTICS_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_ANALYTICS_MV ( MV_ID STRING PRIMARY KEY, TENANT_ID STRING, CONSENT_STATS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_ARCHIVE_14 ( ARCHIVE_ID STRING PRIMARY KEY, CONSENT_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, SIGNER_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, SUBJECT_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDITS_10 ( CONSENT_AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_TEXT STRING, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, SUBJECT_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_CATALOG_INDEX ( IDX_ID STRING PRIMARY KEY, CONSENT_KEY STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_CHANGE_LOGS_6145 ( LOG_ID STRING PRIMARY KEY, CONS_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CONSENT_ID STRING, NOTICE JSON, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_CHECKS_07 ( CHECK_ID STRING PRIMARY KEY, USER_REF STRING, SCOPE STRING, RESULT BOOLEAN, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_COVERAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, ENFORCED_BY STRING, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_EXPIRY_MONITOR ( MON_ID STRING PRIMARY KEY, CONSENT_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, NOTIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_GRANT_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_HISTORY ( CH_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_HISTORY_05 ( CH_ID STRING PRIMARY KEY, CONSENT_ID STRING, CHANGE_TYPE STRING, DETAILS VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_IMPACT_REPORTS ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, IMPACT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_LOGS ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_TYPE STRING, CONSENT_GIVEN BOOLEAN, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_MANAGEMENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CONSENT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_NOTIFICATIONS_02 ( NOTIF_ID STRING PRIMARY KEY, CONSENT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_NOTIFICATION_LOG ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, VERSION_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_MAPPINGS ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_PROVENANCE ( PROV_ID STRING PRIMARY KEY, CONSENT_ID STRING, PROV_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_RECORDS_04 ( CONSENT_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_TYPE STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_RECORDS_07 ( RECORD_ID STRING PRIMARY KEY, USER_REF STRING, TEMPLATE_ID STRING, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT STRING, CONSENT_TYPE STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TENANT_ID STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REPORTING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_HISTORY ( H_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVokedBy STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_JOBS ( JOB_ID STRING PRIMARY KEY, CONSENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_JOBS ( JOB_ID STRING PRIMARY KEY, CONSENT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_JOBS ( JOB_ID STRING PRIMARY KEY, CONSENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_LOG ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_Q ( Q_ID STRING PRIMARY KEY, CONSENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_QUEUE ( Q_ID STRING PRIMARY KEY, CONSENT_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_QUEUE ( Q_ID STRING PRIMARY KEY, SIGNER_ID STRING, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONSENT_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONSENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_REQUESTS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOKE_JOBS ( JOB_ID STRING PRIMARY KEY, CONSENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_REVOKE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SYNCED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_SYNC_STATUS ( STATUS_ID STRING PRIMARY KEY, TENANT_ID STRING, LAST_SYNC_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, JURISDICTION STRING, TEXT_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_TEMPLATES_07 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CONTENT CLOB, VERSION INT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_VIOLATIONS ( V_ID STRING PRIMARY KEY, SUBJECT_REF STRING, POLICY_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_WITHDRAWALS ( WD_ID STRING PRIMARY KEY, CONSENT_LOG_ID STRING, WITHDRAWN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_WITHDRAWALS ( WITHDRAW_ID STRING PRIMARY KEY, CONSENT_ID STRING, WITHDRAWN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_WITHDRAWAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_ID STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_WITHDRAWAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_REF STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CONSENT_WITHDRAWAL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONSUMER_KEYS_06 ( KEY_ID STRING PRIMARY KEY, NAME STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_CONFIDENCE_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONFIDENCE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_DIRECTORY_05 ( CONTACT_ID STRING PRIMARY KEY, NAME STRING, EMAIL STRING, PHONE STRING, ROLE STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_DIRECTORY_INDEX ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTACT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONTACT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_HISTORY ( CH_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONTACT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTACT_VERIFICATIONS ( VER_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHANNEL STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_CLASSIFICATION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESULTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_CLASSIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_DUPLICATION_INDEX ( IDX_ID STRING PRIMARY KEY, CONTENT_HASH STRING, DOCUMENT_IDS ARRAY, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_EXTRACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_EXTRACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT VARIANT, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_FLAGS_07 ( FLAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FLAG_TYPE STRING, REPORTED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_FLAG_RESOLUTIONS_07 ( RES_ID STRING PRIMARY KEY, FLAG_ID STRING, RESOLVER STRING, RESOLUTION TEXT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_HASH_CATALOG ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_HASH_REGISTRY ( HASH_ID STRING PRIMARY KEY, CONTENT_REF STRING, HASH STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, HASH_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_INTEGRITY_HASHES ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_MODERATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, LOG_ID STRING, ACTION_JSON VARIANT, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_MODERATION_LOGS ( LOG_ID STRING PRIMARY KEY, DOC_ID STRING, VIOLATION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_MODERATION_QUEUE ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_MODERATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_REVIEW_ANNOTATIONS ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_REVIEW_TASKS ( TASK_ID STRING PRIMARY KEY, WORKFLOW_ID STRING, DOCUMENT_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_REVIEW_WORKFLOWS ( WORKFLOW_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_SIGN_OFFS_08 ( SIGNOFF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNED_BY STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_SIMILARITY_CACHE_06 ( CACHE_ID STRING PRIMARY KEY, SOURCE_ID STRING, TARGET_ID STRING, SCORE FLOAT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_SIMILARITY_INDEX ( INDEX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VECTOR_REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTENT_TAMPER_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTEXT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, REQUEST_ID STRING, SNAPSHOT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTINGENCY_PLAN_INDEX ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTINGENCY_PLAN_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTINGENCY_PLAN_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONTINUITY_TEST_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTINUITY_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, PB_ID STRING, OUTCOME VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTINUOUS_IMPROVEMENT_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, AREA STRING, DESCRIPTION CLOB, PRIORITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACTUAL_SLA_EVENTS ( EVT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, EVENT_TYPE STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_AMENDMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, REVIEWER STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_AMENDMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONTRACT_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_AMENDMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONTRACT_REF STRING, REQUESTOR STRING, AMENDMENT JSON, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_AMENDMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, WF_ID STRING, STEP_REF STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_APPROVAL_WORKFLOW ( WF_ID STRING PRIMARY KEY, CONTRACT_REF STRING, STEPS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_AUDIT_TRAILS ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_REF STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, CONTRACT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONTRACT_ID STRING, REQUESTOR STRING, CHANGES VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CLAUSE_STATS ( STAT_ID STRING PRIMARY KEY, CLAUSE_ID STRING, CONTRACT_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CLOSURE_INDEX_6360 ( CLOSURE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, CLOSED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_CLOSURE_LOGS_6361 ( LOG_ID STRING PRIMARY KEY, CLOSURE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, CONTRACT_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_DISPUTE_REGISTRY ( DISPUTE_ID STRING PRIMARY KEY, CONTRACT_REF STRING, SUBJECT_REF STRING, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_EVENTS ( CE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_EXTRACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_EXTRACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, EXTRACTED_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_LIFECYCLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, CONTRACT_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_LIFECYCLE_EVENTS ( EVT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_LIFECYCLE_STATES ( STATE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, STATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_LIFECYCLE_TRANSITIONS ( TRANS_ID STRING PRIMARY KEY, CONTRACT_ID STRING, FROM_STATE STRING, TO_STATE STRING, TRANSITIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_METADATA_STORE ( CONTRACT_ID STRING PRIMARY KEY, TENANT_ID STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWALS ( RENEW_ID STRING PRIMARY KEY, CONTRACT_ID STRING, RENEWAL_DATE TIMESTAMP_LTZ, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_HISTORY ( H_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_QUEUE ( Q_ID STRING PRIMARY KEY, CONTRACT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_QUEUE ( Q_ID STRING PRIMARY KEY, CONTRACT_ID STRING, TENANT_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_QUEUE ( Q_ID STRING PRIMARY KEY, CONTRACT_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_QUEUE ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CONTRACT_REF STRING, DUE_DATE DATE, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_RENEWAL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_REPOSITORY ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, CONTRACT_ID STRING, REVIEWER STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATORIES ( SIGN_ID STRING PRIMARY KEY, CONTRACT_ID STRING, SIGNER_ID STRING, ROLE STRING, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_INDEX_6358 ( SIGN_ID STRING PRIMARY KEY, CONTRACT_ID STRING, SIGNER_ID STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_LOGS_6359 ( LOG_ID STRING PRIMARY KEY, SIGN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_MAP ( MAP_ID STRING PRIMARY KEY, CONTRACT_ID STRING, SIGNATURE_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_MAP ( MAP_ID STRING PRIMARY KEY, CONTRACT_ID STRING, SIGNATURE_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, CONTRACT_ID STRING, SIGNATURE_ROLE STRING, REQUIRED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNATURE_SUMMARY ( SUM_ID STRING PRIMARY KEY, CONTRACT_REF STRING, SIGNATURE_COUNT INT, LAST_SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNOFF_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIGNOFF_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_SIGNOFF_REGISTRY ( SIGNOFF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_REF STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SIGNOFF_META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_TEMPLATE_INDEX_6356 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_TEMPLATE_LOGS_6357 ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSIONS ( VER_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSION_DIFF ( DIFF_ID STRING PRIMARY KEY, VERSION_A STRING, VERSION_B STRING, DIFF_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSION_INDEX ( VERSION_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSION_INDEX ( VER_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, SUMMARY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VERSION_INDEX ( VER_ID STRING PRIMARY KEY, CONTRACT_REF STRING, VERSION_NUMBER INT, RELEASE_NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTRACT_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, CONTRACT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTROLS_CATALOG ( CONTROL_ID STRING PRIMARY KEY, NAME STRING, CONTROL_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTROL_BINDINGS ( BIND_ID STRING PRIMARY KEY, CONTROL_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTROL_TESTING_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTROL_TESTING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ISSUES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONTROL_TESTING_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CONVERSATION_FEEDBACK_LOGS ( FB_ID STRING PRIMARY KEY, TRANS_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONVERSATION_MESSAGES ( MESSAGE_ID STRING PRIMARY KEY, SESSION_ID STRING, SENDER STRING, CONTENT CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONVERSATION_SEMANTIC_INDEX ( IDX_ID STRING PRIMARY KEY, TRANS_ID STRING, EMBEDDING VECTOR, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CONVERSATION_SESSIONS ( SESSION_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CONVERSATION_TRANSCRIPT_STORE ( TRANS_ID STRING PRIMARY KEY, SESSION_ID STRING, TRANSCRIPT CLOB, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CORPORATE_ENTITY_INDEX ( ENTITY_ID STRING PRIMARY KEY, NAME STRING, IDENTIFIERS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CORP_ENTITY_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, ENTITY_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COST_ALERT_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACCOUNT_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALERT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, CC_ID STRING, AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TAG_KEY STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, MAPPING_ID STRING, AMOUNT NUMBER, CURRENCY STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LINES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ALLOCATION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ALLOCATIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ALLOC_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_REF STRING, ALLOC_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RUNS ( RUN_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RUNS ( RUN_ID STRING PRIMARY KEY, RUN_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, ALLOC_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_TAGS ( TAG_KEY STRING, TAG_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOCATION_TAGS ( TAG_KEY STRING, TAG_VALUE STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ALLOC_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TAG_KEY STRING, ENTITY_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_CENTERS ( CC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CENTER_NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_CENTERS ( CC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.COST_CENTER_MAPPING ( MAPPING_ID STRING PRIMARY KEY, TENANT_ID STRING, COST_CENTER STRING, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COST_CENTER_REGISTRY ( CC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CC_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ESTIMATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ESTIMATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ESTIMATION_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCOPE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_ESTIMATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_OPTIMISATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_RECOVERY_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, RUN_ID STRING, ALLOCATION_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_RECOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COST_RECOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_RECORDS ( CS_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, COUNTERSIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_REGISTRY ( COUNTER_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_REQUESTS ( COUNTER_ID STRING PRIMARY KEY, ORIGINAL_BUNDLE_ID STRING, COUNTER_PARTIES ARRAY, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_RUNS ( RUN_ID STRING PRIMARY KEY, COUNTER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COUNTERSIGN_STATUS ( STATUS_ID STRING PRIMARY KEY, COUNTER_ID STRING, PARTY STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUPON_CODES ( COUPON_ID STRING PRIMARY KEY, CODE STRING, DISCOUNT JSON, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUPON_REDEMPTIONS ( REDEMPTION_ID STRING PRIMARY KEY, COUPON_ID STRING, ACCOUNT_ID STRING, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.COUPON_REDEMPTIONS ( RED_ID STRING PRIMARY KEY, COUPON_ID STRING, ACCOUNT_ID STRING, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COUPON_REGISTRY ( COUPON_ID STRING PRIMARY KEY, CODE STRING, DISCOUNT_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.COURT_ORDERS ( ORDER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ORDER_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.COURT_ORDERS_11 ( ORDER_ID STRING PRIMARY KEY, TARGET STRING, ORDER_DOC CLOB, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.COURT_ORDER_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ORDER_ID STRING, ACTION_TAKEN STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.COVERAGE_FORECASTS ( FC_ID STRING PRIMARY KEY, DATE_DAY DATE, PREDICTED_NEED INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CRED_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CRED_ID STRING, ACTION STRING, DETAILS VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_AUTHORIZATION_LOG ( LOG_ID STRING PRIMARY KEY, CRED_REF STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATIONS_09 ( ROT_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_LOGS_6201 ( LOG_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, CRED_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_RESULTS_09 ( RESULT_ID STRING PRIMARY KEY, ROT_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CRED_REF STRING, NEXT_ROTATION AT TIMESTAMP_LTZ, LAST_ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_ROTATION_SCHEDULE_6200 ( SCHEDULE_ID STRING PRIMARY KEY, TARGET_REF STRING, CRON_EXPR STRING, LAST_ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_USE_METRICS ( METRIC_ID STRING PRIMARY KEY, CRED_REF STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDENTIAL_VAULT_INDEX ( VAULT_ID STRING PRIMARY KEY, NAME STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_CONTROL_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_ELIGIBILITY ( ELIG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CRITERIA JSON, EVALUATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_LIMIT_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_MEMO_LOGS_6179 ( LOG_ID STRING PRIMARY KEY, MEMO_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CREDIT_USES_07 ( USE_ID STRING PRIMARY KEY, CREDIT_ID STRING, BUNDLE_ID STRING, AMOUNT_USED NUMBER, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRED_ROTATION_QUEUE ( Q_ID STRING PRIMARY KEY, SECRET_REF STRING, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CRED_ROTATION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CRL_CACHE ( CERT_ID STRING PRIMARY KEY, CRL_STATUS STRING, LAST_FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RAW_CRl VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_CACHE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_FETCH_HISTORY ( FETCH_ID STRING PRIMARY KEY, SOURCE STRING, RESPONSE VARIANT, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_FETCH_HISTORY ( FETCH_ID STRING PRIMARY KEY, SOURCE STRING, SUCCESS BOOLEAN, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_FETCH_HISTORY ( FETCH_ID STRING PRIMARY KEY, SOURCE_URL STRING, STATUS STRING, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX ( CRL_ID STRING PRIMARY KEY, CERT_ID STRING, CRL_DATA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX ( CRL_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX ( CRL_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX ( CRL_ID STRING PRIMARY KEY, CERT_SERIAL STRING, REVOKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_INDEX_09 ( CRL_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_INGEST_LOG ( LOG_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PARSED BOOLEAN DEFAULT FALSE ) ;

CREATE OR REPLACE TABLE DOCGEN.CRL_INGEST_LOG ( LOG_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PARSED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.CRL_REFRESH_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CRL_REFRESH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRL_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, SOURCE STRING, SNAPSHOT_AT TIMESTAMP_LTZ, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CRL_UPDATE_REGISTRY ( REG_ID STRING PRIMARY KEY, PROVIDER STRING, LAST_UPDATED_AT TIMESTAMP_LTZ, LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.CRL_UPDATE_REGISTRY ( UPDATE_ID STRING PRIMARY KEY, SOURCE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRON_JOB_REGISTRY ( JOB_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.CRON_JOB_RUNS ( RUN_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, OUTPUT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CROSSBORDER_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CROSSBORDER_TRANSFER_POLICIES ( POLICY_ID STRING PRIMARY KEY, COUNTRY_FROM STRING, COUNTRY_TO STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSSBORDER_TRANSFER_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, TARGET_COUNTRY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSSBORDER_TRANSFER_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_BORDER_TRANSFERS ( TRANSFER_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FROM_REGION STRING, TO_REGION STRING, STATUS STRING, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_BORDER_TRANSFER_LOGS ( LOG_ID STRING PRIMARY KEY, DATA_REF STRING, FROM_REGION STRING, TO_REGION STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CROSS_BORDER_TRANSFER_LOGS ( LOG_ID STRING PRIMARY KEY, TRANS_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CROSS_DOC_REFERENCE_INDEX ( REF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REFERENCES ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_REF_INDEX ( XR_ID STRING PRIMARY KEY, REF_TYPE STRING, REF_KEY STRING, TARGET_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_REGION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, REF STRING, REGION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_REGION_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, SYNC_ID STRING, CONFLICT_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CROSS_REGION_SYNC ( SYNC_ID STRING PRIMARY KEY, SOURCE_REGION STRING, TARGET_REGION STRING, STATUS STRING, LAST_SYNC_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR_TENANT STRING, TARGET_TENANT STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ACTIVITY_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIVITY_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ANALYSIS_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, SCOPE VARIANT, ENTRIES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_LIST ARRAY, SCOPE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CROSS_TENANT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRYPTOGRAPHIC_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, ACTION STRING, SUBJECT_REF STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRYPTO_FALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, REASON CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRYPTO_OPERATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OPERATION STRING, SUBJECT_REF STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CRYPTO_OPERATION_METRICS ( MET_ID STRING PRIMARY KEY, OP_TYPE STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CSR_APPROVE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CSR_ID STRING, APPROVER STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DECIDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CSR_APPROVE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, NOTES CLOB, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CSR_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, CSR_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CS_ENGAGEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTIVITY_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_CONVERSION_LOGS ( LOG_ID STRING PRIMARY KEY, FROM_CURRENCY STRING, TO_CURRENCY STRING, RATE NUMBER, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_RATES ( RATE_ID STRING PRIMARY KEY, FROM_CURR STRING, TO_CURR STRING, RATE NUMBER, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_RATE_FEEDS ( FEED_ID STRING PRIMARY KEY, PROVIDER STRING, RATES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_RATE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, BASE_CURRENCY STRING, RATES VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_RATE_UPDATE_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CURRENCY_RATE_UPDATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, CUSTODIAN_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, CUSTODIAN_REF STRING, TARGET_REF STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_ACTIVITY_LOGS ( LOG_ID STRING PRIMARY KEY, CUST_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_RECORDS ( CUST_ID STRING PRIMARY KEY, NAME STRING, CONTACT VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_REGISTRY ( CUST_ID STRING PRIMARY KEY, NAME STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_TRANSFER_JOBS ( JOB_ID STRING PRIMARY KEY, CUST_ID STRING, DOCUMENTS ARRAY, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODIAN_TRANSFER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODY_TRANSFER_EVENTS ( EVT_ID STRING PRIMARY KEY, COC_ID STRING, TRANSFERRED_TO STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTODY_TRANSFER_LOGS ( LOG_ID STRING PRIMARY KEY, COC_ID STRING, FROM_REF STRING, TO_REF STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.CUSTODY_TRANSFER_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESTINATION STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTODY_TRANSFER_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_AGREEMENT_INDEX ( AGREEMENT_ID STRING PRIMARY KEY, TENANT_ID STRING, AGREEMENT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_AUDIT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUESTOR STRING, PURPOSE STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DURATION_SECONDS INT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_AUDIT_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, DELIVERY_STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_AUDIT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, DELIVERY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BILLING_RUN_ID STRING, STATUS STRING DEFAULT 'OPEN', FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BILLING_RUN_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RUN_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PAYMENT_METHOD JSON, BILLING_ADDR VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_PROJECTION ( PROJ_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD JSON, ESTIMATES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_BILLING_RESOLUTION ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_CHURN_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_CHURN_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_CHURN_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, CHURN_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMS_HISTORY ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMS_HISTORY ( HIST_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMS_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMS_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMS_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMUNICATION_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMMUNICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMM_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMPLAINT_OUTCOMES ( OUT_ID STRING PRIMARY KEY, COMP_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMPLAINT_REGISTRY ( COMP_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS CLOB, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, DOC_LOCATION STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_CONTACT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, CONTACT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ENGAGEMENT_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, ENGAGEMENT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ENGAGEMENT_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ENTITLEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, CONTEXT VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, EVENT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_REGISTRY ( ESC_ID STRING PRIMARY KEY, TENANT_ID STRING, ESCALATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, ESC_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_EVENT_HANDLERS ( HANDLER_ID STRING PRIMARY KEY, STREAM_ID STRING, HANDLER_JSON VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_EVENT_METRICS ( METRIC_ID STRING PRIMARY KEY, STREAM_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_EVENT_STREAMS ( STREAM_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_QUEUE ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'OPEN', RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_QUEUE ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, FEEDBACK_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, RATING NUMBER, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, RESOLUTION VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_FEEDBACK_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, TENANT_ID STRING, QUESTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, TRIG_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC VARIANT, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, HEALTH_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, DETAILS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INDICES ( INDEX_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, HEALTH_SCORE NUMBER, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_SCORE ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCORE NUMBER, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, METADATA VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_SCORES ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SCORE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_TREND_MV ( MV_ID STRING PRIMARY KEY, TENANT_ID STRING, TREND_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_HEALTH_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, INDEX_ID STRING, TRIGGER_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_INSTALLATION_ISSUES ( ISSUE_ID STRING PRIMARY KEY, INST_ID STRING, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_INSTALLATION_RECORDS ( INST_ID STRING PRIMARY KEY, TENANT_ID STRING, DEPLOY_ENV STRING, INSTALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ISSUE_TRIAGE_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, DESCRIPTION CLOB, STATUS STRING DEFAULT 'NEW', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ISSUE_TRIAGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NDA_AUDIT ( AUDIT_ID STRING PRIMARY KEY, NDA_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NDA_REGISTRY ( NDA_ID STRING PRIMARY KEY, TENANT_ID STRING, NDA_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SENT_AT TIMESTAMP_LTZ, RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, AVG_SCORE NUMBER, SAMPLE_SIZE INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_DETAILS ( DETAIL_ID STRING PRIMARY KEY, RUN_ID STRING, RESPONDER STRING, RESPONSE JSON, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_HISTORY ( NPS_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE INT, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_NPS_SURVEY_RESULTS ( SURVEY_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_CHECKLISTS ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_FEEDBACK ( FB_ID STRING PRIMARY KEY, TENANT_ID STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_METRICS_V2 ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_NTF_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_NTF_RESULTS ( RES_ID STRING PRIMARY KEY, METRIC_ID STRING, OUTCOME VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_SLA ( SLA_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, TENANT_ID STRING, TASK_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, TENANT_ID STRING, TEMPLATE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TIMELINE ( TIMELINE_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TIMELINES ( TL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MILESTONES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_ONBOARDING_TIME_SERIES ( TS_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_OPERATIONAL_STATUS ( STATUS_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_POLICY_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, EX_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_PORTAL_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_PORTAL_SESSIONS ( SESSION_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_REF STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_ACTIVITY TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RETENTION_COHORT ( COHORT_ID STRING PRIMARY KEY, TENANT_ID STRING, COHORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, RISK_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RETENTION_INDICATORS ( IND_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RISK_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROFILE_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RISK_SCORE NUMBER, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SATISFACTION_RESPONSES ( RESP_ID STRING PRIMARY KEY, SURVEY_ID STRING, RESPONDER STRING, RESP JSON, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SATISFACTION_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SURVEY_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SATISFACTION_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, TENANT_ID STRING, QUESTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SATISFACTION_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, RESPONSES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SENTIMENT_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, SENTIMENT_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SERVICE_METRICS ( MET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SLA_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_REF STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SLA_PROFILES ( SLA_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SLA_PUBLIC_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_CONTACTS ( CS_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, ROLE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_INTERVENTIONS ( INTERV_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INTERVENTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_NOTES ( NOTE_ID STRING PRIMARY KEY, TENANT_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_PLAYBOOK ( PB_ID STRING PRIMARY KEY, TENANT_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, ACCOUNT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_TASKS ( TASK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUCCESS_TELEMETRY ( TEL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, TICKET_ID STRING, AUTHOR STRING, BODY CLOB, COMMENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, TICKET_ID STRING, AUTHOR STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, TICKET_ID STRING, LEVEL INT, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_FEEDBACK ( FB_ID STRING PRIMARY KEY, KB_ID STRING, TENANT_ID STRING, FEEDBACK_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_KB_INDEX ( KB_ID STRING PRIMARY KEY, TENANT_ID STRING, ARTICLE_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_SLA ( SLA_ID STRING PRIMARY KEY, TICKET_ID STRING, TARGET_MS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_SLA_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_SLA_REGISTRY ( SLA_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_SLA_RESULTS ( RES_ID STRING PRIMARY KEY, SLA_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, TICKET_ID STRING, SLA_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT CLOB, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, BODY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, DESCRIPTION CLOB, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, DESCRIPTION CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SUPPORT_TICKET_EVENTS ( EVENT_ID STRING PRIMARY KEY, TICKET_ID STRING, EVENT_JSON VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SURVEY_RESPONSES ( RESP_ID STRING PRIMARY KEY, SURVEY_ID STRING, RESPONDER STRING, ANSWERS VARIANT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SURVEY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESPONSES VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_SURVEY_RESULTS ( RES_ID STRING PRIMARY KEY, SURVEY_ID STRING, RESPONSES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_TRAINING_ATTENDANCE ( ATT_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, ATTENDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_TRAINING_SESSIONS ( SESSION_ID STRING PRIMARY KEY, TENANT_ID STRING, TOPIC STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_UNSUBSCRIBE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CUSTOMER_USAGE_AGGREGATE ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.CUSTOM_EXPORT_FORMATS ( FORMAT_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.CVE_TRACKER ( CVE_ID STRING PRIMARY KEY, AFFECTED_COMPONENTS ARRAY, SEVERITY STRING, DISCLOSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DAILY_ACTIVITY_AGG ( AGG_ID STRING PRIMARY KEY, DAY DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DAILY_SIGNATURE_METRICS ( DAY_ID STRING PRIMARY KEY, DAY DATE, ACCOUNT_ID STRING, SIGNATURES_COUNT NUMBER, FAILURES_COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DASHBOARD_REF STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_CONFIGS ( DASH_ID STRING PRIMARY KEY, NAME STRING, LAYOUT JSON, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_DATA ( DATA_ID STRING PRIMARY KEY, WIDGET_ID STRING, PAYLOAD VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_METRICS ( MET_ID STRING PRIMARY KEY, DASH_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, DASHBOARD_REF STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_RUNS ( RUN_ID STRING PRIMARY KEY, DASH_ID STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_RUNS_06 ( RUN_ID STRING PRIMARY KEY, DASH_ID STRING, STATUS STRING, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_SHARES ( SHARE_ID STRING PRIMARY KEY, DASH_ID STRING, SUBJECT_REF STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_WIDGETS ( WIDGET_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.DASHBOARD_WIDGETS_06 ( WIDGET_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_APPROVALS ( APR_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, DECIDED_BY STRING, DECIDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_AUDITS ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_CERTIFICATE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_CERTIFICATE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, CERT_ID STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_GOVERNANCE ( GOV_ID STRING PRIMARY KEY, RULES VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTER STRING, TARGET STRING, PURPOSE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_ACCESS_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, SUBJECT_REF STRING, POLICY_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ARCHIVAL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ARCHIVE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_ARCHIVE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_BACKFILL_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, Q_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_BACKFILL_QUEUE ( Q_ID STRING PRIMARY KEY, TASK_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CATALOG_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, TABLE_NAME STRING, SCHEMA_JSON VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION ( CLASS_ID STRING PRIMARY KEY, TABLE_NAME STRING, COLUMN_NAME STRING, SENSITIVITY_LEVEL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATIONS ( CLASS_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_09 ( CLASS_ID STRING PRIMARY KEY, NAME STRING, SENSITIVITY_LEVEL STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_INDEX ( CLASS_ID STRING PRIMARY KEY, FIELD_REF STRING, CLASSIFICATION STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_INDEX ( CLASS_ID STRING PRIMARY KEY, TARGET_REF STRING, CLASSIFICATION JSON, LABELED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_INDEX ( CLS_ID STRING PRIMARY KEY, FIELD_REF STRING, SENSITIVITY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_REGISTRY ( CLASS_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, CLASS_ID STRING, TARGET_REF STRING, RESULT JSON, CLASSIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, PROFILE_ID STRING, OBJECT_REF STRING, CLASSIFICATION JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_CLASSIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_CUSTODIAN_REGISTRY ( CUST_ID STRING PRIMARY KEY, NAME STRING, CONTACT JSON, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_DELETION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, TARGET_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_DELETION_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_DELETION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUEST_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_DELETION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_DELETION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_DISPOSAL_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_DISPOSAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_DRIFT_ALERTS_07 ( ALERT_ID STRING PRIMARY KEY, INDEX_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ENCRYPTION_KEY_REGISTRY ( DEK_ID STRING PRIMARY KEY, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURES ( ERASE_ID STRING PRIMARY KEY, TARGET_REF STRING, INITIATED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURES_LOG ( LOG_ID STRING PRIMARY KEY, ERASE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_EXPORTS_04 ( EXPORT_ID STRING PRIMARY KEY, TYPE STRING, CREATED_BY STRING, STATUS STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPORT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_EXPORT_CONTROL ( EXPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, FORMAT STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_GOVERNANCE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_GOVERNANCE_ENGAGEMENTS ( ENG_ID STRING PRIMARY KEY, POLICY_ID STRING, STAKEHOLDERS VARIANT, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_GOVERNANCE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_TABLE STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_02 ( LINEAGE_ID STRING PRIMARY KEY, TARGET_REF STRING, SOURCE_REFS ARRAY, CAPTURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, TRANSFORM JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, TRANSFORM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_EDGES ( EDGE_ID STRING PRIMARY KEY, SOURCE_REF STRING, TARGET_REF STRING, TRANSFORMATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_EVENTS ( EVT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LINEAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_EVENTS ( LINEAGE_ID STRING PRIMARY KEY, SOURCE_SYSTEM STRING, SOURCE_ID STRING, TARGET_TABLE STRING, TARGET_ID STRING, CAPTURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_INDEX ( LINE_ID STRING PRIMARY KEY, OBJECT_REF STRING, LINEAGE_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_NODES ( NODE_ID STRING PRIMARY KEY, NODE_TYPE STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_NODES ( NODE_ID STRING PRIMARY KEY, REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LINEAGE_RECORDS ( LINEAGE_ID STRING PRIMARY KEY, OBJECT_REF STRING, LINEAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_LOCALITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REGION STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_AUDIT_RULES ( RULE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, TARGET_COLUMN STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, FIELD_REF STRING, MASKING_RULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, MASK_EXPR STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKING_RULES ( RULE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MASKS_09 ( MASK_ID STRING PRIMARY KEY, FIELD_NAME STRING, MASK_EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MIGRATION_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, JOB_ID STRING, ITEM STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_MIGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_MINIMIZATION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PORTABILITY_EXPORTS ( EXP_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, LOCATION STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_PORTABILITY_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FORMAT STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PORTABILITY_RESULTS ( RES_ID STRING PRIMARY KEY, EXP_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PORTABILITY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PRIVACY_REQUESTS ( DPR_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'RECEIVED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROCESSING_AGREEMENTS ( DPA_ID STRING PRIMARY KEY, TENANT_ID STRING, AGREEMENT CLOB, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROCESSING_AGREEMENTS ( DPA_ID STRING PRIMARY KEY, TENANT_ID STRING, AGREEMENT CLOB, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROTECTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROTECTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, IDX_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_GRAPH_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_GRAPH_NODES ( NODE_ID STRING PRIMARY KEY, REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, RECORD_REF STRING, PROVENANCE JSON, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, SOURCE_REF STRING, PROV_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, ENTITY_REF STRING, PROVENANCE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, RECORD_REF STRING, PROVENANCE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, REF_TYPE STRING, REF_ID STRING, PROV_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_INDEX_02 ( PROV_ID STRING PRIMARY KEY, TARGET_REF STRING, HASH STRING, PROVENANCE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_QUERIES ( QUERY_ID STRING PRIMARY KEY, PROV_ID STRING, QUERY_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVENANCE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, OBJECT_REF STRING, SNAP_JSON VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVISIONING_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PROVISIONING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PSEUDONYMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PSEUDONYMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_PSEUDONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, AFFECTED_ROWS INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_PSEUDONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MAPPING VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_PURGES ( PURGE_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROWS_PURGED NUMBER );

CREATE OR REPLACE TABLE DOCGEN.DATA_PURGE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, TARGET_REF STRING, PURGED_BY STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_PURGE_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, TARGET_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_ALARMS ( ALARM_ID STRING PRIMARY KEY, CHECK_ID STRING, TARGET_REF STRING, ALARM_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, QUERY STRING, LAST_RUN_AT TIMESTAMP_LTZ, LAST_RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, TARGET_REF STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, QUERY_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_QUALITY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RECALL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DIFF JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_REMOVAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_REMOVAL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RESIDENCY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, RESTORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_ACKS ( ACK_ID STRING PRIMARY KEY, NOTICE_ID STRING, SUBJECT_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TARGET_TABLE STRING, POLICY_ID STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TARGET_TABLE STRING, ACTION STRING, PERFORMED_BY STRING, AT_TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, TARGET_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, POLICY_ID STRING, ISSUED_TO STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, VIOL_ID STRING, LEVEL STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, BUNDLE_ID STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, RECORD_REF STRING, REASON STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTIONS_6067 ( EX_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXCEPTION_LOGS_6068 ( LOG_ID STRING PRIMARY KEY, EX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_LOG ( LOG_ID STRING PRIMARY KEY, TARGET_TABLE STRING, ACTION STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_NOTICES ( NOTICE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TARGET_TABLE STRING, RETENTION_DAYS INT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, ARCHIVE_BEFORE BOOLEAN DEFAULT TRUE, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGETS ARRAY, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, RETENTION_DAYS INT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICIES_09 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGET_TABLE STRING, RETENTION_DAYS INT, ACTION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_POLICY_VERSIONS_6174 ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REPORT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_REPORTS_12 ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_TASKS ( TASK_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, LAST_RUN_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_VERSION_LOGS_6175 ( LOG_ID STRING PRIMARY KEY, VERSION_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_RETENTION_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, TARGET_REF STRING, POLICY_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SANITATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SANITATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SANITIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_SANITIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SENSITIVITY_13 ( SENS_ID STRING PRIMARY KEY, FIELD_REF STRING, LEVEL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SENSITIVITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TARGET_REF STRING, REVIEWER STRING, RESULT STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SENSITIVITY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SENSITIVITY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_AGREEMENTS ( AGREEMENT_ID STRING PRIMARY KEY, PARTIES VARIANT, TERMS VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_APPROVALS ( APR_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_APPROVAL_LOG ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, AGREEMENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_REVOKES ( REV_ID STRING PRIMARY KEY, REQ_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_SHARING_TRANSFERS ( TRANS_ID STRING PRIMARY KEY, REQ_ID STRING, TARGET_PARTY STRING, TRANSFER_DETAILS VARIANT, TRANSFERRED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_SOVEREIGNTY_REGISTRY ( REG_ID STRING PRIMARY KEY, TENANT_ID STRING, REGION STRING, REQUIREMENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_STEWARD_ACTIVITY ( ACT_ID STRING PRIMARY KEY, STEWARD_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_STEWARD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, STEWARD_REF STRING, SCOPE VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_STEWARD_REGISTRY ( STEWARD_ID STRING PRIMARY KEY, NAME STRING, CONTACT JSON, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_ACCESS_INDEX_6281 ( ACCESS_ID STRING PRIMARY KEY, USER_REF STRING, SCOPE VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_ACCESS_LOGS_6282 ( LOG_ID STRING PRIMARY KEY, ACCESS_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_ACCESS_REPORT ( REPORT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_MAP ( MAP_ID STRING PRIMARY KEY, SUBJECT_REF STRING, BUNDLE_IDS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_PORTABILITY ( PORT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_PROCESSING_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( DSR_ID STRING PRIMARY KEY, SUBJECT_ID STRING, REQUEST_TYPE STRING, SCOPE VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'NEW', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TENANT_ID STRING, REQUEST_TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS_11 ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUESTS_INDEX ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_REGISTRY ( DSR_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, DSR_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, DSR_ID STRING, LOCATION STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_RESULTS ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAIL VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT_VARIANT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_SUBJECT_WORKFLOW ( WF_ID STRING PRIMARY KEY, REQ_ID STRING, STEPS VARIANT, CURRENT_STEP STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_TRANSFER_CONTROL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_TRANSFER_LOGS ( LOG_ID STRING PRIMARY KEY, TRANSFER_ID STRING, ENTRY JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_TRANSFER_REGISTRY ( TRANSFER_ID STRING PRIMARY KEY, SOURCE STRING, DESTINATION STRING, STATUS STRING, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_TRANSFER_RESULTS ( RES_ID STRING PRIMARY KEY, TRANSFER_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DATA_USAGE_CATALOG ( USAGE_ID STRING PRIMARY KEY, TENANT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DB_BACKUP_REGISTRY ( BACKUP_ID STRING PRIMARY KEY, TARGET STRING, LOCATION STRING, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DB_BACKUP_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DB_BACKUP_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DB_MIGRATION_REGISTRY ( MIG_ID STRING PRIMARY KEY, NAME STRING, SCRIPT_LOCATION STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DB_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, MIG_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEADLINE_POLICIES_01 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEADLINE_TRIGGERS_01 ( TRIGGER_ID STRING PRIMARY KEY, POLICY_ID STRING, BUNDLE_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTION VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEAD_LETTER_08 ( DLQ_ID STRING PRIMARY KEY, ORIGIN STRING, PAYLOAD VARIANT, ERROR TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEEP_LINK_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, LINK_REF STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEEP_LINK_REGISTRY ( LINK_ID STRING PRIMARY KEY, TARGET_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEK_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, DEK_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEK_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ADMIN_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACTION_ID STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_REGISTRY ( ADMIN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUESTOR STRING, PERMISSIONS VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ADMIN_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, SUBJECT STRING, CRED_META VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATED_ROLE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ROLE_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELEGATION_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELETED_RECORD_RECOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DELETED_RECORD_RECOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RECOVERED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELETION_ACTIONS_04 ( ACTION_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PERFORMED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DELETION_REQUESTS_04 ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELETION_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELETION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELIVERABILITY_METRICS_06 ( METRIC_ID STRING PRIMARY KEY, CHANNEL STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELIVERY_RETRY_LOGS_6155 ( LOG_ID STRING PRIMARY KEY, RETRY_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DELIVERY_RETRY_QUEUE_6154 ( RETRY_ID STRING PRIMARY KEY, NOTIF_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.DEMO_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEMO_METRICS ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEMO_SEED_REGISTRY ( SEED_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEMO_SEED_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEMO_SEED_RUNS ( RUN_ID STRING PRIMARY KEY, SEED_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEMO_SIGNERS ( SIGNER_ID STRING PRIMARY KEY, NAME STRING, EMAIL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEMO_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_CHANGE_EVENTS ( EVENT_ID STRING PRIMARY KEY, DEP_ID STRING, CHANGE_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_CHANGE_LOGS_6111 ( LOG_ID STRING PRIMARY KEY, MAP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_IMPACT_INDEX ( IDX_ID STRING PRIMARY KEY, ENTITY_REF STRING, IMPACT_JSON VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_LOGS_6405 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_MANIFESTS_08 ( MANIFEST_ID STRING PRIMARY KEY, NAME STRING, CONTENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_NOTIF_LOGS_6308 ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_REBUILD_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_REBUILD_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_REBUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_REBUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPENDENCY_VULNERABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, DEP_NAME STRING, VULN_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, ENV STRING, VERSION STRING, STATUS STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, DEPLOY_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_AUDIT ( DA_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, DEPLOY_REF STRING, STATUS STRING, LOGS VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, DEPLOY_REF STRING, USER_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, DEPLOY_REF STRING, ACTOR STRING, ACTION STRING, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_CADENCE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM STRING, DEPLOY_COUNT INT, AVG_TIME_MIN NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, CHANGE_REF STRING, DETAILS VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_GATE_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PASS BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_GATE_CHECKS ( CHECK_ID STRING PRIMARY KEY, RELEASE_ID STRING, CHECK_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, PIPELINE_REF STRING, STATUS STRING, LAST_RUN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, FILE_LIST VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_NOTIFICATION_LOGS ( NOTIF_ID STRING PRIMARY KEY, RUN_ID STRING, MESSAGE STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_PIPELINE_ARTIFACTS ( ART_ID STRING PRIMARY KEY, RUN_ID STRING, PATH STRING, SIZE_BYTES NUMBER );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_PIPELINE_METRICS ( MET_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_PIPELINE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ARTIFACTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, PIPELINE_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, VERSION STRING, ENVIRONMENT STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_RECORDS ( DEPLOY_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DEPLOYED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_RECORDS_08 ( DEPLOY_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, STATUS STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_ROLLBACK_QUEUE ( Q_ID STRING PRIMARY KEY, DEPLOY_REF STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_RUNS ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEPLOYMENT_WINDOW_REGISTRY ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOY_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, APPROVAL_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOY_BLOCKING_ISSUES ( ISSUE_ID STRING PRIMARY KEY, RELEASE_ID STRING, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOY_DRIVER_LOG ( LOG_ID STRING PRIMARY KEY, STEP STRING, STATUS STRING, DETAILS VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPLOY_ROLLBACK_REQS ( REQ_ID STRING PRIMARY KEY, RUN_ID STRING, REQUESTOR STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_LOGS_6304 ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MIGRATED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTICES ( NOTICE_ID STRING PRIMARY KEY, TARGET_REF STRING, MESSAGE CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTICE_LOG ( LOG_ID STRING PRIMARY KEY, DEP_ID STRING, SENT_TO ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTICE_REGISTRY ( NOTICE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, NOTICE CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PLAN_ID STRING, TENANT_SCOPE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_NOTIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, SCHED_ID STRING, TARGET STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DEPRECATION_REGISTRY ( DEP_ID STRING PRIMARY KEY, OBJECT_REF STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTIFY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DERIVATIVE_CLEANUP_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DERIVATIVE_CLEANUP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DERIVATIVE_GENERATION_JOBS ( JOB_ID STRING PRIMARY KEY, ART_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DERIVATIVE_GENERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_API_KEYS ( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_API_KEYS ( KEY_ID STRING PRIMARY KEY, DEVELOPER_REF STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_API_USAGE ( USG_ID STRING PRIMARY KEY, DEVELOPER_REF STRING, CALLS INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_KEYS ( DEV_KEY_ID STRING PRIMARY KEY, DEVELOPER STRING, KEY_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_KEY_USAGE ( USG_ID STRING PRIMARY KEY, DEV_KEY_ID STRING, ENDPOINT STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_NOTES ( NOTE_ID STRING PRIMARY KEY, COMPONENT STRING, NOTE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_NOTES_INDEX ( NOTE_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_ONBOARDING_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, API_KEY_ID STRING, USAGE_COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, API_KEY_ID STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVELOPER_USAGE_LEDGER ( LEDGER_ID STRING PRIMARY KEY, API_KEY_ID STRING, METRIC STRING, COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ACTIVITY_LOGS_6191 ( LOG_ID STRING PRIMARY KEY, DEVICE_ID STRING, ACT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ALERTS ( ALERT_ID STRING PRIMARY KEY, DEVICE_ID STRING, ALERT_TYPE STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, DEVICE_ID STRING, ATTESTATION VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ATTEST_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_EVENTS ( EVT_ID STRING PRIMARY KEY, SIGNER_ID STRING, ATTEST_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_INDEX ( IDX_ID STRING PRIMARY KEY, ATTEST_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_JOBS ( JOB_ID STRING PRIMARY KEY, DEVICE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_JOBS ( JOB_ID STRING PRIMARY KEY, DEVICE_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_JOBS ( JOB_ID STRING PRIMARY KEY, DEVICE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_LOGS_6197 ( LOG_ID STRING PRIMARY KEY, ATTEST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_RECORDS ( ATTEST_ID STRING PRIMARY KEY, SIGNER_ID STRING, ATTESTATION_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DEVICE_ID STRING, SUBJECT_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REPORT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT_JSON VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_ATTESTATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_AUTHN_LOGS_6243 ( LOG_ID STRING PRIMARY KEY, AUTHN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_CERTIFICATE_REGISTRY ( CERT_ID STRING PRIMARY KEY, DEVICE_ID STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_CERTIFICATE_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_CERT_BINDING ( BIND_ID STRING PRIMARY KEY, DEVICE_ID STRING, CERT_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_CERT_REVOCATION_QUEUE ( Q_ID STRING PRIMARY KEY, BIND_ID STRING, REVOKE_REASON CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_CERT_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, DEVICE_ID STRING, CHECK_NAME STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_COMPROMISE_ALERTS ( ALERT_ID STRING PRIMARY KEY, DEVICE_ID STRING, RISK_DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_EVENTS_13 ( EVENT_ID STRING PRIMARY KEY, DEVICE_ID STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FINGERPRINT_ID STRING PRIMARY KEY, DEVICE_ID STRING, ATTRIBUTES VARIANT, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FINGER_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FINGERPRINT VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT_HASH STRING, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_SEEN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNER_ID STRING, FP_HASH STRING, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_INFO VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FP_HASH STRING, FP_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS_05 ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS_08 ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS_11 ( FINGERPRINT_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINTS_14 ( FPRINT_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNER_ID STRING, FINGERPRINT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_ANOMALIES ( ANOMALY_ID STRING PRIMARY KEY, FP_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_EVENTS ( EVENT_ID STRING PRIMARY KEY, FINGER_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FINGER_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SIGNER_ID STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FINGER_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FINGER_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT JSON, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FINGER_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT_HASH STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FPRINT_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT VARIANT, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_SEEN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FPR_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT_HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, DEVICE_HASH STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SIGNER_ID STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_INDEX ( F_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT_HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_MATCHES ( MATCH_ID STRING PRIMARY KEY, FPR_ID STRING, MATCH_SCORE NUMBER, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_REGISTRY ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_STORE ( FINGERPRINT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FINGERPRINT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FINGERPRINT_STORE ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, FIRST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FIRMWARE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DEVICE_ID STRING, FIRMWARE_VERSION STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FIRMWARE_INDEX ( FW_ID STRING PRIMARY KEY, DEVICE_ID STRING, VERSION STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FIRMWARE_REGISTRY ( FW_ID STRING PRIMARY KEY, DEVICE_MODEL STRING, VERSION STRING, RELEASE_NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FIRMWARE_UPDATE_JOBS ( JOB_ID STRING PRIMARY KEY, FW_ID STRING, DEVICE_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FIRMWARE_UPDATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_FP_AGG ( AGG_ID STRING PRIMARY KEY, DEVICE_ID STRING, FIRST_SEEN TIMESTAMP_LTZ, LAST_SEEN TIMESTAMP_LTZ, TOTAL_SESSIONS INT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_GEOLOCATION_LOGS ( LOG_ID STRING PRIMARY KEY, DEVICE_ID STRING, LATITUDE NUMBER, LONGITUDE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_GEO_INDEX ( IDX_ID STRING PRIMARY KEY, FP_ID STRING, GEO VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, DEVICE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_HEALTH_METRICS ( MET_ID STRING PRIMARY KEY, DEVICE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_LOCATION_HISTORY ( HIST_ID STRING PRIMARY KEY, DEVICE_ID STRING, LAT NUMBER, LNG NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_LOCATION_HISTORY ( LOCATION_ID STRING PRIMARY KEY, DEVICE_ID STRING, LOCATION JSON, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REGISTRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DEVICE_ID STRING, SUBJECT_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REGISTRATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REPUTATION_11 ( REPUTE_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SCORE NUMBER, DETAILS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REPUTATION_INDEX ( REP_ID STRING PRIMARY KEY, DEVICE_ID STRING, REPUTATION_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REVOCATIONS ( REV_ID STRING PRIMARY KEY, DEVICE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, DEVICE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REVOCATION_LIST ( REV_ID STRING PRIMARY KEY, DEVICE_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_REVOCATION_LOG ( REV_ID STRING PRIMARY KEY, DEVICE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, DEVICE_HASH STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, DEVICE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_EVENT_QUEUE ( Q_ID STRING PRIMARY KEY, DEVICE_ID STRING, EVENT_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DEVICE_HASH STRING, ACTION JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, DEVICE_ID STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SCORE NUMBER, ACTION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( RISK_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SCORE FLOAT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( RISK_ID STRING PRIMARY KEY, FP_ID STRING, RISK_SCORE FLOAT, REASON VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, FINGERPRINT_ID STRING, RISK_SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, FINGER_ID STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, FPRINT_ID STRING, RISK_SCORE NUMBER, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, FP_ID STRING, RISK_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_SIGNAL_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, DEVICE_ID STRING, METRICS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, DEVICE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUSTS ( TRUST_ID STRING PRIMARY KEY, DEVICE_HASH STRING, SUBJECT_REF STRING, TRUST_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, DEVICE_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_LOGS ( LOG_ID STRING PRIMARY KEY, TRUST_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( DEVICE_ID STRING PRIMARY KEY, TRUST_SCORE FLOAT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, SCORE NUMBER, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, SCORE NUMBER, FACTORS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, TRUST_SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, TRUST_SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, TRUST_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES_06 ( SCORE_ID STRING PRIMARY KEY, DEVICE_REF STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES_08 ( SCORE_ID STRING PRIMARY KEY, FP_ID STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVICE_TRUST_SCORES_13 ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_DEPLOY_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, PIPELINE_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_DEPLOY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DEPLOY_REF STRING, USER_REF STRING, DETAILS VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_DEPLOY_JOBS ( JOB_ID STRING PRIMARY KEY, ENV STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_DEPLOY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOG_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_PIPELINE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ARTIFACTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, PIPELINE_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DEVOPS_RELEASE_CHECKS ( CHECK_ID STRING PRIMARY KEY, RELEASE_REF STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DIGEST_VERIFICATION_LOGS_6093 ( LOG_ID STRING PRIMARY KEY, DIGEST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISASTER_RECOVERY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, STEPS VARIANT, LAST_REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISASTER_RECOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, TEST_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISASTER_RECOVERY_TESTS ( TEST_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCLOSURE_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, DISC_ID STRING, SUBJECT_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCLOSURE_REGISTRY ( DISC_ID STRING PRIMARY KEY, TENANT_ID STRING, DISC_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCOUNT_APPLICATIONS ( APP_ID STRING PRIMARY KEY, INVOICE_ID STRING, DETAIL VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCOUNT_CODE_REGISTRY ( CODE_ID STRING PRIMARY KEY, CODE STRING, RULES VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCOUNT_CODE_REGISTRY ( CODE_ID STRING PRIMARY KEY, TENANT_ID STRING, CODE STRING, RULES VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DISCOUNT_REDEMPTIONS ( REDEMPTION_ID STRING PRIMARY KEY, CODE_ID STRING, ACCOUNT_ID STRING, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ORDER_REF STRING );

CREATE OR REPLACE TABLE DOCGEN.DISCOUNT_REDEMPTIONS ( RED_ID STRING PRIMARY KEY, CODE_ID STRING, TENANT_ID STRING, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCOVERY_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISCOVERY_RESULTS_ARCHIVE ( ARCH_ID STRING PRIMARY KEY, Q_ID STRING, LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DISPATCH_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPOSITION_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, DISP_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, REFUND_ID STRING, ACCOUNT_ID STRING, REASON STRING, STATUS STRING DEFAULT 'OPEN', OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_CASES_11 ( CASE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, DETAILS VARIANT, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, DISPUTE_ID STRING, ESCALATED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_LOGS ( LOG_ID STRING PRIMARY KEY, DISPUTE_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_METRICS_BY_TENANT ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, OPEN_DISPUTES INT, RESOLVED_DISPUTES INT, AS_OF TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, RESOLVED_BY STRING, RESOLUTION STRING, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_RESOLUTIONS_06 ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, RESOLVED_BY STRING, RESOLUTION TEXT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, DISPUTE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISPUTE_UPDATES_11 ( UPDATE_ID STRING PRIMARY KEY, CASE_ID STRING, NOTE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DISTRIBUTION_LIST_ACTIVITY ( ACT_ID STRING PRIMARY KEY, LIST_ID STRING, ACTION JSON, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DLQ ( DLQ_ID STRING PRIMARY KEY, SOURCE_TABLE STRING, PAYLOAD VARIANT, ERROR_DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DLQ_EVENTS ( EVENT_ID STRING PRIMARY KEY, QUEUE_NAME STRING, PAYLOAD VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), FAILURE_REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.DLQ_REPROCESS_LOG ( LOG_ID STRING PRIMARY KEY, DLQ_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DLQ_RETRY_QUEUE ( RETRY_ID STRING PRIMARY KEY, DLQ_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_AI_MODEL_LOGS_6129 ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_AI_MODEL_REGISTRY_6128 ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ALERT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, ALERT_JSON VARIANT, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ALERT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, ALERT_JSON VARIANT, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, OBJECT_NAME STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_BATCH_RUN_ERRORS ( ERROR_ID STRING PRIMARY KEY, RUN_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_BATCH_RUN_STATS ( STAT_ID STRING PRIMARY KEY, BATCH_NAME STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_CONTENT_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, RES_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_CONTENT_DRIFT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_CONTENT_DRIFT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_DATA_LINEAGE ( LINEAGE_ID STRING PRIMARY KEY, OBJECT_REF STRING, PRODUCER_REF STRING, CONSUMER_REF STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_DEPRECATED_FEATURES ( FEATURE_ID STRING PRIMARY KEY, NAME STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTICE STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_DEPRECATED_FEATURES ( FEATURE_ID STRING PRIMARY KEY, NAME STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTICE STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ENTROPY_ALERTS ( ALERT_ID STRING PRIMARY KEY, MET_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ENTROPY_METRICS ( MET_ID STRING PRIMARY KEY, TARGET_REF STRING, ENTROPY NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ERROR_BUDGET_6112 ( BUDGET_ID STRING PRIMARY KEY, TENANT_ID STRING, ALLOWED_ERRORS INT, WINDOW_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_ERROR_BUDGET_LOGS_6113 ( LOG_ID STRING PRIMARY KEY, BUDGET_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESTINATION JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_EVIDENCE_SEARCH_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_INDEX_RETENTION_ENFORCEMENT ( ENF_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, LAST_RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_INDEX_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_INGEST_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_INGEST_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, QUERY_SQL CLOB, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, QUERY_SQL CLOB, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_KPI_ROLLUPS ( ROLL_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, VALUE VARIANT, ROLL_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_KPI_ROLLUPS ( ROLL_ID STRING PRIMARY KEY, KPI_ID STRING, TENANT_ID STRING, VALUE VARIANT, ROLL_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_LINEAGE_EVENTS ( EVT_ID STRING PRIMARY KEY, LINEAGE_ID STRING, EVENT_JSON VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MAINTENANCE_NOTICES ( NOTICE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MAINTENANCE_NOTICES ( NOTICE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, LOGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, LOGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MIGRATION_TASKS ( TASK_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_MIGRATION_TASKS ( TASK_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_OPERATIONAL_NOTES ( NOTE_ID STRING PRIMARY KEY, CATEGORY STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_OPERATIONAL_RUNBOOK_INDEX ( RUNBOOK_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PIPELINE_ALERTS ( ALERT_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PIPELINE_LOGS_6131 ( LOG_ID STRING PRIMARY KEY, RUN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PIPELINE_METRICS ( METRIC_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PIPELINE_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PIPELINE_RUN_INDEX_6130 ( RUN_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PLAYBOOK_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, EXEC_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROV_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_RENDER_QUEUE_STATS ( STAT_ID STRING PRIMARY KEY, QUEUE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SCALING_ADVICE ( ADVICE_ID STRING PRIMARY KEY, TARGET_REF STRING, ADVICE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SCHEDULER_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SCHEDULER_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SCHEDULER_RUNS ( RUN_ID STRING PRIMARY KEY, CFG_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLA_ACKS ( ACK_ID STRING PRIMARY KEY, EVT_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLA_ACKS ( ACK_ID STRING PRIMARY KEY, EVT_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLA_EVENTS ( EVT_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, EVENT JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLA_EVENTS ( EVT_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, EVENT JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLO_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLO_ID STRING, ALERT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLO_TARGETS ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLO_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SLO_VIOLATIONS_6114 ( VIOL_ID STRING PRIMARY KEY, SLO_REF STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SNAPSHOT_CATALOG ( SNAP_ID STRING PRIMARY KEY, OBJECT_REF STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SNAPSHOT_CATALOG ( SNAP_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SNAPSHOT_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCGEN_SNAPSHOT_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_ANOMALIES ( ANOMALY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANOMALY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_AUDIT_INDEX_6069 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, AUDIT_SUMMARY VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_AUDIT_LOGS_6070 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUED_TO STRING, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_CHANGE_FEED ( FEED_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_CONTROLS ( DAC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_CONTROL_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION STRING, ACTOR STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, GRANT_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, ACTION STRING, IP_ADDR STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_REF STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_NOTIFICATION_RESPONSES ( RES_ID STRING PRIMARY KEY, NOTIF_ID STRING, RESPONSE_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_PATTERNS ( PATTERN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCESS_SEQ VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_PATTERNS ( PATTERN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PATTERN JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICIES_V2 ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGER STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_RESPONSES ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONDER STRING, RESPONSE JSON, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, ACCESS_LOCATION STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REVOCATIONS ( REV_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REVOCATION_JOBS ( JOB_ID STRING PRIMARY KEY, GRANT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_SUMMARIES ( SUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACL_HISTORY ( H_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACL_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACL_INDEX_6158 ( ACL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACL JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACTIVITY_AGG ( AGG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ACTIVITY_STREAM ( ACT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACT_TYPE STRING, PAYLOAD VARIANT, ACT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_AI_ANNOTATION_INDEX ( ANN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATION JSON, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANALYTICS_06 ( ANALYTIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANNOTATION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, AUTHOR STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANNOTATION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE_NUMBER INT, ANNOTATOR STRING, NOTE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANNOT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANNOTATOR STRING, CONTENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, ANNOTATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS ( ANN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, ANNOTATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATIONS_08 ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, ANNOTATION CLOB, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ANNOT_ID STRING, ACTION STRING, ACTED_BY STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_INDEX ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, ANNOT_JSON VARIANT, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_INDEX ( ANNO_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, ANNOTATION JSON, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_INDEX_6042 ( ANNOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOT_JSON VARIANT, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_LOGS_6043 ( LOG_ID STRING PRIMARY KEY, ANNOT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ANNOTATIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ANNOTATION_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_APPROVAL_INDEX_6320 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, APPROVAL_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVAL_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGETS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVAL_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVAL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, ARCHIVE_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVE ( DOCUMENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSEMBLY_RUN_ID STRING, DOCUMENT_URL STRING, DOCUMENT_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, CREATED_BY STRING, JURISDICTION STRING, RETENTION_TAG STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVE ( DOCUMENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSEMBLY_RUN_ID STRING, DOCUMENT_URL STRING, DOCUMENT_HASH STRING, MIME_TYPE STRING, SIZE_BYTES NUMBER, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVE_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, BUNDLE_ID STRING, ARCHIVE_LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ASSEMBLIES ( ASSEMBLY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, METADATA VARIANT, RENDERED_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ASSEMBLY_RUN ( ASSEMBLY_RUN_ID STRING PRIMARY KEY, REQUEST_ID STRING, TEMPLATE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_AUDIT_MARKERS ( MARKER_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, KEY STRING, VALUE VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_BACKUP_INDEX ( BACKUP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, BACKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHECKSUM STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_BACKUP_INDEX ( BACKUP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, BACKUP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, CHECKSUM STRING, BACKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_BIOMETRIC_HASHES ( BIO_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, BIOMETRIC_HASH STRING, METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_BLACKLIST ( BL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CACHE_META VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CATEGORIZATION_INDEX_6116 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CATEGORIES ARRAY, SCORES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREV_HASH STRING, NEXT_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FEED_ID STRING, ACTOR STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_FEED ( FEED_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_STREAM ( STREAM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_STREAM_INDEX ( IDX_ID STRING PRIMARY KEY, STREAM_ID STRING, DOCUMENT_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHANGE_TELEMETRY_6098 ( TELE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS ( CHECK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ALGO STRING, CHECKSUM STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ALGORITHM STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS ( DOCUMENT_ID STRING PRIMARY KEY, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS_03 ( CHECKSUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUMS_09 ( CHECKSUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, ALGORITHM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_ARCHIVE ( ARCH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_HISTORY ( H_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_MON ( MON_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EXPECTED_CHECKSUM STRING, LAST_VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_REGISTRY ( CHECK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_REGISTRY ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHECKSUM_REGISTRY ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, CHECKSUM STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHUNK_EMBEDDINGS ( EMB_ID STRING PRIMARY KEY, CHUNK_ID STRING, EMBEDDING VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHUNK_METADATA ( META_ID STRING PRIMARY KEY, CHUNK_ID STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CHUNK_STORE ( CHUNK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SEQ INT, TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, MODEL_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LABELS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LABELS VARIANT, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLASSIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LABELS VARIANT, SCORES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_HISTORY ( CH_ID STRING PRIMARY KEY, REQ_ID STRING, ORIGINAL_DOC STRING, NEW_DOC STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_LOGS_6339 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SOURCE_DOCUMENT_ID STRING, TARGET_TENANT STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SOURCE_DOC_ID STRING, TARGET_OWNER STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_REQUESTS_6338 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CLONED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, NEW_DOC_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLONE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, TARGET_DOCUMENT_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CLUSTER_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_INDEX ( CLUSTER_ID STRING PRIMARY KEY, CENTROID VARIANT, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_INDEX ( CLUSTER_ID STRING PRIMARY KEY, MEMBER_DOCS ARRAY, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_MEMBERS ( MEMBER_ID STRING PRIMARY KEY, CLUSTER_ID STRING, DOCUMENT_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_META ( CLUSTER_ID STRING PRIMARY KEY, DOCUMENT_IDS ARRAY, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CLUSTER_METRICS ( METRIC_ID STRING PRIMARY KEY, CLUSTER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_COLLABORATION_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HOST_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_COLLISION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, COLLISION_REASON STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_COMPARE_DIFFS ( DIFF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FROM_VERSION INT, TO_VERSION INT, DIFF_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_COMPLIANCE_FLAGS_6228 ( FLAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FLAGS VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_COMPLIANCE_SCORES ( SCORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, DETAILS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONCORDANCE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TERM STRING, OCCURRENCES INT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONCURRENCY_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PEAK_LOCKS INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONFIDENCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, SCORE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONFIDENCE_SCORES ( SCORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, META VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONFLICT_LOG ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CONFLICT_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONTENT_HASHES ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CONTENT_HASH STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONTENT_INDEX ( DOC_ID STRING PRIMARY KEY, SNIPPET STRING, EMBEDDING VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONTENT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHUNK_REF STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONVERSION_QUEUE ( QUEUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_FORMAT STRING, STATUS STRING DEFAULT 'PENDING', QUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_CONVERSION_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DELETION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DELETION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DEPRECATION_HISTORY ( HIST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DEPRECATION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DEPRECATED_BY STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DEP_GRAPH ( EDGE_ID STRING PRIMARY KEY, FROM_DOC STRING, TO_DOC STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DERIVATION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DERIVATION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DERIVATIVE_ARTIFACTS ( ART_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TYPE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DERIVATIVE_INDEX ( DERIV_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DERIV_TYPE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DIFF_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, BASE_VERSION INT, TARGET_VERSION INT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DIFF_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DIFF_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DIGEST_INDEX_6092 ( DIGEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DIGEST STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_DOWNLOAD_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DOWNLOAD_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EDIT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SES_ID STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EDIT_HISTORY ( EDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EDITOR STRING, CHANGES VARIANT, EDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EDIT_SESSIONS ( SES_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EDITOR STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EMBEDDINGS ( DOCUMENT_ID STRING, SECTION_ID STRING, EMBEDDING VARIANT, PROVENANCE VARIANT, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EMBEDDING_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EMBEDDING_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EMERGENT_INSIGHTS ( INSIGHT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, INSIGHT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ENRICHMENT_INDEX_6291 ( ENRICH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ENRICH_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ENRICHMENT_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ENRICHMENT_TYPE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ENRICHMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ENRICHED_FIELDS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EQUIVALENCE_SETS ( SET_ID STRING PRIMARY KEY, HASH STRING, DOCUMENT_IDS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ETAG_INDEX ( ETAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ETAG STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EVENT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EVENT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EVENT_STREAM ( EVT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_FORMATS ( FORMAT_ID STRING PRIMARY KEY, NAME STRING, MIME_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FORMAT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FORMAT STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FINGERPRINT_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, FPR_ID STRING, OTHER_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FINGERPRINT_INDEX ( FPRINT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FPRINT STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FINGERPRINT_INDEX ( FPR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FINGERPRINT STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FINGERPRINT_MATCHES ( MATCH_ID STRING PRIMARY KEY, FPRINT_ID STRING, MATCHED_DOC_REF STRING, SCORE NUMBER, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FLAGS ( FLAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FLAG_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FLAG_HISTORY ( FH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FLAG_KEY STRING, PREV_VALUE STRING, NEW_VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FOLDERS ( FOLDER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, PARENT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_FORMAT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, FORMAT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_GEOLOCATION_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, GEO_POINT VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_GEO_ORIGINS ( ORIG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, GEO JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, HASH_ID STRING, CONFLICT_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, COMPUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HASH_REGISTRY ( HASH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, IDX_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HEALTH VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HISTORY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, EVENT_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HOLD_REFS ( REF_ID STRING PRIMARY KEY, HOLD_ID STRING, DOCUMENT_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HOLD_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, REASON CLOB, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_IMPORT_QUEUE ( Q_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_IMPORT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, DOCUMENT_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INDEX_12 ( DOC_INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DOCUMENT_TEXT CLOB, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INDEX_ALIASES ( ALIAS_ID STRING PRIMARY KEY, ALIAS_NAME STRING, TARGET_INDEX STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INDEX_SHARDS_6049 ( SHARD_ID STRING PRIMARY KEY, SHARD_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INDEX_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ALERT_TYPE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EXPECTED_HASH STRING, OBSERVED_HASH STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_BACKFILL ( BACKFILL_ID STRING PRIMARY KEY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, BACKFILL_ID STRING, DOCUMENT_ID STRING, RESULT STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_CHECKPOINTS ( CP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_CHECKS ( CHK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_FIXES ( FIX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPLIED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, INCIDENT_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROOF_HASH STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, INCIDENT_ID STRING, INVESTIGATOR STRING, STATUS STRING DEFAULT 'OPEN', UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_MONITORING ( MON_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKS VARIANT, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_MONITORS ( MON_ID STRING PRIMARY KEY, TARGET_REF STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_REPAIR_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_REPORTS ( REP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_RESOLUTION_QUEUE ( Q_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTEGRITY_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_INTERACTION_EVENTS ( EVT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, EVENT_JSON VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ISSUE_TRACKER_6388 ( ISSUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LABEL_INDEX ( LABEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, KEY STRING, VALUE VARIANT, LABELED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LABEL_INDEX ( LABEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LABEL STRING, ASSIGNED_BY STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LANGUAGE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LANG STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LIFECYCLE_08 ( LIFECYCLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LIFECYCLE_12 ( LIFECYCLE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STAGE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LIFECYCLE_INDEX_6188 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LIFECYCLE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LIFECYCLE_STATES ( STATE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATE_NAME STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LINEAGE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, RELATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_EVENTS ( EVENT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_INDEX ( LINEAGE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PARENT_DOCS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_INDEX ( LINEAGE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PARENT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_LINKS ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PARENT_REF STRING, RELATION_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINEAGE_SUMMARY ( SUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LINEAGE_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINKS ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINKS_08 ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LINK_INDEX ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LINKED_TO STRING, RELATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCKDOWN_EVENTS ( EVENT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), UNLOCKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCKS ( LOCK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCKS ( LOCK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCK_HISTORY ( HISTORY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION STRING, BY_USER STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCK_HISTORY ( H_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCK_HISTORY ( LOCK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), UNLOCKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_LOCK_OWNERS ( OWNER_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FILES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_HISTORY ( MERGE_ID STRING PRIMARY KEY, PRIMARY_DOC_ID STRING, MERGED_DOC_IDS ARRAY, MERGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_JOBS ( JOB_ID STRING PRIMARY KEY, PARENT_DOC STRING, CHILD_DOCS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_DOCS ARRAY, TARGET_DOC STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DATA_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MERGE_DATA VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_LOGS_6343 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_QUEUE_6342 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, MERGE_INSTRUCTIONS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MERGED_DOC_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RENDERED_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RENDER_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT_DOC STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_MERKLE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, MERKLE_ROOT STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_METADATA ( META_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_METADATA_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METADATA VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_METADATA_INDEX ( META_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, META_KEY STRING, META_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_METADATA_STORE ( META_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METADATA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_NOTIFICATION_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SENT_COUNT NUMBER, FAILURE_COUNT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OCR_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, OCR_TEXT CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OPT_IN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, OPT_IN BOOLEAN, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OPT_OUT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, OPT_OUT BOOLEAN, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OWNERSHIP_CHANGES ( CHANGE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, OLD_OWNER STRING, NEW_OWNER STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OWNERSHIP_HISTORY ( HIST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, OWNER_REF STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_OWNERSHIP_TRANSFERS ( TRANS_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FROM_OWNER STRING, TO_OWNER STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PARSING_ERRORS ( ERROR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ERROR_MSG STRING, TRACE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PERMISSIONS_07 ( DP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, PERM_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_POLICY_BINDINGS ( BINDING_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PRESIGNED_URLS ( URL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_ACL ( ACL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, PERMS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_LOCATION STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_CACHE ( PREVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_LOCATION STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREVIEW_USAGE ( USG_ID STRING PRIMARY KEY, PREVIEW_ID STRING, USER_REF STRING, VIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREV_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PREV_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PREVIEW_URL STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROCESSING_BENCHMARKS_6070 ( BENCH_ID STRING PRIMARY KEY, JOB_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_CHAIN ( CHAIN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, RELATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_GRAPH ( NODE_ID STRING PRIMARY KEY, DOC_REF STRING, PARENT_REFS ARRAY, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROV_HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROV_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PROVENANCE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROV_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PSEUDONYM_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PURGES ( PURGE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PURGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PURGED_BY STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_PURGE_DRYRUN ( DRY_ID STRING PRIMARY KEY, POLICY_ID STRING, PREDICTED_COUNT INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_ANNOTATIONS ( ANNO_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ANNOTATOR STRING, NOTE CLOB, ANNOTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_CHECKS ( QC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHECKS VARIANT, STATUS STRING DEFAULT 'PENDING', RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_FLOW_6072 ( FLOW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STEPS VARIANT, STATUS STRING DEFAULT 'NEW', UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_LOGS_6073 ( LOG_ID STRING PRIMARY KEY, FLOW_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_METRICS_6295 ( METRIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_METRIC_LOGS_6296 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_RESULTS ( RES_ID STRING PRIMARY KEY, QC_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QC_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QNA_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, QUERY_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QNA_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ANSWERS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QOS_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROFILE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QOS_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, SLO JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QOS_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROFILE_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QRCODES ( QR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, QR_PAYLOAD STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QR_INDEX ( QR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, QR_PAYLOAD STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_06 ( QUALITY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE FLOAT, DETAILS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, MET_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_DASH_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_ISSUES_6330 ( ISSUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_METRICS ( METRIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, SCORE NUMBER, COMMENTS CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_SCORE ( SCORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_READABILITY_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_LOGS_6095 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_LOGS_6371 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_REQUESTS_6094 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_REQUESTS_6370 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RECALL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_INDEX_6326 ( REDACT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTION_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTION_RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTION_RULES VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTION_JSON VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_LOGS ( REDACT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTED_BY STRING, REDACTION_JSON VARIANT, REDACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_LOGS_03 ( REDACTION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTED_BY STRING, FIELDS REDACTED VARIANT, REDACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, REDACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'NEW', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REDACTED_LOCATION STRING, META VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REFERENCE_INDEX ( REF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REF_KEY STRING, REF_VALUE STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REFERENCE_INDEX ( REF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REF_TYPE STRING, REF_VALUE STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REHYDRATION_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REHYDRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RELATIONSHIPS_08 ( REL_ID STRING PRIMARY KEY, FROM_DOC STRING, TO_DOC STRING, RELATION_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_COST_BREAKDOWN ( B_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LINE_ITEMS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ATTEMPT INT DEFAULT 0, STATUS STRING DEFAULT 'PENDING', LAST_ERROR VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_METRICS ( METRIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RENDER_TIME_MS NUMBER, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENGINE STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_PREVIEW_CACHE ( PREVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RENDER_OPTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RENDER_TELEMETRY ( TELE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RENDER_MS NUMBER, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, DOCUMENT_ID STRING, OUTCOME STRING, DETAIL VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_AUDIT_V2 ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, DOCUMENT_ID STRING, OUTCOME STRING, DETAIL VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OPERATOR STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_LOGS_6097 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, REQ_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_QUEUE ( QUEUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_QUEUE_6096 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ISSUE JSON, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME STRING, DETAIL VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REPLACEMENT_INDEX ( IDX_ID STRING PRIMARY KEY, ORIGINAL_DOC STRING, REPLACEMENT_DOC STRING, REPLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, REQUESTED_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETAIN_FLAGS ( FLAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION ( RETENTION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, POLICY_ID STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, DOCUMENT_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, BUCKET_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_AUDIT_6168 ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RETENTION_JSON VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_AUDIT_LOGS_6169 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_BUCKETS ( BUCKET_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EVAL ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, DOCUMENT_ID STRING, STATUS STRING, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, REASON STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CLOSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTIONS_6098 ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTIONS_6120 ( EXC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXCEPTION_LOGS_6099 ( LOG_ID STRING PRIMARY KEY, EX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, GRANTED_BY STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON CLOB, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPROVED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_FLAGS ( FLAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FLAG_NAME STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_LABELS ( LABEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LABEL_KEY STRING, LABEL_VALUE STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_LOG ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TENANT_ID STRING, NOTIF_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, SCOPE VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_POLICY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_RESPONSE_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, SUBJECT_REF STRING, RESPONSE JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RETENTION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REUSE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REUSED_IN ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REUSE_REGISTRY ( REG_ID STRING PRIMARY KEY, ORIGINAL_DOC_ID STRING, REUSE_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REUSE_SUGGESTIONS ( SUG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUGGESTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'ASSIGNED' );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, ASSIGN_ID STRING, AUTHOR STRING, COMMENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_LOGS_6039 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_METRICS ( MET_ID STRING PRIMARY KEY, ASSIGN_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_NOTES ( NOTE_ID STRING PRIMARY KEY, REVIEW_ID STRING, NOTE STRING, AUTHOR STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TENANT_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_QUEUE_6038 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME STRING, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVIEW_WORKFLOW ( WF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STEPS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVISIONS_08 ( REV_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REV_NUMBER INT, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVISION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REV_NUMBER INT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_REVISION_READ_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, USER_REF STRING, READ_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RISK_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SAFELIST ( SAFE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EXEMPT_REASON STRING, EXEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SECTION_INDEX ( SECTION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TITLE STRING, CONTENT CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SECTION_METRICS ( MET_ID STRING PRIMARY KEY, SECTION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SECURITY_LABELS ( DSL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LABEL_KEY STRING, LABEL_VALUE STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SEMANTICS ( DOC_ID STRING PRIMARY KEY, TOPICS VARIANT, ENTITIES VARIANT, GENERATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SEMANTIC_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EMBEDDING VECTOR, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SEMANTIC_TAGS ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG STRING, CONFIDENCE NUMBER, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SENSITIVITY_LABELS ( LABEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LEVEL STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARES ( SHARE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SHARED_WITH STRING, PERMISSIONS VARIANT, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SHARE_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SHARE_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_LINKS ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LINK_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SHARED_WITH STRING, CHANNEL STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SHARED_WITH STRING, METHOD STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_LOGS_6161 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_REGISTRY ( SHARE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, PERMS VARIANT, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, TARGET_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_REQUESTS_6160 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SHARING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_REF STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_CHAIN_6396 ( CHAIN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHAIN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHAIN_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_DENSITY ( DENS_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DENSITY_METRICS VARIANT, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_META ( META_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_REF STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOTAL_SIGS INT, UNIQUE_SIGNERS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_POSITIONS ( POS_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_REF STRING, PAGE_NUMBER INT, COORDS VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_REL ( REL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_ID STRING, REL_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_SUMMARY ( SUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_COUNT INT, LAST_SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_SUMMARY_6317 ( SUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGN_COUNT INT, LAST_SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_SUMMARY_V2 ( SUM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_COUNT INT, LAST_SIGNED_AT TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNATURE_VERSIONS ( VER_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNATURE_ID STRING, VERSION_NUMBER INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNER_AFFINITY ( AFF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, AFFINITY_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNING_SEQUENCE ( SEQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STEP_NUMBER INT, SIGNER_REF STRING, REQUIRED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIGNING_TELEMETRY ( TEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, NEIGHBORS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_CLUSTERS ( CLUSTER_ID STRING PRIMARY KEY, MEMBERS ARRAY, CENTROID VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_CLUSTERS ( CLUSTER_ID STRING PRIMARY KEY, MEMBERS ARRAY, CENTROID VECTOR, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_EXPORT ( EXPORT_ID STRING PRIMARY KEY, SNAP_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EMBEDDING VECTOR, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VECTOR VECTOR, EMBEDDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VECTOR VECTOR, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_INDEX_6134 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VECTOR VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_SCORES_11 ( SCORE_ID STRING PRIMARY KEY, DOC_A STRING, DOC_B STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_SHARDS ( SHARD_ID STRING PRIMARY KEY, PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIMILARITY_STORE ( SIM_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EMBEDDING VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SIZE_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIZE_BYTES NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOTS_12 ( SNAP_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SNAPSHOT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SNAP_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_LOC STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SNAPSHOT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_INDEX_6138 ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SNAPSHOT_RETENTION ( RET_ID STRING PRIMARY KEY, SNAP_ID STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SPLIT_HISTORY ( SPLIT_ID STRING PRIMARY KEY, ORIGINAL_DOC_ID STRING, NEW_DOC_IDS ARRAY, SPLIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_STORAGE_REFS ( REF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STORAGE_PROVIDER STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_STORAGE_USAGE ( USAGE_ID STRING PRIMARY KEY, TENANT_ID STRING, BYTES_USED NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SUBPOENA_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUMMARY_CLOB CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SUMMARIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_SUMMARIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STRATEGY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAGGING_RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAGS ARRAY, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TAGS ARRAY, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TAGS ARRAY, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TAGS VARIANT, SCORES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGGING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, TAGS ARRAY, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAGS_07 ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAGS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_INDEX ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_INDEX ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_INDEX ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAG_KEY STRING, TAG_VALUE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_INDEX_6132 ( TAG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TAGS ARRAY, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAG_USAGE ( USAGE_ID STRING PRIMARY KEY, TAG STRING, COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAMPER_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAMPER_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DETECTION_METHOD STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TAXONOMY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TERM_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TELEMETRY_EVENTS ( TELE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATES_MAP ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATES_MAP_06 ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_LIFECYCLE ( LIFECYCLE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_LOCKS ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_LOCK_HISTORY ( HIST_ID STRING PRIMARY KEY, LOCK_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPLATE_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPORAL_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TIMELINE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPORAL_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEMPORAL_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEXT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEXT_CLOB CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TEXT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEXT_SNIPPET STRING, POSITION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_THUMBNAILS ( THUMB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE_NUM INT, THUMB_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_THUMBNAIL_INDEX ( THUMB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TIMESERIES_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TS TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TOPIC_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOPIC_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TOPIC_INDEX ( TOPIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOPICS ARRAY, SCORES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TOPIC_INDEX ( TOPIC_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOPIC_JSON VARIANT, SCORE NUMBER, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_INDEX_6046 ( TRANS_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LANG_CODE STRING, TRANS_JSON VARIANT, TRANSLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LANG STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LOCALE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LOCALE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LOCALES ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_LOGS_6047 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_QUEUE_6046 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCALES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSLATED_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_USAGE_HEATMAP ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, BUCKETED_METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VALIDATION_RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VALIDATION_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, DOCUMENT_ID STRING, STATUS STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESULT STRING, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CONTENT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, VERSION_METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSIONS_04 ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGE_LOG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_COMPARE ( COMPARE_ID STRING PRIMARY KEY, DOC_ID STRING, FROM_VER INT, TO_VER INT, DIFF JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_HISTORY ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CHANGES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_HISTORY ( VH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CHANGES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX ( DVID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, METADATA VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, VERSION_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX ( VER_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX ( VID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_INDEX_6348 ( VERSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_LINKS ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_REF STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_LINKS ( LINK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_REF STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_LOGS_6349 ( LOG_ID STRING PRIMARY KEY, VERSION_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_RETENTION ( RET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RETAIN_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VERSION_RETENTION ( RET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, RETENTION_DAYS INT, SCHEDULED_PURGE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VIEW_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VIEW_COUNT INT, UNIQUE_VIEWERS INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_VISIBILITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WATERMARK_CONFIGS ( CFG_ID STRING PRIMARY KEY, TENANT_ID STRING, CFG_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WATERMARK_INDEX ( WATERMARK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, WATERMARK_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WATERMARK_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, WATERMARK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WATERMARK_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, WATERMARK_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WATERMARK_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_WHITELIST ( WL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TENANT_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ZIP_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FILES ARRAY, ZIP_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_ACTIVITY_HEATMAP ( HM_ID STRING PRIMARY KEY, TENANT_ID STRING, BUCKET JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_APPROVAL_ACTIONS ( ACT_ID STRING PRIMARY KEY, INST_ID STRING, ACTOR STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_APPROVAL_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INST_ID STRING, REASON CLOB, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_APPROVAL_INSTANCES ( INST_ID STRING PRIMARY KEY, WF_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_APPROVAL_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_BACKUP_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOC_BACKUP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOC_DEP_ALERTS ( ALERT_ID STRING PRIMARY KEY, EDGE_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_ENGAGEMENT_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_GENERATION_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_HASH_AUDIT ( AUDIT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, HASH_BEFORE STRING, HASH_AFTER STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_INDEX_SHARDS_11 ( SHARD_ID STRING PRIMARY KEY, SHARD_PREFIX STRING, STATUS STRING, LAST_BUILD_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOC_INTEGRITY_HEALTH ( HEALTH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LAST_CHECKED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOC_INTEGRITY_INDEX_6261 ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, INTEGRITY_HASH STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOC_MIGRATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, STEP STRING, LOG VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOC_PREVIEW_TRACK ( PREVIEW_ID STRING PRIMARY KEY, REQUEST_ID STRING, USER_ID STRING, PREVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOC_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RECALL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RENDER_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, ERROR_TEXT CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RENDER_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RENDERED_URL STRING, FORMAT STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_REPAIR_QUEUE ( Q_ID STRING PRIMARY KEY, DOC_ID STRING, ISSUE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, FIX_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_LOCATION STRING, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DOC_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOC_RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, DOC_ID STRING, TENANT_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.DOC_SNAPSHOT_MANIFEST_VERSIONS ( VERSION_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, VERSION_NUMBER INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_STORAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD_PCT NUMBER, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.DOC_STORAGE_QUOTA ( QUOTA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ALLOCATED_BYTES NUMBER, USED_BYTES NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_TRANSLATION_PROVIDER_REGISTRY ( REG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_VERSION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUM INT, AUDIT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DOC_VERSION_RETENTION ( RET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_ID STRING, RETAIN_UNTIL TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DPA_ACCEPTANCE ( ACCEPT_ID STRING PRIMARY KEY, DPA_ID STRING, SUBJECT_REF STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DPA_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, DPA_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.DPR_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DPR_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DR_EXERCISE_RESULTS ( RES_ID STRING PRIMARY KEY, PLAN_ID STRING, OUTCOME VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSAR_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSAR_EXPORT_INDEX ( EXPORT_ID STRING PRIMARY KEY, DSR_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSAR_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, REQ_ID STRING, FILE_URL STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSAR_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSAR_RESPONSES_11 ( RESPONSE_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONDER STRING, RESPONSE_PAYLOAD VARIANT, RESPONDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DSR_ACTIONS ( ACTION_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DSR_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, DSR_ID STRING, TARGET_STAGE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DS_MAPPING_HISTORY ( H_ID STRING PRIMARY KEY, SUBJECT_REF STRING, MAP_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DUE_DILIGENCE_RECORDS ( DUE_ID STRING PRIMARY KEY, PROVIDER STRING, RECORD JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DUNNING_HISTORY ( H_ID STRING PRIMARY KEY, Q_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DUNNING_QUEUE ( Q_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STAGE STRING, NEXT_ACTION_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.DUPLICATE_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DUPLICATE_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_APPROVAL_ACTIONS ( ACT_ID STRING PRIMARY KEY, INST_ID STRING, ACTOR STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_APPROVAL_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INST_ID STRING, REASON STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_APPROVAL_INSTANCES ( INST_ID STRING PRIMARY KEY, RULE_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_APPROVAL_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CACHE_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_CONFIG_CACHE ( CACHE_ID STRING PRIMARY KEY, SCOPE_REF STRING, CONFIG JSON, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_POLICY_ENGINES ( ENGINE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_POLICY_EVALUATORS ( EVAL_ID STRING PRIMARY KEY, NAME STRING, CODE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_POLICY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_POLICY_RUNS ( RUN_ID STRING PRIMARY KEY, ENGINE_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_PRICING_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, RULE_ID STRING, ACCOUNT_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_PRICING_METRICS ( METRIC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_PRICING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_PRICING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_RATECARD_UPDATES ( UPDATE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RATECARD_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, TARGETS VARIANT, PRIORITY INT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.DYNAMIC_WORKER_POOL_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.E2E_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EDGE_CACHE_INDEX ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, META VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EDISCOVERY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, USER_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EDITOR_CHANGE_TRACKING ( TRACK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, DIFF VARIANT, TRACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EDITOR_COLLAB_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EDITOR_COLLAB_SESSIONS ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PARTICIPANTS ARRAY, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_ACTIVE TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EDITOR_PRESENCE_INDEX ( PRES_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EFFECTIVE_POLICIES ( EFFECT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_JSON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_ALERTS ( ALERT_ID STRING PRIMARY KEY, TO_ADDRESSES ARRAY, SUBJECT STRING, BODY STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_BOUNCE_INDEX ( BOUNCE_ID STRING PRIMARY KEY, EMAIL STRING, BOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_BOUNCE_INDEX ( BOUNCE_ID STRING PRIMARY KEY, EMAIL STRING, REASON STRING, BOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERIES_04 ( DELIVERY_ID STRING PRIMARY KEY, NOTIFY_ID STRING, EMAIL STRING, SUBJECT STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ, RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERIES_07 ( DELIVERY_ID STRING PRIMARY KEY, EMAIL_ID STRING, STATUS STRING, RESPONSE VARIANT, DELIVERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, HTTP_STATUS INT, RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERY_QUEUE_10 ( QUEUE_ID STRING PRIMARY KEY, RECIPIENT STRING, SUBJECT STRING, BODY VARIANT, CHANNEL STRING, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERY_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, MESSAGE_ID STRING, STATUS STRING, DELIVERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_DELIVERY_STATS ( STATS_ID STRING PRIMARY KEY, PROVIDER STRING, SUCCESS INT, FAIL INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_INTEGRATION_LOG ( LOG_ID STRING PRIMARY KEY, RECIPIENT STRING, SUBJECT STRING, BODY CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_PROVIDER_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_PROVIDER_QUOTA ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_REF STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_QUEUE_07 ( EMAIL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'QUEUED', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_TEMPLATES_07 ( TEMPLATE_ID STRING PRIMARY KEY, SUBJECT STRING, BODY CLOB, FROM_ADDR STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_TEMPLATES_12 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMAIL_TEMPLATE_LOCALIZATION ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LANG STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_ASSET_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ASSET_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_ASSET_INDEX ( IDX_ID STRING PRIMARY KEY, ASSET_ID STRING, KEYWORDS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_ASSET_REGISTRY ( ASSET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PATH STRING, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_MEDIA ( MEDIA_ID STRING PRIMARY KEY, BUNDLE_ID STRING, MEDIA_TYPE STRING, LOCATION STRING, META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_OCR_TEXT_STORE ( OCR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE_NUMBER INT, OCR_TEXT CLOB, EXTRACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDED_RESOURCES ( RESOURCE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RESOURCE_TYPE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INSERTED INT, FAILED INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INSERTED_COUNT INT, SKIPPED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_CHUNK_INDEX ( CHUNK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PART_INDEX INT, VECTOR VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_CHUNK_META ( META_ID STRING PRIMARY KEY, CHUNK_ID STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_CHUNK_STATS ( STAT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CHUNK_COUNT INT, AVG_DIM INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, INDEX_REF STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_FLUSH_JOBS_11 ( JOB_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_HASH_REGISTRY ( HASH_ID STRING PRIMARY KEY, EMBED_REF STRING, HASH_VALUE STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_HEALTH ( EH_ID STRING PRIMARY KEY, INDEX_NAME STRING, NUM_VECTORS INT, LAST_UPDATED TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INDEXER_ERRORS ( ERR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INDEXER_STATS ( STAT_ID STRING PRIMARY KEY, JOB_ID STRING, INSERTED INT, FAILED INT, DURATION_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INDEXING_JOBS ( JOB_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INGEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BATCH_REF STRING, RECORD_COUNT INT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INGEST_ERRORS ( ERR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, INDEX_REF STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_INTEGRITY_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, ISSUES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_REF STRING, STATUS STRING DEFAULT 'PENDING', BATCH_SIZE INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INSERTED_COUNT INT, FAILED_COUNT INT, DETAILS VARIANT, FINISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_LOAD_ERRORS_14 ( ERROR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_LOAD_JOBS_14 ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, FINISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PURGED_COUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_QUALITY_METRICS ( METRIC_ID STRING PRIMARY KEY, INDEX_REF STRING, QUALITY_SCORE NUMBER, SAMPLE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, EMBED_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, INDEX_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, SHARD_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RECONCILE_QUEUE ( Q_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RECONCILE_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, EXPECTED INT, FOUND INT, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MISSING_COUNT NUMBER, ORPHAN_COUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REFRESH_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_SCOPE VARIANT, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REFRESH_LOGS_6053 ( LOG_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REFRESH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REFRESH_SCHEDULE_6052 ( SCHEDULE_ID STRING PRIMARY KEY, SHARD_ID STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SHARD_MAP ( MAP_ID STRING PRIMARY KEY, SHARD_ID STRING, RANGE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SHARD_RECON ( RECON_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOTS_05 ( SNAP_ID STRING PRIMARY KEY, SHARD_REF STRING, SNAP_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_FILES ( FILE_ID STRING PRIMARY KEY, SNAP_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_JOBS ( JOB_ID STRING PRIMARY KEY, SNAPSHOT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, S3_PATH STRING, SHARD_COUNT INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_SNAPSHOT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_STREAM_OFFSETS ( OFFSET_ID STRING PRIMARY KEY, STREAM_NAME STRING, LAST_OFFSET VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_VECTORS ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VECTOR VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBEDDING_VERSION_MAP ( MAP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION INT, SNAPSHOT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMBED_INDEX_STATUS ( INDEX_ID STRING PRIMARY KEY, STATUS STRING, LAST_BUILT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EMERGENCY_CONTACT_LISTS ( LIST_ID STRING PRIMARY KEY, NAME STRING, CONTACTS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMERGENCY_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EMERGENCY_NOTIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, LIST_ID STRING, MESSAGE CLOB, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEYS_METADATA ( KEY_ID STRING PRIMARY KEY, KEY_ALIAS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY_META VARIANT, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_KEY_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY_USER STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_ROTATION_JOBS_08 ( JOB_ID STRING PRIMARY KEY, KEY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENCRYPTION_ROTATION_RESULTS_08 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINTS_CATALOG ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINTS_CATALOG ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.ENDPOINTS_CATALOG_02 ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINTS_CATALOG_03 ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINT_HEALTH_HISTORY ( H_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINT_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, ENDPOINT STRING, PROFILE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDPOINT_THREAT_METRICS ( MET_ID STRING PRIMARY KEY, ENDPOINT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDUSER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDUSER_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENDUSER_CONSENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, VERSION INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.END_OF_LIFE_NOTICES ( NOTICE_ID STRING PRIMARY KEY, COMPONENT_REF STRING, NOTICE_CLOB CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2951_signature_operator_onboarding_checklist.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.END_OF_LIFE_NOTICES ( NOTICE_ID STRING PRIMARY KEY, COMPONENT_REF STRING, NOTICE_CLOB CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2951_signature_operator_onboarding_checklist.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.END_OF_STREAM_MARKER ( MARKER_ID STRING PRIMARY KEY, NOTE STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.END_OF_TRANCHE_02_MARKERS ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.END_OF_TRANCHE_04_MARKERS ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.END_OF_TRANCHE_MARKERS ( MARKER_ID STRING PRIMARY KEY, TRANCHE_NUMBER INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.END_OF_TRANCHE_MARKERS_6183 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_NUMBER INT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENGAGEMENT_HISTORY ( HIST_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENGAGEMENT_SCORE_INDEX ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENRICHMENT_LOGS_6292 ( LOG_ID STRING PRIMARY KEY, ENRICH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, STATUS STRING DEFAULT 'NEW', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TYPE STRING, STATUS STRING DEFAULT 'PENDING', PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_REQUESTS_02 ( REQUEST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, STATUS STRING DEFAULT 'NEW', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_STATUS ( ENROLL_ID STRING PRIMARY KEY, SIGNER_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENROLLMENT_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SIGNER_ID STRING, TOKEN STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENSEMBLE_LOGS ( LOG_ID STRING PRIMARY KEY, ROUTE_ID STRING, REQUEST_ID STRING, SELECTED_MODELS ARRAY, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENSEMBLE_ROUTES ( ROUTE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, PRIORITY INT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_ACCOUNT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_AUDIT_ACCESS ( ACCESS_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AUDITOR STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, REVIEWER STRING, RESULT JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_LEGAL_HOLD_LOCKS ( LOCK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TARGET_REF STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_SECURITY_CONTROLS ( CTRL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CONTROLS_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTERPRISE_SSO_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, DETAILS VARIANT, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CACHE ( CACHE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_KEY STRING, ALLOWED BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CACHE ( CACHE_KEY STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, IS_ENTITLED BOOLEAN, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CHANGE_HISTORY ( CHG_ID STRING PRIMARY KEY, ENTITLEMENT_ID STRING, CHANGED_BY STRING, OLD_STATE VARIANT, NEW_STATE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CHANGE_HISTORY ( CHG_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, ACTION STRING, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_LOGS_10 ( LOG_ID STRING PRIMARY KEY, ENT_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_OVERRIDE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, OVERRIDE_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_OVERRIDE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_RECONCILIATION ( REC_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_REPAIR_QUEUE ( QUEUE_ID STRING PRIMARY KEY, AUDIT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.ENTITLEMENT_ROLLBACK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, PREV_STATE VARIANT, ROLLED_BACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROLLBACK_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.ENTITY_COMPLIANCE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ENTITY_ID STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITY_RESOLUTION_INDEX ( IDX_ID STRING PRIMARY KEY, ENTITY_REF STRING, ALIASES ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENTITY_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ENTITY_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MAPPINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ENV_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EPHEMERAL_KEYS ( KEY_ID STRING PRIMARY KEY, SUBJECT_REF STRING, KEY_BLOB STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EPHEMERAL_TOKEN_REGISTRY ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EQUIVALENCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, SET_ID STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ERROR_BUDGET_BURN_RATE ( BURN_ID STRING PRIMARY KEY, SERVICE_REF STRING, BURN_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_CATALOG_02 ( ERROR_CODE STRING PRIMARY KEY, SUMMARY STRING, DESCRIPTION STRING, SEVERITY STRING );

CREATE OR REPLACE TABLE DOCGEN.ERROR_CATEGORY_INDEX ( CAT_ID STRING PRIMARY KEY, COMPONENT STRING, ERROR_CODE STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_CLASSIFICATION_INDEX_6226 ( IDX_ID STRING PRIMARY KEY, ERROR_CODE STRING, CLASSIFICATION STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_CLASSIFICATION_LOGS_6227 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_EVENTS_02 ( EVENT_ID STRING PRIMARY KEY, ERROR_CODE STRING, CONTEXT VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, CONTEXT STRING, ERROR_DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ERROR_RATE_METRICS ( MET_ID STRING PRIMARY KEY, COMPONENT STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ERROR_TRACES ( TRACE_ID STRING PRIMARY KEY, COMPONENT STRING, ERROR_CODE STRING, TRACE CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATIONS ( ESC_ID STRING PRIMARY KEY, REQUEST_ID STRING, REASON STRING, RAISED_BY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ESC_ID STRING, ACTION_TAKEN STRING, TAKEN_BY STRING, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_ACTION_HISTORY ( ACT_ID STRING PRIMARY KEY, RULE_ID STRING, INCIDENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ESC_ID STRING, ASSIGNEE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_CONTACTS_05 ( EC_ID STRING PRIMARY KEY, POLICY_ID STRING, CONTACT_ID STRING, ORDERING INT );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_CONTACT_LISTS ( LIST_ID STRING PRIMARY KEY, NAME STRING, CONTACTS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, LIST_ID STRING, MESSAGE CLOB, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_EVENTS ( EVT_ID STRING PRIMARY KEY, MAT_ID STRING, CONTEXT VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, CONTEXT VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_EVENTS_05 ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, BUNDLE_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_HISTORY ( HISTORY_ID STRING PRIMARY KEY, ESC_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_HISTORY ( HIST_ID STRING PRIMARY KEY, ESC_ID STRING, SUBJECT_REF STRING, ACTION TAKEN STRING, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_HISTORY ( HIST_ID STRING PRIMARY KEY, RULE_ID STRING, CONTEXT VARIANT, RAISED_AT TIMESTAMP_LTZ, HANDLED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TRIGGER_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, MAT_ID STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_MATRIX ( MAT_ID STRING PRIMARY KEY, CONDITION JSON, ESCALATE_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ESC_ID STRING, NOTIF_PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_PLAYBOOK_INDEX ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INCIDENT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, ALERT_TYPE STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES_05 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES_07 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICIES_11 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_BINDINGS_6092 ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_LOGS_6093 ( LOG_ID STRING PRIMARY KEY, BIND_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, TRIGGER_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_POLICY_TEMPLATES_6091 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RULES ( ESC_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ESCALATION_CHAIN VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, TRIGGER VARIANT, ACTION VARIANT, LEVEL STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RUNBOOK_INDEX ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, PATH STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, TRIGGER_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RUNS_07 ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, CONTEXT VARIANT, RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_RUN_LOGS ( LOG_ID STRING PRIMARY KEY, ESC_ID STRING, STEP JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCALATION_WORKFLOW ( ESC_ID STRING PRIMARY KEY, ALERT_ID STRING, STEPS VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCROW_RECORDS_02 ( ESCROW_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ESCROW_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCROW_RELEASE_JOBS ( JOB_ID STRING PRIMARY KEY, ESCROW_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESCROW_RELEASE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESIGN_AUDIT_INDEX_08 ( INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, AUDIT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESIGN_PROVIDER_CONFIGS_01 ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ESIGN_PROVIDER_CREDENTIALS_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_META VARIANT, REPLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESIGN_SDK_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, SDK_NAME STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ESIGN_TEMPLATES_06 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, VERSION INT, CONTENT CLOB, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ETAG_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ETAG_ID STRING, TENANT_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ETAG_INDEX ( ETAG_ID STRING PRIMARY KEY, OBJECT_REF STRING, ETAG STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENTS_BACKFILL_QUEUE ( BACKFILL_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_AUDIT_01 ( AUDIT_ID STRING PRIMARY KEY, EVENT_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_AUDIT_02 ( AUDIT_ID STRING PRIMARY KEY, EVENT_REF STRING, SOURCE_SYSTEM STRING, PAYLOAD VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_BACKOFFS_08 ( BACKOFF_ID STRING PRIMARY KEY, EVENT_REF STRING, NEXT_TRY TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.EVENT_BROADCASTS ( BROADCAST_ID STRING PRIMARY KEY, EVENT_NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_DELIVERIES ( DELIVERY_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, STATUS STRING, ATTEMPT_COUNT INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVENT_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, DELIVERY_ID STRING, ATTEMPT INT, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_DISPATCH_QUEUE ( Q_ID STRING PRIMARY KEY, BROADCAST_ID STRING, SUB_ID STRING, TARGET STRING, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_ENRICHMENT ( ENRICH_ID STRING PRIMARY KEY, EVENT_ID STRING, ENRICHED_PAYLOAD VARIANT, ENRICHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_ENRICHMENT_QUEUE ( Q_ID STRING PRIMARY KEY, EVENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_ENRICHMENT_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, ENRICHED_PAYLOAD VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_INDEX_02 ( IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_METRICS ( METRIC_ID STRING PRIMARY KEY, EVENT_TYPE STRING, COUNT NUMBER, METADATA VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_PROCESSORS ( PROCESSOR_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, LAST_RUN AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVENT_PROJECTION_INDEX ( PROJ_ID STRING PRIMARY KEY, STREAM_ID STRING, PROJECTION_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, Q_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_JOBS ( JOB_ID STRING PRIMARY KEY, STREAM_ID STRING, OFFSET BIGINT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_LOGS ( LOG_ID STRING PRIMARY KEY, REPLAY_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_QUEUE ( Q_ID STRING PRIMARY KEY, EVENT_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_QUEUE ( REPLAY_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_RETRIES ( RETRY_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPT INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SCHEMA_EXAMPLES ( EX_ID STRING PRIMARY KEY, SCHEMA_ID STRING, EXAMPLE_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, SCHEMA_DEF VARIANT, VERSION INT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SLA_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, TRACK_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SLA_TRACKER ( TRACK_ID STRING PRIMARY KEY, EVENT_REF STRING, SLA_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SOURCING_STREAMS ( STREAM_ID STRING PRIMARY KEY, ENTITY_REF STRING, STREAM_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SUBSCRIBERS ( SUB_ID STRING PRIMARY KEY, EVENT_NAME STRING, TARGET STRING, DELIVERY_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SUBSCRIPTIONS ( SUBS_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, EVENT_TYPE STRING, CALLBACK_URI STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ENTITY_REF STRING, EVENT_TYPE STRING, ENDPOINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_TELEMETRY_07 ( TELE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVENT_NAME STRING, METADATA VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_TRANSFORM_QUEUE ( QUEUE_ID STRING PRIMARY KEY, EVENT_ID STRING, TRANSFORM_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_TRANSFORM_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVENT_TRANSFORM_RUNS ( RUN_ID STRING PRIMARY KEY, TRANSFORM_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_APPROVALS_09 ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_BLACKLIST ( BL_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, BUNDLE_ID STRING, POLICY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_CONTROLS ( CTRL_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBJECT STRING, ACTION STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, EVIDENCE_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_LOGS_6211 ( LOG_ID STRING PRIMARY KEY, EVID_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_REQUESTS_09 ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, BUNDLE_ID STRING, PURPOSE STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, ACCESS_LOCATION STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_STATS ( STAT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACCESS_COUNT INT DEFAULT 0, LAST_ACCESSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ACCESS_WHITELIST ( WL_ID STRING PRIMARY KEY, SUBJECT_REF STRING, BUNDLE_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ARCHIVAL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, ARCHIVE_LOCATION STRING, -- S3 path BUNDLE_HASH STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, ARCHIVE_LOCATION STRING, BUNDLE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE( BUNDLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, ARCHIVE_LOCATION STRING, BUNDLE_HASH STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLES_01 ( BUNDLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ARCHIVE_REF STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE_PARTS ( PART_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PART_TYPE STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHAIN_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LINK_ORDER INT, LINK_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEP_NO INT, ITEM_REF STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUMS ( CHECKSUM_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FILENAME STRING, CHECKSUM STRING, ALGO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUMS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUMS_13 ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_FAILURES ( FAIL_ID STRING PRIMARY KEY, CK_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( CK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ ) ;

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKSUM_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHECKS_05 ( EVC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECK_NAME STRING, PASS BOOLEAN, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CHUNK_INDEX ( IDX_ID STRING PRIMARY KEY, CHUNK_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_COLLECTION_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_COMPONENTS_01 ( COMPONENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TYPE STRING, REF STRING, HASH STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_CROSSREF_INDEX ( XREF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RELATED_BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DIGEST_INDEX ( DIGEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DIGEST STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DISCOVERY_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, KEYWORDS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DISCOVERY_QUERIES ( Q_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DISCOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, HITS ARRAY, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DISCREPANCY_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DISCREPANCY_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_DISCREPANCY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ESCROW_REGISTRY ( ESCROW_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ESCROW_PARTY JSON, AGREEMENT VARIANT, DEPOSITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORTS_06 ( EVIDENCE_EXPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FORMAT STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_ARTIFACTS ( ART_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, PRODUCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EVID_ID STRING, TARGET_LOC STRING, EXPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPORT_ID STRING, OPERATOR STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_HISTORY ( EXPORT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESTINATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, EVIDENCE_ID STRING, TARGET_URI STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_LOCKS ( LOCK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FILES VARIANT, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, S3_PATH STRING, ROW_COUNT NUMBER, EXPORT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST (MANIFEST_ID STRING PRIMARY KEY, S3_PATH STRING, ROW_COUNT NUMBER, EXPORT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST( MANIFEST_ID STRING PRIMARY KEY, S3_PATH STRING, ROW_COUNT NUMBER, EXPORT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESTINATION VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST_HISTORY ( H_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FORMAT STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ARCHIVE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_RETENTION_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, POLICY_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_TASKS ( TASK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_FORMAT_REGISTRY ( FORMAT_ID STRING PRIMARY KEY, NAME STRING, SCHEMA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_FORMAT_VERSIONING ( VER_ID STRING PRIMARY KEY, FORMAT_ID STRING, VERSION INT, SCHEMA VARIANT, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_HASHES ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH_ALGO STRING, HASH_VALUE STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_HASHES ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH_VALUE STRING, HASHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, FIRST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_HASH_INDEX ( H_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_HASH_REGISTRY ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH_ALGO STRING, HASH_VALUE STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, INTEGRATION_NAME STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY ( INTEGRITY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ISSUE JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECK_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, EVIDENCE_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_CHECKS_01 ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_INTEGRITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, CHECK_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TENANT_ID STRING, ACTIVE BOOLEAN DEFAULT TRUE, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_LONGTERM_RETENTION ( RET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_TIER STRING, TARGET_TIER STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MOVED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_NODES ( NODE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NODE_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_PURGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PURGED_BY STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECALL_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECALL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECONCILE ( RECON_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_ROWS NUMBER, ACTUAL_ROWS NUMBER, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECONCILIATION ( REC_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECONCILIATION (RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RECONCILIATION( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_ROWS NUMBER, ACTUAL_ROWS NUMBER, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, EVID_ID STRING, RULES VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REDACTED_LOC STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RELEASE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ESCROW_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RELEASE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RELEASE_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_REPLICATION_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_REGION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_APPLICATIONS ( APP_ID STRING PRIMARY KEY, POLICY_ID STRING, BUNDLE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_DAYS INT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, FLAG STRING );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_INDEX ( RET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_POLICY_ID STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETENTION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, NEXT_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETRIEVAL_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_SIGNATURE_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNATURE_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_SIGNATURE_INDEX ( SIGIDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIG_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_SNAPSHOT_INDEX ( SNAP_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_SNAPSHOT_RECONCILE ( RECON_ID STRING PRIMARY KEY, SNAP_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_STORAGE_TIERS ( TIER_ID STRING PRIMARY KEY, NAME STRING, POLICY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_STORE_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_TAMPER_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_TRANSFORMS ( TRANSFORM_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEP_NAME STRING, STATUS STRING, OUTPUT VARIANT, RAN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_TRANSFORM_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TRANSFORMS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_TRANSFORM_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_TYPE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, TYPE_ID STRING, PROVIDER STRING, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_VERIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_VERIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, VERIFIED BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESULT JSON, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ZIP_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_ZIP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXCHANGE_RATE_FEEDS ( FEED_ID STRING PRIMARY KEY, CURRENCY_PAIR STRING, RATE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXECUTION_TRACES_6408 ( TRACE_ID STRING PRIMARY KEY, CONTEXT_REF STRING, TRACE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXECUTIVE_SUMMARY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, REPORT_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXEMPTIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXEMPT_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXEMPTIONS_REGISTRY ( EXEMPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENTATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENTATION_CONFIG ( EXP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENTATION_RESULTS ( RES_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENTATION_TELEMETRY ( TELE_ID STRING PRIMARY KEY, TEST_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENTS_11 ( ASSIGN_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGNMENT_INDEX ( ASSIGN_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_ASSIGN_HISTORY ( H_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_CONFIG_REGISTRY ( EXP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_METRICS ( METRIC_ID STRING PRIMARY KEY, EXP_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_METRICS ( MET_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_REGISTRY ( EXP_ID STRING PRIMARY KEY, NAME STRING, HYPOTHESIS STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_RESULTS ( RESULT_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, METRICS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_RESULTS_11 ( RESULT_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, METRICS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_TRAFFIC_LOGS ( LOG_ID STRING PRIMARY KEY, EXP_ID STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPERIMENT_VARIANT_STATS ( STAT_ID STRING PRIMARY KEY, EXP_ID STRING, VARIANT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPIRING_CREDENTIAL_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CRED_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EXPLAINABILITY_LOGS_05 ( LOG_ID STRING PRIMARY KEY, DECISION_ID STRING, EXPLANATION VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_ACCESS_CONTROLS ( AC_ID STRING PRIMARY KEY, EXPORT_ID STRING, GRANTED_TO STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPORT_ID STRING, REQUESTOR STRING, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT ( EXPORT_AUDIT_ID STRING PRIMARY KEY, ENTITY_REF STRING, EXPORT_TYPE STRING, TARGET STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT ( EXPORT_AUDIT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, OUTCOME STRING, DETAILS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDITS_07 ( AUDIT_ID STRING PRIMARY KEY, EXPORT_ID STRING, USER_REF STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, EXPORT_ID STRING, FILE_PATH STRING, SIZE_BYTES NUMBER, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, EXPORT_REF STRING, BUNDLE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT_SIGNATURES ( SIG_ID STRING PRIMARY KEY, EXPORT_REF STRING, SIGNER STRING, SIG_META VARIANT, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, EXPORT_REF STRING, SUBJECT_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, MAN_ID STRING, CERT_LOCATION STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, EXPORT_REF STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_FAILURES_03 ( FAILURE_ID STRING PRIMARY KEY, QUEUE_ID STRING, ERROR_CODE STRING, ERROR_DETAIL CLOB, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_HEALTHCHECKS ( CHECK_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, JOB_TYPE STRING, SCOPE VARIANT, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'CREATED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, FILE_COUNT INT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_URI STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EXPORT_TYPE STRING, ALLOWED BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, EXPORT_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, ROLE_NAME STRING, ACTIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOKEN_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_PERMISSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PERMISSIONS VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_POLICIES_07 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_QUEUE ( QUEUE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_QUEUE_03 ( QUEUE_ID STRING PRIMARY KEY, JOB_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MONTHLY_LIMIT NUMBER, USED NUMBER DEFAULT 0, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE ( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RECONCILED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE_LOG ( LOG_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_COUNT NUMBER, ACTUAL_COUNT NUMBER, STATUS STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE_QUEUE ( Q_ID STRING PRIMARY KEY, PACKET_ID STRING, EXPECTED_LOC STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE_QUEUE ( Q_ID STRING PRIMARY KEY, PACKET_ID STRING, EXPECTED_LOC STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, MATCHED BOOLEAN, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, MATCHED BOOLEAN, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILIATIONS_04 ( RECON_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RECONCILIATION_STATUS ( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, EXPECTED_COUNT INT, UPLOADED_COUNT INT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_REQUESTS ( EXPORT_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RESULTS ( RESULT_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RESULTS ( RESULT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, ROW_COUNT NUMBER, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RETRIES ( RETRY_ID STRING PRIMARY KEY, EXPORT_ID STRING, ATTEMPT_NUMBER INT, STATUS STRING, LAST_ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RUN_JOBS ( JOB_ID STRING PRIMARY KEY, TRANSFORM_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_RUN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_STATUS_HISTORY ( STATUS_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_STATUS_LOG ( LOG_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_TRANSFORMS ( TRANSFORM_ID STRING PRIMARY KEY, FORMAT_ID STRING, SCRIPT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_VERIFICATION_CHECKSUMS ( CK_ID STRING PRIMARY KEY, EXPORT_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXPORT_VERIFICATION_LOG ( LOG_ID STRING PRIMARY KEY, RESULT_ID STRING, VERIFIED_BY STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EXPOSURE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEST_ID STRING, VARIANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXP_METRIC_ROLLUP ( ROLLUP_ID STRING PRIMARY KEY, EXP_ID STRING, METRIC_NAME STRING, AGG_JSON VARIANT, ROLLUP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_ACCESS_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_ACCESS_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AGENT_HEARTBEAT ( HB_ID STRING PRIMARY KEY, AGENT_REF STRING, STATUS STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AGENT_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AGENT_TASKS ( TASK_ID STRING PRIMARY KEY, AGENT_REF STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_ATTACHMENT_INDEX ( ATTACH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, MIME_TYPE STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDITOR_REQUESTS ( REQ_ID STRING PRIMARY KEY, AUDITOR STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDITOR_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDITS_04 ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, AUDITOR STRING, REPORT_REF STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_ENGAGEMENTS ( ENG_ID STRING PRIMARY KEY, TENANT_ID STRING, AUDITOR STRING, SCOPE VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_FINDINGS ( FIND_ID STRING PRIMARY KEY, ENG_ID STRING, SEVERITY STRING, DETAILS CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_LINKS_09 ( LINK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EXTERNAL_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_LOGS_6171 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REMEDIATIONS ( REM_ID STRING PRIMARY KEY, FIND_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, AUDITOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, AUDITOR STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, AUDITOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_REQUESTS_6170 ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_AUDIT_TRIGGERS ( TRIGGER_ID STRING PRIMARY KEY, SCHEDULE JSON, TARGETS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_CALLOUT_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, ENDPOINT STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_CALLOUT_LATENCY ( MET_ID STRING PRIMARY KEY, ENDPOINT STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_CHAIN_INDEX_6265 ( CHAIN_ID STRING PRIMARY KEY, EXTERNAL_REF STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_CHAIN_LOGS_6266 ( LOG_ID STRING PRIMARY KEY, CHAIN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_COMPLIANCE_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_COMPLIANCE_REPORTS ( REP_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_DEPENDENCY_INDEX ( DEP_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_CALL_LOGS ( LOG_ID STRING PRIMARY KEY, FUNCTION_NAME STRING, REQUEST_PAYLOAD VARIANT, RESPONSE_PAYLOAD VARIANT, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAT_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, FUNCTION_NAME STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_ERROR_LOG ( ERR_ID STRING PRIMARY KEY, EF_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_EVENTS ( EFE_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_HEALTH ( HEALTH_ID STRING PRIMARY KEY, EF_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_LOGS ( LOG_ID STRING PRIMARY KEY, EFE_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_REGISTRY ( EF_ID STRING PRIMARY KEY, NAME STRING, URL STRING, AUTH JSON, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_REGISTRY ( EF_ID STRING PRIMARY KEY, NAME STRING, URL STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_FUNCTION_USAGE ( USAGE_ID STRING PRIMARY KEY, EF_ID STRING, CALLER STRING, PAYLOAD VARIANT, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_INTEGRATION_LOG ( LOG_ID STRING PRIMARY KEY, INTTYPE STRING, TARGET STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_INTEGRATION_METRICS ( MET_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, LATENCY_MS NUMBER, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_INTEGRATION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_NOTARY_REGISTRY ( NOTARY_ID STRING PRIMARY KEY, NAME STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_PROVIDER_HEALTH ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_PROVIDER_INCIDENT_LOGS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.EXTERNAL_PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.E_DISCOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, CASE_ID STRING, QUERY JSON, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.E_DISCOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAILED_LOGIN_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ATTEMPTS INT, LAST_ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAILED_PAYMENTS ( FP_ID STRING PRIMARY KEY, PAYMENT_REF STRING, FAILURE_CODE STRING, FAILURE_DETAIL VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_BUILD_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_BUILD_JOBS_12 ( JOB_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_BUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_BUILD_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, ARTIFACT_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_JOBS ( JOB_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, BUILT_SHARDS INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INDEX_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_BUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_ID STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_LOAD_HISTORY ( LOAD_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_METADATA ( INDEX_ID STRING PRIMARY KEY, MANIFEST_ID STRING, INDEX_TYPE STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_REGISTRY ( INDEX_ID STRING PRIMARY KEY, NAME STRING, SHARD_COUNT INT, LATEST_SNAPSHOT STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_REGISTRY ( INDEX_ID STRING PRIMARY KEY, SHARD_JSON VARIANT, LOCATION STRING, STATUS STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_REGISTRY ( INDEX_ID STRING PRIMARY KEY, SNAP_ID STRING, SHARD STRING, INDEX_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_SHARDS ( SHARD_ID STRING PRIMARY KEY, INDEX_ID STRING, LOCATION STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_SHARD_METADATA ( SHARD_ID STRING PRIMARY KEY, SNAP_ID STRING, SHARD_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_SHARD_STATS ( STAT_ID STRING PRIMARY KEY, SHARD_ID STRING, DOC_COUNT INT, MEMORY_BYTES NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_INDEX_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, INDEX_ID STRING, S3_URL STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, RESULTS_COUNT INT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_LOGS ( LOG_ID STRING PRIMARY KEY, QUERY_PAYLOAD VARIANT, RESPONSE VARIANT, LATENCY_MS NUMBER, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_METRICS ( METRIC_ID STRING PRIMARY KEY, INDEX_REF STRING, QPS NUMBER, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_METRICS ( METRIC_ID STRING PRIMARY KEY, QUERY_REF STRING, LATENCY_MS NUMBER, RESULT_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_METRICS ( METRIC_ID STRING PRIMARY KEY, SNAP_ID STRING, QUERY_MS NUMBER, HITS INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_QUERY_METRICS ( MET_ID STRING PRIMARY KEY, INDEX_ID STRING, QPS NUMBER, LATENCY_P95 NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_REBUILD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_REBUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SHARD_INDEX ( SHARD_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_META VARIANT, LOADED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SHARD_MANIFEST ( SHARD_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SNAPSHOT_LOAD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, INDEX_NAME STRING, S3_PREFIX STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHECKSUM STRING );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SNAPSHOT_MANIFEST_11 ( MANIFEST_ID STRING PRIMARY KEY, S3_PREFIX STRING, SHARD_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SNAPSHOT_MANIFEST_14 ( SNAPSHOT_ID STRING PRIMARY KEY, INDEX_NAME STRING, S3_PREFIX STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAISS_SNAPSHOT_REGISTRY ( REG_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, INDEX_REF STRING, LOCATION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FALLBACK_PROVIDER_RULES ( RULE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FASTPATH_CACHE ( CACHE_KEY STRING PRIMARY KEY, PAYLOAD VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FATIGUE_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FAULT_INJECTION_LOGS ( LOG_ID STRING PRIMARY KEY, TARGET_REF STRING, PAYLOAD VARIANT, INJECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ACTIVATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ACTIVATION_EVENTS ( EVT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ACCOUNT_ID STRING, ACTIVATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ACTIVATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ADOPTION_METRICS ( METRIC_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, ADOPTION_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ADOPTION_METRICS ( METRIC_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ADOPTION_METRICS ( MET_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ADOPTION_METRICS ( MET_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ALERT_ACTION_LOGS ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_AUDIT_06 ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, CHANGED_BY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, ROLL_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CHECK_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEACTIVATION_EVENTS ( EVT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ACCOUNT_ID STRING, DEACTIVATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEGRADATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEGRADATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_INDEX ( DEP_ID STRING PRIMARY KEY, FEATURE_NAME STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_NOTICES ( NOTICE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, NOTICE_CLOB CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, DEP_ID STRING, RECIPIENT STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_QUEUE ( Q_ID STRING PRIMARY KEY, FEATURE_NAME STRING, REASON CLOB, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_QUEUE ( Q_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'SCHEDULED', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ENTITLEMENT_HISTORY ( HIST_ID STRING PRIMARY KEY, ENTITLEMENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, RUN_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FEEDBACK_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, FB_ID STRING, ANALYSIS_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, FLAG_KEY STRING, ENABLED BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT TRUE, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS ( FLAG_NAME STRING PRIMARY KEY, ENABLED BOOLEAN DEFAULT FALSE, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS_06 ( FLAG_ID STRING PRIMARY KEY, NAME STRING, DEFAULT BOOLEAN, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS_08 ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAGS_HISTORY ( HIST_ID STRING PRIMARY KEY, FLAG_ID STRING, OLD_VALUE STRING, NEW_VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, FLAG_ID STRING, TENANT_ID STRING, ENABLED BOOLEAN DEFAULT FALSE, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FEATURE_ID STRING, ACTION STRING, PERFORMED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, OLD_VAL VARIANT, NEW_VAL VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_KEY STRING, CHANGED_BY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, ACTION STRING, PERFORMED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, CHANGED_BY STRING, FROM_VALUE VARIANT, TO_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, CHANGED_BY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, SUBJECT_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_METRICS ( MET_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SNAPSHOT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, CHANGED_BY STRING, CHANGE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, FLAG_KEY STRING, ACTION STRING, USER_REF STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, FLAG_KEY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_CHANGES ( CHANGE_ID STRING PRIMARY KEY, FLAG_KEY STRING, ACTOR STRING, CHANGE_JSON VARIANT, CHANGE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SUBJECT_REF STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, FLAG_NAME STRING, SUBJECT_REF STRING, CONTEXT VARIANT, RESULT BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, ROLL_ID STRING, SUBJECT_REF STRING, RESULT BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATION_LOGS ( LOG_ID STRING PRIMARY KEY, FEATURE_ID STRING, SUBJECT_REF STRING, EVALUATION_RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATION_LOGS ( LOG_ID STRING PRIMARY KEY, FLAG_NAME STRING, SUBJECT_REF STRING, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATION_LOGS ( LOG_ID STRING PRIMARY KEY, FLAG_NAME STRING, SUBJECT_REF STRING, EVALUATION_RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVALUATION_TASKS ( TASK_ID STRING PRIMARY KEY, FLAG_NAME STRING, SCHEDULE JSON, STATUS STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EVAL_CACHE ( CACHE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FLAG_KEY STRING, EVAL_RESULT BOOLEAN, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENTS ( EXP_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXPERIMENT_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_CONFIGS ( EXP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_MAPPING ( MAP_ID STRING PRIMARY KEY, FLAG_NAME STRING, EXPERIMENT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, EXP_ID STRING, TENANT_SCOPE VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_RUNS ( RUN_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_EXPERIMENT_RUNS ( RUN_ID STRING PRIMARY KEY, FLAG_NAME STRING, TENANT_IDS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( FFH_ID STRING PRIMARY KEY, FLAG_NAME STRING, OLD_VALUE BOOLEAN, NEW_VALUE BOOLEAN, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( HF_ID STRING PRIMARY KEY, FLAG_KEY STRING, OLD_VALUE STRING, NEW_VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( HIST_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CHANGE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( HIST_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( HIST_ID STRING PRIMARY KEY, FLAG_ID STRING, OLD_VAL VARIANT, NEW_VAL VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_HISTORY ( HIST_ID STRING PRIMARY KEY, FLAG_ID STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_IMPACT_REPORTS ( REPORT_ID STRING PRIMARY KEY, ROLL_ID STRING, IMPACT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_INDEX_6376 ( FLAG_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_LOGS_6377 ( LOG_ID STRING PRIMARY KEY, FLAG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_METRICS ( METRIC_ID STRING PRIMARY KEY, FLAG_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_METRICS ( METRIC_ID STRING PRIMARY KEY, ROLLOUT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_REGISTRY ( FLAG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_REGISTRY ( FLAG_ID STRING PRIMARY KEY, NAME STRING, DEFAULT BOOLEAN, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_REQUESTS ( REQ_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_RESULTS ( RES_ID STRING PRIMARY KEY, ROLL_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLBACKS ( ROLL_ID STRING PRIMARY KEY, FLAG_NAME STRING, TRIGGERED_BY STRING, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, ROLLOUT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLBACK_REQUESTS ( REQ_ID STRING PRIMARY KEY, FEATURE_NAME STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, TENANT_SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ROLLOUT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, FLAG_ID STRING, TARGET_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, FLAG_ID STRING, TENANT_SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, FLAG_KEY STRING, TARGETS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLL_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TARGETS VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS ( ROLL_ID STRING PRIMARY KEY, FLAG_NAME STRING, TARGET_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUTS_11 ( ROLLOUT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, SEGMENT VARIANT, STATUS STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_HISTORY ( HIST_ID STRING PRIMARY KEY, ROLL_ID STRING, EVENT_JSON VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_JOBS ( JOB_ID STRING PRIMARY KEY, FLAG_NAME STRING, TARGET_SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_JOBS ( JOB_ID STRING PRIMARY KEY, FLAG_NAME STRING, TENANT_FILTER JSON, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_METRICS ( METRIC_ID STRING PRIMARY KEY, FLAG_NAME STRING, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, APPLIED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_ROLLOUT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_SAFETY_CHECKS ( CHECK_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CHECK_RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_SEGMENTS ( SEG_ID STRING PRIMARY KEY, FLAG_KEY STRING, SEGMENT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_SNAPSHOT ( SNAP_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SNAPSHOT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_STATES ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, TARGET JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_FLAG_TOGGLES ( TOGGLE_ID STRING PRIMARY KEY, FEATURE_ID STRING, TENANT_ID STRING, ENABLED BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_GATE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, CHANGED_BY STRING, FROM_VALUE VARIANT, TO_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_GATE_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SUBJECT_REF STRING, CONTEXT VARIANT, RESULT BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_HEALTH_DASHBOARD ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_HEALTH_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, FEATURE_NAME STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_HEALTH_RUNS ( RUN_ID STRING PRIMARY KEY, DASH_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_IMPACT_ANALYSIS ( ANAL_ID STRING PRIMARY KEY, FEATURE_KEY STRING, IMPACT_JSON VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_METRICS_ADHOC ( METRIC_ID STRING PRIMARY KEY, FEATURE_NAME STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_METRIC_EXPOSURES ( EXPOSURE_ID STRING PRIMARY KEY, FEATURE_ID STRING, METRIC_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_MIGRATION_PLANS ( PLAN_ID STRING PRIMARY KEY, FEATURE_NAME STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_MIGRATION_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_OWNER_CONTACTS_12 ( CONTACT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, OWNER STRING, CONTACT_INFO VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_OWNER_ESCALATIONS_12 ( ESC_ID STRING PRIMARY KEY, CONTACT_ID STRING, ISSUE_REF STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_PRICING_VERSIONS ( VERSION_ID STRING PRIMARY KEY, FEATURE_KEY STRING, PRICING_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_QUOTA_ALERT_HISTORY ( HIST_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ALERT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_QUOTA_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, QUOTA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RELEASE_NOTES ( NOTE_ID STRING PRIMARY KEY, FEATURE_ID STRING, CONTENT CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RELEASE_NOTES ( NOTE_ID STRING PRIMARY KEY, FEATURE_KEY STRING, NOTES CLOB, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_REQUEST_PRIORITIZATION ( PR_ID STRING PRIMARY KEY, REQ_ID STRING, SCORE NUMBER, RANK INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETENTION_METRICS ( METRIC_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, RETENTION_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_JOBS ( JOB_ID STRING PRIMARY KEY, FEATURE_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_REGISTRY ( RETIRE_ID STRING PRIMARY KEY, FEATURE_ID STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_REGISTRY ( RETIRE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, RETIRE_AT TIMESTAMP_LTZ, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RETIRE_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_RETIREMENT_RUNS ( RUN_ID STRING PRIMARY KEY, RETIRE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUTS ( ROLL_ID STRING PRIMARY KEY, FLAG_KEY STRING, STRATEGY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUTS_07 ( ROLLOUT_ID STRING PRIMARY KEY, FEATURE_ID STRING, STRATEGY VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ACTION STRING, BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_EVENTS ( EVT_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, ACTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_FLAGS ( FLAG_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ROLL_OUT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_HISTORY ( ROLL_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ROLL_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_JOBS_6378 ( JOB_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ROLLOUT_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_LOGS_6379 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_STATES ( STATE_ID STRING PRIMARY KEY, FEATURE_ID STRING, TENANT_FILTER JSON, STATE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_ROLLOUT_STATES ( STATE_ID STRING PRIMARY KEY, FEATURE_KEY STRING, STATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_SIGNAL_INDEX ( SIGNAL_ID STRING PRIMARY KEY, FEATURE_NAME STRING, SIGNAL_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_SLA_MAP ( MAP_ID STRING PRIMARY KEY, FEATURE_KEY STRING, SLA_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_STORE_METRICS ( METRIC_ID STRING PRIMARY KEY, SET_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, FEATURE_NAME STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, AGG_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_EVENTS ( EVT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_INDEX ( TELE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_INDEX_6087 ( TELE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_LOGS_6088 ( LOG_ID STRING PRIMARY KEY, TELE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_REGISTRY ( REG_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS_SCHEMA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_SAMPLES ( SAMPLE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, METRICS VARIANT, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_STREAM ( TELE_ID STRING PRIMARY KEY, FEATURE_KEY STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TELEMETRY_TRACES ( TRACE_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TRACE_JSON VARIANT, TRACE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLES ( TOGGLE_ID STRING PRIMARY KEY, KEY STRING, VALUE BOOLEAN, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLES ( TOGGLE_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, ENABLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOGGLE_ID STRING, OLD_VAL VARIANT, NEW_VAL VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_AUDIT_11 ( AUDIT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, ACCOUNT_ID STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_AUDIT_6065 ( AUDIT_ID STRING PRIMARY KEY, TOGGLE_KEY STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_LOGS_6066 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_SET VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_PREVIEW_JOBS ( JOB_ID STRING PRIMARY KEY, FLAG_ID STRING, TARGETS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_PREVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, FEATURE_NAME STRING, ENABLE_AT TIMESTAMP_LTZ, DISABLE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_TOGGLE_SCHEDULE_HISTORY ( HIST_ID STRING PRIMARY KEY, SCHED_ID STRING, ACTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_ALERTS_12 ( ALERT_ID STRING PRIMARY KEY, FEATURE_KEY STRING, ACCOUNT_ID STRING, METRIC VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_ALERT_HISTORY ( HIST_ID STRING PRIMARY KEY, ALERT_ID STRING, TENANT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, ANOMALY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_BREAKDOWN ( BREAK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, USAGE_NUMBER NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_BREAKDOWN ( BREAK_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECAST ( FC_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECAST ( FC_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECAST ( FORECAST_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, PREDICTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_KEY STRING, FORECAST_WINDOW VARIANT, FORECAST_METRICS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_FORECAST_12 ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_CODE STRING, PREDICTED_USAGE NUMBER, PREDICTED_DATE DATE );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_INSIGHTS ( INSIGHT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, INSIGHT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_LEDGER ( LEDGER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_LEDGER_02 ( LEDGER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEATURE_USAGE_THRESHOLDS ( THRESH_ID STRING PRIMARY KEY, FEATURE_NAME STRING, TENANT_ID STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ACTION_ITEMS ( ACTION_ID STRING PRIMARY KEY, FB_ID STRING, OWNER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, FB_ID STRING, OWNER STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, FEEDBACK_ID STRING, OWNER STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, FB_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, AVG_RATING NUMBER, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TARGET_REF STRING, AVG_RATING FLOAT, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYSIS_JOBS ( JOB_ID STRING PRIMARY KEY, FB_ID STRING, ANALYSIS_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYSIS_JOBS ( JOB_ID STRING PRIMARY KEY, FB_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INSIGHTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYTICS_JOBS ( JOB_ID STRING PRIMARY KEY, SURVEY_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_ANALYTICS_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_LOGS_6137 ( LOG_ID STRING PRIMARY KEY, FB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_METRICS_02 ( METRIC_ID STRING PRIMARY KEY, FB_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_RECORDS ( FB_ID STRING PRIMARY KEY, SOURCE STRING, SUBJECT_REF STRING, FEEDBACK VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_RESPONSES ( RESP_ID STRING PRIMARY KEY, SURVEY_ID STRING, SUBJECT_REF STRING, RESP_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_SENTIMENT_INDEX ( SENT_ID STRING PRIMARY KEY, FB_ID STRING, SENT_SCORE NUMBER, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_SENTIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, SENTIMENT_SCORE NUMBER, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, NAME STRING, QUESTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEEDBACK_TELEMETRY ( TEL_ID STRING PRIMARY KEY, FEEDBACK_ID STRING, METADATA VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEE_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, BILLING_LINE_ITEM_ID STRING, ADJUSTED_BY STRING, ADJUSTMENT_AMOUNT NUMBER, CURRENCY STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FEE_SCHEDULE_HISTORY ( SCHEDULE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEE_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FILE_TYPE_WHITELIST ( FT_ID STRING PRIMARY KEY, MIME_TYPE STRING, DESCRIPTION STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FILE_UPLOAD_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, UPLOAD_REF STRING, REASON STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_HISTORY ( FH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FINALIZED_BY STRING, FINALIZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_LOGS ( LOG_ID STRING PRIMARY KEY, FQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_LOGS_02 ( LOG_ID STRING PRIMARY KEY, FQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_QUEUE ( FQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZATION_QUEUE_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, QUEUE_REF STRING, ARCHIVE_JSON VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINALIZED_BUNDLES ( BUNDLE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FINALIZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STORAGE_LOCATION STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FINAL_AUDIT_MARKER ( MARKER_ID STRING PRIMARY KEY, NOTE STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_AUDIT_SIGNOFFS ( SIGNOFF_ID STRING PRIMARY KEY, AUDIT_REF STRING, SIGNED_BY STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_END_OF_TRANCHE_MARKERS ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_IDS ( NAME STRING PRIMARY KEY, LAST_ID STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_INVOICES_06 ( INVOICE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TOTAL_AMOUNT NUMBER, LINE_ITEMS VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_OPERATIONAL_MARKER ( MARKER_ID STRING PRIMARY KEY, NOTE STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_OPERATIONAL_MARKER_6182 ( MARKER_ID STRING PRIMARY KEY, NOTE STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_TRANCHE_MARKER_03 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_TRANCHE_MARKER_05 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_TRANCHE_MARKER_06 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_TRANCHE_MARKER_07 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINAL_TRANCHE_MARKER_08 ( MARKER_ID STRING PRIMARY KEY, TRANCHE_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCE_RECONCILE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, SUMMARY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, INVOICE_REF STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, CONTEXT STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ENTITY_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, EVENT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, REFERENCE_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_AUDIT_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONDITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CLOSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CLOSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CLOSE_RUNS ( RUN_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROLS_CATALOG ( CONTROL_ID STRING PRIMARY KEY, NAME STRING, CONTROL_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTROL_ID STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_AUDIT_TRAILS ( TRAIL_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_BINDINGS ( BIND_ID STRING PRIMARY KEY, CONTROL_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_CONTROL_RESULTS ( RES_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_DISCLAIMER_RECORDS ( REC_ID STRING PRIMARY KEY, TENANT_ID STRING, DISCLAIMER_TEXT CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_METRIC_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_PROFILE_LOGS_6121 ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_PROJECTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_PROJECTION_RUNS ( RUN_ID STRING PRIMARY KEY, TENANT_ID STRING, PROJECTION_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, DISCREPANCIES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILE_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING DEFAULT 'PENDING', RESULT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATIONS ( REC_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_INDEX ( REC_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_ITEMS ( ITEM_ID STRING PRIMARY KEY, REC_ID STRING, LINE_REF STRING, EXPECTED_AMOUNT NUMBER, ACTUAL_AMOUNT NUMBER, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_LOGS ( LOG_ID STRING PRIMARY KEY, RECON_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DISCREPANCIES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_REPORTING_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_REPORTS ( REPORT_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_REPORTS_INDEX ( REPORT_ID STRING PRIMARY KEY, NAME STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINANCIAL_SNAPSHOT_REGISTRY ( SNAP_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINGERPRINT_COLLISION_ALERTS ( ALERT_ID STRING PRIMARY KEY, F_ID STRING, COLLIDING_IDS ARRAY, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINGERPRINT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINGERPRINT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINGERPRINT_WATCHLIST ( WATCH_ID STRING PRIMARY KEY, FINGERPRINT STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINOPS_COST_CENTER_MAPPING ( MAP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, COST_CENTER STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINOPS_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FINOPS_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FIREWALL_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE JSON, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FLAGGED_SIGNATURES_14 ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, REASON STRING, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, CHANGED_BY STRING, NEW_VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_KEY STRING, PREV_VALUE BOOLEAN, NEW_VALUE BOOLEAN, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_NAME STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_EVAL_LOGS ( LOG_ID STRING PRIMARY KEY, FLAG_NAME STRING, EVALUATED_FOR STRING, RESULT BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FLAG_QA_JOBS ( JOB_ID STRING PRIMARY KEY, FLAG_KEY STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_QA_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FLAG_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, FLAG_ID STRING, RESOLVED_BY STRING, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.FLAG_ROLLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, ROLLOUT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_ACTIVITY_LOG ( LOG_ID STRING PRIMARY KEY, FOLDER_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, FOLDER_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_EMBEDDINGS ( EMB_ID STRING PRIMARY KEY, FOLDER_ID STRING, BUNDLE_ID STRING, EMBEDDING VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_INDEX ( FIDX_ID STRING PRIMARY KEY, FOLDER_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_INDEXING_JOBS ( JOB_ID STRING PRIMARY KEY, FOLDER_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_INDEXING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INDEX_META VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_RECOMMENDATIONS ( REC_ID STRING PRIMARY KEY, FOLDER_ID STRING, SUGGESTION VARIANT, SCORE NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, FOLDER_ID STRING, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FOLDER_SIMILARITY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, FOLDER_REF STRING, SNAPSHOT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORECAST_ACCURACY_METRICS ( MET_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORECAST_LOGS_6306 ( LOG_ID STRING PRIMARY KEY, FORECAST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, CASE_ID STRING, FINDINGS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_ARTIFACTS ( ARTIFACT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ARTIFACT_TYPE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_CASE_EVIDENCE ( EVID_ID STRING PRIMARY KEY, CASE_ID STRING, BUNDLE_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_CHAIN_INDEX ( CHAIN_ID STRING PRIMARY KEY, CASE_ID STRING, CHAIN_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_EVIDENCE_LINKS ( LINK_ID STRING PRIMARY KEY, CASE_ID STRING, BUNDLE_ID STRING, LINK_TYPE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSICS_INDEX ( IDX_ID STRING PRIMARY KEY, ARTIFACT_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_ARTIFACT_INDEX ( ART_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LOCATION STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_BUNDLE_REGISTRY ( FB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_BUNDLE_REQUESTS ( REQ_ID STRING PRIMARY KEY, FB_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_BUNDLE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EVIDENCE_STORE ( EVID_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EVIDENCE_JSON VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, ALERT_ID STRING, BUNDLE_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORTS_06 ( FORENSIC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FILE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, CHECKSUM STRING, EXPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_RETENTION_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_RETRIEVAL_JOBS ( JOB_ID STRING PRIMARY KEY, EVID_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.FORENSIC_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORMAT_PROFILE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORMAT_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, PROFILE_ID STRING, BUNDLE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FORMAT_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORensics_ARTIFACT_STORE ( ART_ID STRING PRIMARY KEY, CASE_ID STRING, ART_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORensics_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORensics_RETRIEVAL_JOBS ( JOB_ID STRING PRIMARY KEY, CASE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FORensics_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAGMENT_REASSEMBLY_JOBS ( JOB_ID STRING PRIMARY KEY, FRAG_IDS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAGMENT_REASSEMBLY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, BUNDLE_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, CASE_ID STRING, ALERT_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, ALERT_TYPE STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, BUNDLE_ID STRING, ALERT_REASON STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE FLOAT, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE FLOAT, STATUS STRING DEFAULT 'OPEN', DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS_06 ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RULE_ID STRING, SCORE FLOAT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERTS_11 ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, ALERT_TYPE STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_QUEUE ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RISK_SCORE NUMBER, STATUS STRING DEFAULT 'OPEN', RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_QUEUE ( ALERT_Q_ID STRING PRIMARY KEY, DET_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, HANDLED_BY STRING, OUTCOME VARIANT, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_Q_ID STRING, ACTION_TAKEN STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASES ( CASE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, ALERT_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_EVENTS ( EVENT_ID STRING PRIMARY KEY, CASE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_LINKS ( LINK_ID STRING PRIMARY KEY, CASE_ID STRING, RESOURCE_REF STRING, ADDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, NOTE TEXT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, CASE_ID STRING, NOTE CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_REGISTRY ( CASE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DETAILS VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_RESULTS ( RES_ID STRING PRIMARY KEY, ASSN_ID STRING, OUTCOME VARIANT, CLOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_CASE_UPDATES_13 ( UPDATE_ID STRING PRIMARY KEY, INVEST_ID STRING, NOTE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_DETECTION_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_DETECTION_ALERTS ( ALERT_ID STRING PRIMARY KEY, REFERENCE_REF STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_DETECTION_HITS ( HIT_ID STRING PRIMARY KEY, RULE_ID STRING, SUBJECT_REF STRING, HIT_JSON VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_DETECTION_RESULTS ( DET_ID STRING PRIMARY KEY, REQUEST_ID STRING, SCORE NUMBER, ACTION STRING, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_DETECTION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_EVENT_INDEX ( FRAUD_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_FLAGS ( FLAG_ID STRING PRIMARY KEY, REQUEST_ID STRING, FLAG_TYPE STRING, DETAILS VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_FLAGS ( FLAG_ID STRING PRIMARY KEY, SIGNER_ID STRING, FLAG_TYPE STRING, DETAILS VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_HITS ( HIT_ID STRING PRIMARY KEY, RULE_ID STRING, CONTEXT VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RISK_SCORE FLOAT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING DEFAULT 'OPEN', NOTES VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATIONS_13 ( INVEST_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, STATUS STRING, DETAILS VARIANT, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATION_LOG ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, CASE_ID STRING, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, HIT_ID STRING, STATUS STRING DEFAULT 'OPEN', ASSIGNED_TO STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_INVESTIGATION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, CLOSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_MATCH_HISTORY ( MATCH_ID STRING PRIMARY KEY, CASE_ID STRING, SIGNER_ID STRING, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_MODEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, SIGNER_ID STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_MODEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_VER_ID STRING, SUBJECT_REF STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_MODEL_VERSIONS ( MODEL_VER_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_REVIEW_WORKFLOW ( WF_ID STRING PRIMARY KEY, CASE_ID STRING, STAGE STRING, ASSIGNED_TO STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, EXPRESSIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_RULES_06 ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_RULE_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, RULE_ID STRING, BUNDLE_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_RULE_REGISTRY ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_SCORES ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE FLOAT, REASON VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FRAUD_WORKFLOW ( WORKFLOW_ID STRING PRIMARY KEY, CASE_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FULLTEXT_INDEX_META ( META_ID STRING PRIMARY KEY, INDEX_NAME STRING, LAST_BUILD_AT TIMESTAMP_LTZ, SHARD_COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.FUZZY_MATCH_THRESHOLDS ( THRESH_ID STRING PRIMARY KEY, NAME STRING, VALUE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.FW_VULN_LOGS ( LOG_ID STRING PRIMARY KEY, DEVICE_ID STRING, VULN_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_ACCOUNTABILITY_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.GDPR_DATA_ERASURE_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ERASURE_STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_DATA_EXPORT_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, EXPORT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_DATA_MAP ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, SCHEMA JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_DATA_MAPPING ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, FIELD_MAPPINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_EXPORT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GDPR_RECORDS_INDEX ( REC_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, GEO_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, GEO_ID STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLYGON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, POLYGON VARIANT, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCING_RULES_11 ( RULE_ID STRING PRIMARY KEY, NAME STRING, POLYGON VARIANT, ACTION STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.GEOFENCING_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, RULE_ID STRING, SESSION_ID STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOIP_LOOKUPS ( LOOKUP_ID STRING PRIMARY KEY, IP_ADDR STRING, GEO VARIANT, LOOKUP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOIP_LOOKUP_CACHE ( LOOKUP_ID STRING PRIMARY KEY, IP_ADDRESS STRING, GEO_INFO VARIANT, LOOKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOLOCATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, LOCATION VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SEVERITY STRING );

CREATE OR REPLACE TABLE DOCGEN.GEOLOCATION_ANOMALY_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOLOCATION_ANOMALY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOLOCATION_RECORDS ( GEO_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LATITUDE FLOAT, LONGITUDE FLOAT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.GEOREPLICATION_CONFIGS ( CFG_ID STRING PRIMARY KEY, TARGET_REGION STRING, SCOPE VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOREPLICATION_JOBS ( JOB_ID STRING PRIMARY KEY, CFG_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEOREPLICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_ACCESS_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, IP_GEO VARIANT, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, GEO_EVENT_ID STRING, ALERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.GEO_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_BLOCKLIST ( BLOCK_ID STRING PRIMARY KEY, COUNTRY_CODE STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.GEO_EVENTS ( EVT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LOCATION JSON, EVENT_TYPE STRING, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_EVENTS ( GEO_ID STRING PRIMARY KEY, SIGNER_ID STRING, LATITUDE NUMBER, LONGITUDE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_EVENTS_11 ( GEO_EVENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, COUNTRY STRING, ACTION STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_FENCING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, POLYGON VARIANT, ACTION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_FENCING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, REGIONS ARRAY, ACTION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.GEO_FRAUD_SIGNALS ( SIGNAL_ID STRING PRIMARY KEY, SIGNER_ID STRING, GEO JSON, RISK_LEVEL STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_FRAUD_SIGNALS ( SIGNAL_ID STRING PRIMARY KEY, SIGNER_ID STRING, GEO VARIANT, RISK_LEVEL STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_IP_LOOKUP_CACHE ( CACHE_ID STRING PRIMARY KEY, IP_ADDR STRING, GEO_JSON VARIANT, LAST_LOOKUP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_LOOKUPS ( GEO_ID STRING PRIMARY KEY, IP_ADDRESS STRING, GEO_DATA VARIANT, LOOKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_LOOKUP_CACHE_14 ( GEO_ID STRING PRIMARY KEY, IP_ADDR STRING, GEO JSON, LOOKUP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_POLICIES_14 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.GEO_POLICY_VIOLATIONS_14 ( VIOLATION_ID STRING PRIMARY KEY, POLICY_ID STRING, SIGNER_ID STRING, LOCATION VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_REPLICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SYNC_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.GEO_RESTRICTIONS_07 ( RESTRICT_ID STRING PRIMARY KEY, TARGET_REF STRING, REGIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_RESTRICTIONS_11 ( RESTR_ID STRING PRIMARY KEY, NAME STRING, COUNTRIES ARRAY, ACTION STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.GEO_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, REGION STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_VIOLATIONS_07 ( VIOLATION_ID STRING PRIMARY KEY, TARGET_REF STRING, REGION STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, BUNDLE_ID STRING, GEO_INFO VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GEO_WATCHLISTS ( WL_ID STRING PRIMARY KEY, NAME STRING, POLYGON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_ADMIN_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_CONFIGURATIONS ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_INCIDENT_DASHBOARD ( DASH_ID STRING PRIMARY KEY, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_POLICY_INDEX ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GLOBAL_SETTINGS ( SETTING_KEY STRING PRIMARY KEY, SETTING_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVCOMPLIANCE_ASSESSMENT ( ASSESS_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVCOMPLIANCE_TASKS ( TASK_ID STRING PRIMARY KEY, ASSESS_ID STRING, OWNER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_ACTION_ITEMS ( ACTION_ID STRING PRIMARY KEY, MIN_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, NOTE_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_COMMITTEE_NOTES ( NOTE_ID STRING PRIMARY KEY, MEETING_REF STRING, MINUTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_FRAMEWORK_INDEX ( IDX_ID STRING PRIMARY KEY, NAME STRING, COMPONENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_MEETING_MINUTES ( MIN_ID STRING PRIMARY KEY, TITLE STRING, MINUTES CLOB, MEETING_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_MEETING_MINUTES ( MIN_ID STRING PRIMARY KEY, TOPICS VARIANT, ATTENDEES ARRAY, MINUTES CLOB, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GOVERNANCE_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GRAPH_RELATIONSHIP_INDEX ( REL_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, REL_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.GRAPH_TRAVERSAL_JOBS ( JOB_ID STRING PRIMARY KEY, START_REF STRING, PARAMS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.GRAPH_TRAVERSAL_LOGS ( LOG_ID STRING PRIMARY KEY, START_NODE STRING, END_NODE STRING, PATH VARIANT, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.GRAPH_TRAVERSAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PATHS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HANDOFF_LOGS_6107 ( LOG_ID STRING PRIMARY KEY, HANDOFF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HANDWRITING_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HANDWRITING_MODEL_TELEMETRY ( TEL_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HANDWRITING_SCORES ( SCORE_ID STRING PRIMARY KEY, IMAGE_ID STRING, MODEL_ID STRING, SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, HASH STRING, METHOD STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_ANCHORS ( HASH_ANCHOR_ID STRING PRIMARY KEY, ANCHOR_HASH STRING, ANCHOR_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_HISTORY ( HIST_ID STRING PRIMARY KEY, REF_ID STRING, HASH_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_INDEX ( IDX_ID STRING PRIMARY KEY, HASH_VALUE STRING, REF_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_INDEX_07 ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_RECONCILIATIONS_07 ( RECON_ID STRING PRIMARY KEY, HASH_ID STRING, STATUS STRING, DETAILS VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HASH_VERIFICATION_LOGS_6249 ( LOG_ID STRING PRIMARY KEY, HASH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS ( HC_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS ( HEALTH_ID STRING PRIMARY KEY, CHECK_NAME STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS ( HEALTH_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS ( HEALTH_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, LAST_RUN TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS_02 ( CHECK_ID STRING PRIMARY KEY, NAME STRING, LAST_OK TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECKS_12 ( CHECK_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECK_HISTORY ( CHECK_ID STRING PRIMARY KEY, CHECK_NAME STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECK_REGISTRY ( CHECK_ID STRING PRIMARY KEY, NAME STRING, LAST_RUN_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECK_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, SUMMARY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_CHECK_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEALTH_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEARTBEAT_CHECKS_12 ( CHECK_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEARTBEAT_MONITORING ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEARTBEAT_MONITORING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CHECKS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HEARTBEAT_MONITORING_RESULTS ( RES_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HELPDESK_TICKETS ( TICKET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUBJECT STRING, DESCRIPTION CLOB, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HELPDESK_TICKET_LOGS ( LOG_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HELPDESK_TICKET_METRICS ( METRIC_ID STRING PRIMARY KEY, TICKET_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HELPDESK_TICKET_UPDATES ( UPDATE_ID STRING PRIMARY KEY, TICKET_ID STRING, UPDATE_BY STRING, NOTE CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HIGH_VALUE_SIGNING_ALERTS ( ALERT_ID STRING PRIMARY KEY, REQUEST_ID STRING, AMOUNT NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HIGH_VALUE_SIGNING_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_TAKEN STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.HOLDBACKS ( HB_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLDBACK_EVENTS ( HBE_ID STRING PRIMARY KEY, HB_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, HOLD_ID STRING, BUNDLE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, HOLD_POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_EXEMPTIONS_06 ( EXEMPTION_ID STRING PRIMARY KEY, HOLD_ID STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_EXEMPTIONS_11 ( EXEMPT_ID STRING PRIMARY KEY, HOLD_ID STRING, REASON STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOLD_RELEASE_JOBS ( JOB_ID STRING PRIMARY KEY, HOLD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.HOTFIX_BACKPORTS ( BACKPORT_ID STRING PRIMARY KEY, RELEASE_ID STRING, TARGET_BRANCH STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOTFIX_REGISTRY ( HOTFIX_ID STRING PRIMARY KEY, DESCRIPTION CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPLIED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.HOURLY_ACTIVITY_AGG ( AGG_ID STRING PRIMARY KEY, HOUR_SLOT TIMESTAMP_LTZ, METRICS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HOUSEKEEPING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, LAST_RUN TIMESTAMP_LTZ, STATUS STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HOUSEKEEPING_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.HSM_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OPERATION STRING, PAYLOAD VARIANT, RESULT VARIANT, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, OPERATION_REF STRING, USER_REF STRING, AUDIT_JSON VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, HSM_ACTION STRING, ACTOR STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_EVENT_LOG ( EVENT_ID STRING PRIMARY KEY, HSM_REF STRING, EVENT_TYPE STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, NODE_REF STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, HSM_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_HEALTH_METRICS ( METRIC_ID STRING PRIMARY KEY, HSM_REF STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATIONS_06 ( INTEGRATION_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_EVENTS ( EVT_ID STRING PRIMARY KEY, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACTION STRING, PAYLOAD VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATION STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, PURPOSE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SERVICE_REF STRING, ACTION STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_INTEGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_HISTORY ( KEY_ID STRING PRIMARY KEY, KEY_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_LOGS_6203 ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REFERENCES ( KEY_REF_ID STRING PRIMARY KEY, HSM_KEY_ID STRING, PURPOSE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REFERENCES ( REF_ID STRING PRIMARY KEY, KEY_ID STRING, KEY_ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, KEY_STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_REF STRING, KEY_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_REF STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_REGISTRY_6202 ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, ACTIVATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_ROTATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_ROTATION_LOG ( ROTATE_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, HSM_REF STRING, NEXT_ROTATION_AT TIMESTAMP_LTZ, ROTATION_POLICY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_KEY_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, KEY_REF STRING, NEXT_ROTATE_AT TIMESTAMP_LTZ, INTERVAL_DAYS INT );

CREATE OR REPLACE TABLE DOCGEN.HSM_LOGS_06 ( LOG_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, OPERATION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATIONS_LOG ( OP_ID STRING PRIMARY KEY, KEY_ID STRING, OPERATION STRING, INITIATED_BY STRING, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, HSM_ID STRING, OPERATION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, OPERATION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATION STRING, KEY_REF STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OP_NAME STRING, REQUEST_JSON VARIANT, RESPONSE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, ACTION STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OP_TYPE STRING, SUBJECT_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, OP_TYPE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_OPERATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACTION STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.HSM_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATION STRING, REQUEST_PAYLOAD VARIANT, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_REQUEST_LOG ( REQ_ID STRING PRIMARY KEY, OP STRING, PAYLOAD VARIANT, RESPONSE VARIANT, STATUS STRING, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_RESPONSES ( RESP_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_RESPONSES ( RESP_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE_PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGNER_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGNER_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGNER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SIGNATURE_REF STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGNER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SIGNATURE_REF STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGN_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, KEY_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGN_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNATURE_METHOD STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGN_RESULTS ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, SIGNATURE_BLOB STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.HSM_SIGN_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, SIGNATURE_HEX STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.HSM_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, KEY_REF_ID STRING, OPERATION STRING, USER STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.I18N_RESOURCE_KEYS_08 ( KEY_ID STRING PRIMARY KEY, KEY_NAME STRING, DEFAULT_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.I18N_TRANSLATIONS_08 ( TRANS_ID STRING PRIMARY KEY, KEY_ID STRING, LOCALE STRING, TEXT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IAM_AUDIT ( IA_ID STRING PRIMARY KEY, IAM_PRINCIPAL STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IAM_MAPPINGS ( MAP_ID STRING PRIMARY KEY, SUBJECT_REF STRING, IAM_PRINCIPAL STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, DETAILS VARIANT, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_LINKAGE ( LINK_ID STRING PRIMARY KEY, SUBJECT_REF STRING, IDP_ID STRING, PROVIDER_SUBJECT_ID STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_MAPPING_RULES ( RULE_ID STRING PRIMARY KEY, IDP_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROOFING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROOFING_RUNS ( RUN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROOFS ( PROOF_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROOF_TYPE STRING, PROOF_DATA VARIANT, VERIFIED BOOLEAN DEFAULT FALSE, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS ( IDP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS ( IDP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS ( IDP_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDERS_06 ( IDP_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_CHECK_JOBS ( JOB_ID STRING PRIMARY KEY, IDP_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_HEALTH ( HP_ID STRING PRIMARY KEY, IDP STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_INDEX ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_MAPPINGS ( MAP_ID STRING PRIMARY KEY, PROVIDER STRING, MAPPING_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_REGISTRY ( IDP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_REGISTRY ( IDP_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_PROVIDER_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SYNCED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_RISK_RESOLUTION_QUEUE ( Q_ID STRING PRIMARY KEY, TRIG_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_RISK_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_RISK_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, SCORE_ID STRING, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, IDP STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATIONS ( IDV_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROVIDER STRING, RESULT STRING, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATIONS ( VERIF_ID STRING PRIMARY KEY, PROOF_ID STRING, VERIFIED_BY STRING, RESULT STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATIONS ( VERIF_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD STRING, RESULT STRING, DETAIL VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_PROVIDERS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROVIDER STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDENTITY_VERIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SIGNER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDLE_SESSION_CLEANUP_06 ( CLEANUP_ID STRING PRIMARY KEY, THRESHOLD_MIN INT, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IDP_AUDIT ( AUDIT_ID STRING PRIMARY KEY, IDP_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IDP_AUTH_EVENTS ( EVENT_ID STRING PRIMARY KEY, IDP_ID STRING, USER_REF STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDP_CONNECTION_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, IDP_ID STRING, SUBJECT_REF STRING, SUCCESS BOOLEAN, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDP_EVENTS ( EVT_ID STRING PRIMARY KEY, IDP_ID STRING, EVENT_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDP_MAPPINGS ( MAP_ID STRING PRIMARY KEY, SIGNER_ID STRING, IDP_REF STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDP_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, IDP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IDP_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_ASSET_STORE ( ASSET_ID STRING PRIMARY KEY, PATH STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_ASSET_USAGE ( USAGE_ID STRING PRIMARY KEY, ASSET_ID STRING, DOCUMENT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_DERIVATIVES_05 ( DERIV_ID STRING PRIMARY KEY, IMG_ID STRING, DERIV_TYPE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_HASHES_05 ( HASH_ID STRING PRIMARY KEY, IMG_ID STRING, HASH STRING, ALGORITHM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, ATTACHMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT CLOB, LANG STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT_CLOB CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_PROCESSING_QUEUE ( Q_ID STRING PRIMARY KEY, RESOURCE_ID STRING, JOB_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMAGE_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMMUTABLE_EVIDENCE_STORE ( EVID_ID STRING PRIMARY KEY, BUNDLE JSON, STORAGE_LOC STRING, WRITTEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMMUTABLE_EVIDENCE_STORE ( STORE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, SEALED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.IMMUTABLE_STORAGE_INDEX ( IDX_ID STRING PRIMARY KEY, LOCATION STRING, HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IMPROVEMENT_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INBOUND_IDEMPOTENCY ( IDEMPOTENCY_KEY STRING PRIMARY KEY, SOURCE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONSUMED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.INBOUND_RATE_LIMIT ( LIMIT_ID STRING PRIMARY KEY, SOURCE_IP STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INBOUND_WEBHOOK_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RECEIVED_COUNT INT, FAILED_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCENTIVE_PAYOUT_RESULTS ( RES_ID STRING PRIMARY KEY, ASSIGN_ID STRING, AMOUNT NUMBER, PAID_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, RETRO_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ACTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, ACTIONS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ALERTS ( ALERT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ALERT_LEVEL STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_AUTOMATIONS ( AUTO_ID STRING PRIMARY KEY, INCIDENT_TYPE STRING, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_AUTO_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_TYPE STRING, ACTION_JSON VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_CATEGORIZATIONS ( CAT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CATEGORY STRING, CONFIDENCE NUMBER, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_CATEGORIZATION_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COMMENTS_07 ( COMMENT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, AUTHOR STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COMMUNICATION_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CHANNEL STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COMMUNICATION_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TEMPLATE_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COMMUNICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COMM_CHANNEL_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, INCIDENT_ID STRING, COST_JSON VARIANT, ESTIMATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_COST_RESULTS ( RES_ID STRING PRIMARY KEY, EST_ID STRING, ACTUAL_COST_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_CURATION_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CURATOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_CURATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, CURATION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_CUSTOMER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TENANT_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATIONS ( ESCALATION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STEP INT, ACTION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATIONS ( ESCAL_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LEVEL INT, NOTIFIED BOOLEAN DEFAULT FALSE, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATIONS ( IE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_HISTORY ( H_ID STRING PRIMARY KEY, INCIDENT_ID STRING, POLICY_ID STRING, ACTION JSON, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LEVEL STRING, HANDLED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_METRICS_6082 ( METRIC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_METRIC_LOGS_6083 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_IMPACT_SCORES ( SCORE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, IMPACT_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_KPIS ( KPI_ID STRING PRIMARY KEY, INCIDENT_ID STRING, KPI_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_LEARNING_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, LESSONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_METRICS ( METRIC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRIC VARIANT, MEASURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_METRICS ( METRIC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRIC_NAME STRING, VALUE VARIANT, CAPTURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_NOTES ( NOTE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_NOTES ( NOTE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, NOTE_TEXT STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_NOTIFICATION_QUEUE ( QUEUE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, MESSAGE STRING, DESTINATION VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, INCIDENT_TYPE STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ANALYSIS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY STRING, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEM_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEM_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEM_INDEX ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEM_REGISTRY ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_POSTMORTEM_REPORTS ( REPORT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_REPORTS_07 ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_REPORTS_10 ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_REPORTS_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSES_12 ( RESPONSE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTIONS VARIANT, RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STEP_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_INDEX INT, ACTION_JSON VARIANT, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ASSIGNEE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, PLAN_ID STRING, INCIDENT_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_LOG ( INCIDENT_LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_METRICS ( MET_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_METRICS ( MET_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOK_LOGS ( LOG_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_RUNS_V2 ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_SLA ( SLA_ID STRING PRIMARY KEY, INCIDENT_TYPE STRING, TARGET_RESPONSE_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RESPONSE_TIME_SERIES ( SERIES_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RETROSPECTIVES ( R_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RETROSPECTIVE_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RETROSPECTIVE_INDEX ( RETRO_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ROOTCAUSE_INDEX ( IDX_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ROOTCAUSE JSON, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ROOT_CAUSE_INDEX ( ROOT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CAUSE_JSON VARIANT, IDENTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_ROSTER_LOGS_6290 ( LOG_ID STRING PRIMARY KEY, ROSTER_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RUNBOOK_LINKS ( LINK_ID STRING PRIMARY KEY, INCIDENT_ID STRING, RUNBOOK_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_RUN_LOG ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, PLAYBOOK_ID STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SERVICE_IMPACT ( IMPACT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SERVICE_ID STRING, IMPACT_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SERVICE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SERVICE_REF STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SEVERITY_CLASSIFICATION ( CLASS_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SEVERITY STRING, CLASSIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SEVERITY_LEVELS ( SEV_ID STRING PRIMARY KEY, NAME STRING, PRIORITY INT );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SEVERITY_MATRIX ( MATRIX_ID STRING PRIMARY KEY, RULES JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SLACK_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SLA_METRICS ( MET_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SLO_ID STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_TAGS ( TAG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_THREAT_MATCHES ( MATCH_ID STRING PRIMARY KEY, INCIDENT_ID STRING, MATCH_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_TICKETS ( TICKET_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_TIMELINES ( TL_ID STRING PRIMARY KEY, INCIDENT_ID STRING, EVENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INCIDENT_UPDATES_10 ( UPDATE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, UPDATE_TEXT STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEXING_TELEMETRY ( TELE_ID STRING PRIMARY KEY, INDEX_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_ALERTS ( ALERT_ID STRING PRIMARY KEY, INDEX_NAME STRING, ALERT_TYPE STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_BUILD_JOBS ( JOB_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INDEX_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, INDEX_NAME STRING, CAPACITY VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INDEX_REF STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_HEALTH_05 ( HEALTH_ID STRING PRIMARY KEY, SHARD_ID STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_HEARTBEAT_6060 ( HB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_HEARTBEAT_LOGS_6061 ( LOG_ID STRING PRIMARY KEY, HB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_MAINTENANCE_QUEUE ( Q_ID STRING PRIMARY KEY, INDEX_REF STRING, ACTION STRING, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_MAINTENANCE_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_MAINTENANCE_TASKS ( TASK_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_METADATA_14 ( INDEX_NAME STRING PRIMARY KEY, DESCRIPTION STRING, VECTOR_DIM NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_QUERY_METRICS ( METRIC_ID STRING PRIMARY KEY, INDEX_NAME STRING, QUERY_TEXT STRING, LATENCY_MS INT, RESULT_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBALANCE_05 ( REBAL_ID STRING PRIMARY KEY, SHARD_ID STRING, ACTION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBALANCE_LOGS ( LOG_ID STRING PRIMARY KEY, OP_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBALANCE_OPS ( OP_ID STRING PRIMARY KEY, INDEX_NAME STRING, DETAILS VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBUILDS ( REBUILD_ID STRING PRIMARY KEY, INDEX_NAME STRING, TRIGGERED_BY STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBUILD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBUILD_JOBS_07 ( JOB_ID STRING PRIMARY KEY, INDEX_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBUILD_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REBUILD_RESULTS_07 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_RECOMMENDATIONS ( REC_ID STRING PRIMARY KEY, INDEX_NAME STRING, RECOMMENDATION VARIANT, RECOMMENDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_RECONCILIATIONS_12 ( RECON_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, DISCREPANCIES VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_RECONCILIATIONS_14 ( RECON_ID STRING PRIMARY KEY, INDEX_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_RECONCILIATION_11 ( RECON_ID STRING PRIMARY KEY, SHARD_ID STRING, EXPECTED_COUNT NUMBER, ACTUAL_COUNT NUMBER, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_RECON_ISSUES_14 ( ISSUE_ID STRING PRIMARY KEY, RECON_ID STRING, ITEM_REF STRING, ISSUE_DESC STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REFRESH_HISTORY ( HIST_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REFRESH_TASKS ( TASK_ID STRING PRIMARY KEY, INDEX_REF STRING, SCHEDULE STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REGISTRY ( INDEX_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CURRENT_SNAPSHOT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REPAIR_HISTORY ( HIST_ID STRING PRIMARY KEY, INDEX_REF STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REPAIR_JOBS_12 ( JOB_ID STRING PRIMARY KEY, RECON_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_HEALTH ( HEALTH_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, INDEX_NAME STRING, SHARDS VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_MANIFEST ( SHARD_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, SHARD_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_MAP_05 ( SHARD_ID STRING PRIMARY KEY, SNAP_ID STRING, NODE_REF STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_METADATA ( SHARD_ID STRING PRIMARY KEY, INDEX_REF STRING, NODE_REF STRING, SIZE NUMBER, LAST_FLUSH TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SHARD_METADATA ( SHARD_ID STRING PRIMARY KEY, INDEX_REF STRING, RANGE JSON, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, CREATED_BY STRING, MANIFEST VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, INDEX_NAME STRING, S3_LOCATION STRING, SHARD_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOTS_07 ( SNAP_ID STRING PRIMARY KEY, INDEX_ID STRING, S3_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_MANIFEST ( SNAPSHOT_ID STRING PRIMARY KEY, INDEX_NAME STRING, S3_PREFIX STRING, SHARD_COUNT NUMBER, INDEX_VERSION STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_MANIFEST ( SNAPSHOT_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, SHARD STRING, S3_PREFIX STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, INDEX_ID STRING, S3_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_RECONCILE ( RECON_ID STRING PRIMARY KEY, REG_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_SNAPSHOT_REGISTRY ( REG_ID STRING PRIMARY KEY, INDEX_NAME STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INDEX_TOKENS_12 ( TOKEN_ID STRING PRIMARY KEY, DOC_INDEX_ID STRING, TOKEN STRING, POSITION NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INFRA_COST_CENTER_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TENANT_ID STRING, COST_CENTER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INFRA_COST_CENTER_MAP ( MAP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, COST_CENTER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INFRA_COST_USAGE ( USAGE_ID STRING PRIMARY KEY, COST_CENTER STRING, COST_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RAW_ID STRING, HANDLER STRING, STATUS STRING, DETAILS VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_BACKOFF_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_BACKPRESSURE ( MET_ID STRING PRIMARY KEY, COMPONENT STRING, BACKPRESSURE_LEVEL NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_BACKPRESSURE_INDEX ( IDX_ID STRING PRIMARY KEY, QUEUE_NAME STRING, THRESHOLD JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_CHECKPOINTS ( CHECKPOINT_ID STRING PRIMARY KEY, SOURCE_STAGE STRING, LAST_OFFSET STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_DEADLETTER_QUEUE ( DLQ_ID STRING PRIMARY KEY, EVENT_ID STRING, ERROR_TEXT CLOB, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_METRICS ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE NUMBER, TAGS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_METRICS ( METRIC_ID STRING PRIMARY KEY, PIPE_NAME STRING, RECORDS_INGESTED NUMBER, INGEST_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_RATE_METRICS ( METRIC_ID STRING PRIMARY KEY, SOURCE STRING, RATE_PER_MIN NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INGEST_RETRY_TRACKER ( TRACK_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPT_COUNT INT DEFAULT 0, LAST_ATTEMPT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INGEST_SCHEMA_VERSIONS ( SCHEMA_VER_ID STRING PRIMARY KEY, SOURCE STRING, VERSION_NUMBER INT, MAPPING JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_CHECKLISTS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_CHECKLISTS ( CHECK_ID STRING PRIMARY KEY, TITLE STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INSPECTOR_RUNS ( RUN_ID STRING PRIMARY KEY, CHECK_ID STRING, OPERATOR STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSURANCE_CLAIMS_INDEX ( CLAIM_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_REF STRING, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSURANCE_CLAIM_RESULTS ( RES_ID STRING PRIMARY KEY, CLAIM_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INSURANCE_POLICY_INDEX ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, PROVIDER STRING, POLICY_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATIONS_HEALTH_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SNAPSHOT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_ACCOUNT_MAPPINGS ( MAP_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, ACCOUNT_REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, SEVERITY STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_AUDIT_HOUSEKEEPING ( HK_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, ACTION STRING, SCHEDULE JSON, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_ROWS NUMBER, ERRORS NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_BACKOFF_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TARGET_REF STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_BACKOFF_STATE ( STATE_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, NEXT_TRY_AT TIMESTAMP_LTZ, ATTEMPTS INT, LAST_ERROR VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_BACKOFF_TRACKER ( TRACK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CALLS ( CALL_ID STRING PRIMARY KEY, TARGET STRING, PAYLOAD VARIANT, RESPONSE VARIANT, STATUS STRING, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CALL_LOG ( CALL_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, REQUEST_PAYLOAD VARIANT, RESPONSE_PAYLOAD VARIANT, STATUS STRING, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CHANGE_EVENTS ( EVT_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, CHANGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CHANGE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, EVT_ID STRING, STATUS STRING DEFAULT 'PENDING', COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CONTRACT_REGISTRY ( CONTRACT_ID STRING PRIMARY KEY, NAME STRING, CONTRACT_JSON VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CONTRACT_VERSIONS ( VER_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_CONTRACT_VIOLATIONS ( V_ID STRING PRIMARY KEY, CONTRACT_ID STRING, INCIDENT JSON, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_DEGRADED_ALERTS ( ALERT_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, METRIC JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_DEPRECATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTICE JSON );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, INTEGRATION STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, EVENT_PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_EVENTS ( IE_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_03 ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_07 ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_08 ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_09 ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_PING TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_RUN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_HISTORY ( HIST_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, CHECK_ID STRING, SEVERITY STRING, DESCRIPTION CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_INDEX_6148 ( IDX_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEALTH_LOGS_6149 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEARTBEAT ( HB_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEARTBEAT ( HB_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_PING TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_HEARTBEAT ( HB_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, DESCRIPTION CLOB, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEYS( KEY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, DETAILS VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEY_ROTATIONS ( ROTATION_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY_HASH STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEY_ROTATIONS ( ROT_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, OLD_KEY_HASH STRING, NEW_KEY_HASH STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, ROT_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_LATENCY_METRICS ( METRIC_ID STRING PRIMARY KEY, TARGET_REF STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_MIGRATION_TASKS ( TASK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_OUTAGE_WINDOWS ( OUTAGE_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, RECON_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_REPAIR_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_RESPONSES_06 ( RESP_ID STRING PRIMARY KEY, EXPORT_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, INTEGRATION STRING, CALLBACK_URL STRING, SECRET_HASH STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_SUBS_LOGS ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_TYPE STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_SYNC_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, BACKLOG_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRATION_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TOKEN_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_REF STRING, CHECK_TYPE STRING, RESULT STRING, DETAILS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_CHECKS_CONFIG ( CHECK_ID STRING PRIMARY KEY, TARGET_BUNDLE_ID STRING, SCHEDULE_CRON STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_CHECK_JOBS ( JOB_ID STRING PRIMARY KEY, CP_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHK_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCH BOOLEAN, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_MONITOR_ALERTS ( ALERT_ID STRING PRIMARY KEY, TARGET_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_REPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_REPAIR_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_REPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTEGRITY_VERIFICATION_LOGS_6262 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERACTION_HISTORIES_01 ( INTERACT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTOR STRING, ACTION STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, CENTER_ID STRING, AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_ANNOUNCEMENTS_12 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, AUDIENCE VARIANT, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, QUERY_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, QUERY_CLOB CLOB, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_FINDINGS ( FINDING_ID STRING PRIMARY KEY, REPORT_ID STRING, SEVERITY STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_FINDINGS ( FINDING_ID STRING PRIMARY KEY, RUN_ID STRING, DESCRIPTION CLOB, SEVERITY STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_REF STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_ISSUE_RESULTS ( RES_ID STRING PRIMARY KEY, ISSUE_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, RES_ID STRING, STATUS STRING, ASSIGNED_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, RESULT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_AUDIT_TASKS ( TASK_ID STRING PRIMARY KEY, SCOPE VARIANT, OWNER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, LOG_ID STRING, APPROVER STRING, STATUS STRING DEFAULT 'PENDING', DECIDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, COMPONENT STRING, CHANGE JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_LOGS_6084 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHANGE_REQUESTS_6083 ( REQ_ID STRING PRIMARY KEY, SUBJECT STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHARGEBACK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, SNAP_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_CHARGE_CODES ( CODE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_COMMS_EVENTS ( EVENT_ID STRING PRIMARY KEY, COMMS_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_COMMS_INDEX ( COMM_ID STRING PRIMARY KEY, SUBJECT STRING, BODY CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_COMMS_REGISTRY ( COMMS_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_COMMS_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, USER_REF STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_COST_CENTERS ( CENTER_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_INTEGRATION_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ASSERTS JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_INTEGRATION_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_INVOICES ( INV_ID STRING PRIMARY KEY, CREATED_BY STRING, AMOUNT NUMBER, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_INVOICE_LINES ( LINE_ID STRING PRIMARY KEY, INV_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_TOOLING_REGISTRY ( TOOL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_TOOL_ALERTS ( ALERT_ID STRING PRIMARY KEY, TOOL_ID STRING, SEVERITY STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNAL_TOOL_USAGE ( USAGE_ID STRING PRIMARY KEY, TOOL_ID STRING, USER_REF STRING, ACTION STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INTERNATIONAL_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, REGION STRING, REQUIREMENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVESTIGATION_CASE_ATTACHMENTS ( ATTACH_ID STRING PRIMARY KEY, CASE_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVESTIGATION_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, CASE_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCESSOR STRING, ACTION STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ADJUSTMENT_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, ADJ_JSON VARIANT, ADJUSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ADJUSTMENT_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_REF STRING, ADJUSTMENT JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, ADJUSTMENT_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_ALERTS ( ALERT_ID STRING PRIMARY KEY, INVOICE_REF STRING, TENANT_ID STRING, REASON STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, DRAFT_ID STRING, APPROVED_BY STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, DRAFT_ID STRING, COMMENT_BY STRING, COMMENT TEXT, COMMENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_HEALTH ( HEALTH_ID STRING PRIMARY KEY, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_INDEX ( DELIV_ID STRING PRIMARY KEY, INVOICE_ID STRING, DELIVERY_JSON VARIANT, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, CHANNEL STRING, RECIPIENT STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, DELIVERY_METHOD STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_METHODS ( METHOD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METHOD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DELIVERY_METRICS ( MET_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, DELIVERY_STATS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPATCH_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPATCH_RETRY ( RETRY_ID STRING PRIMARY KEY, INVOICE_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPT_COUNT INT DEFAULT 0, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPUTE_LOG ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPUTE_METRICS ( MET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, REASON CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DISTRIBUTIONS ( DIST_ID STRING PRIMARY KEY, INVOICE_ID STRING, SENT_TO STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_DRAFTS ( DRAFT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, LINE_ITEMS VARIANT, TOTAL NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_EVENT_STREAM ( EVT_ID STRING PRIMARY KEY, INVOICE_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_EXPORTS_11 ( EXPORT_ID STRING PRIMARY KEY, INVOICE_ID STRING, LOCATION STRING, EXPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_FINALIZED ( INVOICE_ID STRING PRIMARY KEY, DRAFT_ID STRING, EXTERNAL_REF STRING, FINALIZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_LINES ( LINE_ID STRING PRIMARY KEY, INVOICE_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_LINE_ITEMS_06 ( ITEM_ID STRING PRIMARY KEY, PREVIEW_ID STRING, DESCRIPTION STRING, AMOUNT NUMBER, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_NOTE_INDEX ( NOTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_PAYMENT_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, INVOICE_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_PDF_STORE ( PDF_ID STRING PRIMARY KEY, INVOICE_ID STRING, URL STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_PREVIEWS_06 ( PREVIEW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LINE_ITEMS VARIANT, INVOICE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_PREVIEW_AUDIT_11 ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INV_PREVIEW VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREVIEW_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECONCILE_QUEUE ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECONCILE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, MATCHED BOOLEAN, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECONCILIATION_ITEMS ( ITEM_ID STRING PRIMARY KEY, INVOICE_ID STRING, LINE_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECONCILIATION_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, STATUS STRING, NOTES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECONCILIATION_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_REF STRING, RECON_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECON_DISCREPANCIES_14 ( DISC_ID STRING PRIMARY KEY, JOB_ID STRING, LINE_REF STRING, EXPECTED VARIANT, ACTUAL VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_RECON_JOBS_14 ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_REFERENCE_INDEX ( REF_ID STRING PRIMARY KEY, INVOICE_ID STRING, EXTERNAL_REF STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_SEND_QUEUE ( Q_ID STRING PRIMARY KEY, INVOICE_ID STRING, CHANNEL STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_SEND_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_TEMPLATE_LIBRARY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, DEFAULT_LOCALE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_VIEW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, INVOICE_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.INVOICE_VIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, IP_ADDR STRING, USER_AGENT STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IP_ALLOWLIST ( AL_ID STRING PRIMARY KEY, NAME STRING, ADDRESSES ARRAY, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.IP_BLACKLIST ( ENTRY_ID STRING PRIMARY KEY, NETWORK_CIDR STRING, DESCRIPTION STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IP_BLACKLIST ( IP_ID STRING PRIMARY KEY, IP_ADDRESS STRING, REASON STRING, BLOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IP_WATCHLIST_14 ( IP_ID STRING PRIMARY KEY, IP_ADDR STRING, DESCRIPTION STRING, RISK_LEVEL STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.IP_WHITELIST ( ENTRY_ID STRING PRIMARY KEY, NETWORK_CIDR STRING, DESCRIPTION STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ISSUE_TRACKER_LOGS_6389 ( LOG_ID STRING PRIMARY KEY, ISSUE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JOB_BACKLOG_STATS ( STAT_ID STRING PRIMARY KEY, QUEUE_ID STRING, PENDING_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JOB_CHECKPOINTS_08 ( CHECKPOINT_ID STRING PRIMARY KEY, JOB_ID STRING, CHECKPOINT_DATA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JOB_DEAD_LETTER ( DLQ_ID STRING PRIMARY KEY, JOB_REF STRING, ERROR_JSON VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JOB_EXECUTIONS_02 ( EXEC_ID STRING PRIMARY KEY, JOB_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.JOB_RETRIES_QUEUE ( Q_ID STRING PRIMARY KEY, JOB_REF STRING, PAYLOAD VARIANT, NEXT_ATTEMPT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.JOB_RUNS_12 ( RUN_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.JOB_RUN_HEARTBEAT ( HEARTBEAT_ID STRING PRIMARY KEY, JOB_REF STRING, STATUS STRING, LAST_HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JOB_SCHEDULE_HISTORY ( HIST_ID STRING PRIMARY KEY, JOB_ID STRING, RUN_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTIONAL_COMPLIANCE_JOBS ( JOB_ID STRING PRIMARY KEY, JUR_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTIONAL_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTION_CHECKS ( CHECK_ID STRING PRIMARY KEY, REQUEST_ID STRING, COUNTRY_CODE STRING, PASSED BOOLEAN, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTION_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, JURIS_ID STRING, RULE_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTION_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, JURIS_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.JURISDICTION_VIOLATION_REPORTS ( REP_ID STRING PRIMARY KEY, CHECK_ID STRING, TENANT_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.JWT_BLACKLIST ( TOKEN_ID STRING PRIMARY KEY, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KB_USAGE ( USAGE_ID STRING PRIMARY KEY, KB_ID STRING, OPERATOR STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEYWORD_BLACKLIST_07 ( KW_ID STRING PRIMARY KEY, KEYWORD STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEYWORD_HITS_07 ( HIT_ID STRING PRIMARY KEY, KW_ID STRING, DOCUMENT_ID STRING, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_REF STRING, ACCESSOR STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_AUDIT ( KAA_ID STRING PRIMARY KEY, KEY_REF STRING, ACCESSOR STRING, ACCESS_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTION STRING );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_AUDITS ( AUDIT_ID STRING PRIMARY KEY, KEY_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, SUBJECT_REF STRING, ACTION STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, KEY_REF STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_LOGS_06 ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ACCESSOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, KEY_REF STRING, ALLOWED_ROLES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, KEY_REF STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICY ( POLICY_ID STRING PRIMARY KEY, KEY_REF STRING, ALLOWED_SUBJECTS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_REF STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, OUTCOME STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_BACKUP_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, BACKUP_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_GRANTS ( GRANT_ID STRING PRIMARY KEY, KEY_REF STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_GRANT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_REF STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_HEALTH ( HEALTH_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_MANAGEMENT_EVENTS ( EVT_ID STRING PRIMARY KEY, KEY_REF STRING, EVENT JSON, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_METADATA ( KEY_ID STRING PRIMARY KEY, KEY_TYPE STRING, CREATED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_OWNERS ( OWNER_ID STRING PRIMARY KEY, KEY_REF STRING, OWNER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_POLICIES ( KP_ID STRING PRIMARY KEY, KEY_REF STRING, POLICY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, KP_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_QUOTA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, KEY_REF_ID STRING, WINDOW_START TIMESTAMP_LTZ, OPS INT, QUOTA INT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_REVOKE_LOG ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PERFORMED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.KEY_REVOKE_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_REF STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATIONS_12 ( ROTATION_ID STRING PRIMARY KEY, KEY_ID STRING, PREV_HASH STRING, NEW_HASH STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, KEY_REF STRING, MESSAGE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROT_ID STRING, PERFORMED_BY STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_HISTORY ( HIST_ID STRING PRIMARY KEY, KEY_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_HISTORY ( ROTATION_ID STRING PRIMARY KEY, KEY_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_HISTORY ( ROTATION_ID STRING PRIMARY KEY, KEY_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_HISTORY ( ROT_ID STRING PRIMARY KEY, KEY_REF STRING, ROTATED_BY STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_HISTORY_03 ( ROTATION_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_JOBS_09 ( JOB_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_LOG ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_LOGS ( LOG_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, KEY_REF STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_RESULTS_09 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, KEY_REF STRING, NEXT_ROTATION TIMESTAMP_LTZ, INTERVAL_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, KEY_REF STRING, NEXT_ROTATION_at TIMESTAMP_LTZ, INTERVAL_DAYS INT, LAST_ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KEY_ROTATION_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, TARGET_REF STRING, CRON_EXPR STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_SIGNING_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_SIGNING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, KEY_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_REF STRING, USAGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, DETAILS VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_COUNTERS ( COUNTER_ID STRING PRIMARY KEY, KEY_REF_ID STRING, WINDOW_START TIMESTAMP_LTZ, OPS INT DEFAULT 0, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, API_KEY_ID STRING, USAGE_COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, KEY_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, KEY_REF_ID STRING, MAX_OPERATIONS INT, WINDOW_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USAGE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, KEY_REF STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KEY_USE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, OPERATION STRING, INVOKED_BY STRING, INVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, KEY_REF STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KMS_INTEGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, KMS_REF STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_INTEGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_ALIAS STRING, PROVIDER STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, KEY_NAME STRING, PROVIDER STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KMS_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KMS_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, KMS_ARN STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KNOWLEDGE_BASE_LINKS_01 ( LINK_ID STRING PRIMARY KEY, TOPIC STRING, URL STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KNOWLEDGE_BASE_UPDATES ( UPDATE_ID STRING PRIMARY KEY, KB_ID STRING, UPDATED_BY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SUMMARY CLOB );

CREATE OR REPLACE TABLE DOCGEN.KNOWLEDGE_FEEDBACK_QUEUE ( FB_ID STRING PRIMARY KEY, KB_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_ALERTS ( ALERT_ID STRING PRIMARY KEY, KPI_ID STRING, CONDITION VARIANT, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.KPI_ALERT_EVENTS ( EVENT_ID STRING PRIMARY KEY, RULE_ID STRING, KPI_SNAP_ID STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_ALERT_HISTORY ( H_ID STRING PRIMARY KEY, KPI_ID STRING, ALERT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, KPI_ID STRING, THRESHOLD JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, KPI_ID STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DASHBOARD_INDEX ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DASHBOARD_RUNS ( RUN_ID STRING PRIMARY KEY, DASH_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DASHBOARD_TILES ( TILE_ID STRING PRIMARY KEY, TENANT_ID STRING, TILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, AGG_INTERVAL STRING );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS_06 ( KPI_ID STRING PRIMARY KEY, NAME STRING, QUERY STRING, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITIONS_11 ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_DEFINITION_REGISTRY ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_EVAL_RESULTS ( RES_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE NUMBER, EVAL_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_HISTORY ( KPI_ID STRING PRIMARY KEY, KPI_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_RUNS ( RUN_ID STRING PRIMARY KEY, KPI_ID STRING, RESULT VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_RUN_JOBS ( JOB_ID STRING PRIMARY KEY, KPI_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KPI_RUN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_TILE_REFRESH_QUEUE ( Q_ID STRING PRIMARY KEY, TILE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_TILE_REFRESH_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_VALUES ( VALUE_ID STRING PRIMARY KEY, KPI_ID STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VALUE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KPI_VALUES ( VALUE_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KPI_VALUES ( VALUE_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.KPI_VALUES_06 ( VALUE_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_CHECKS ( CHECK_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHECK_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_CHECKS ( KYC_ID STRING PRIMARY KEY, SIGNER_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_DOCUMENTS ( DOC_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOC_TYPE STRING, FILE_REF STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_DOCUMENTS_08 ( DOC_ID STRING PRIMARY KEY, SIGNER_ID STRING, TYPE STRING, STORAGE_REF STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_EVENTS ( EVT_ID STRING PRIMARY KEY, PROVIDER STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_HEALTH ( H_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_INTEGRATION ( INT_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATIONS_08 ( VERIF_ID STRING PRIMARY KEY, DOC_ID STRING, RESULT VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, KYC_ID STRING, PROVIDER STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, KYC_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, DOC_ID STRING, RESULT STRING, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.KYC_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, KYC_ID STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.L10N_STRINGS ( STR_ID STRING PRIMARY KEY, KEY STRING, LOCALE STRING, VALUE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.L10N_UPDATE_QUEUE ( Q_ID STRING PRIMARY KEY, STR_ID STRING, LOCALE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABELING_QUALITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, SCORE NUMBER, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LABELING_TASK_QUEUE ( TASK_ID STRING PRIMARY KEY, DATA_REF STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABELING_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, ANNOTATIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABELING_WORKFORCE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABEL_ACCESS_CONTROLS ( LAC_ID STRING PRIMARY KEY, LABEL_KEY STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABEL_CHANGE_HISTORY ( H_ID STRING PRIMARY KEY, TARGET_REF STRING, LABEL_KEY STRING, OLD_VALUE STRING, NEW_VALUE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABEL_CONFLICT_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, TARGET_REF STRING, CONFLICT_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABEL_INDEX ( IDX_ID STRING PRIMARY KEY, LABEL STRING, COUNT INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.LABEL_PROPAGATION_LOGS ( LOG_ID STRING PRIMARY KEY, SOURCE_REF STRING, TARGET_REF STRING, LABELS ARRAY, PROPAGATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LABEL_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, LABEL STRING, COUNT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LANGUAGE_MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LANGUAGE_MODEL_USAGE ( USAGE_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, TOKEN_COUNT NUMBER, USAGE_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LANG_TEMPLATES_07 ( LANG_TPL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LARGE_DOCUMENT_HANDLING_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STRATEGY STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LARGE_DOCUMENT_HANDLING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LAST_IDS ( NAME STRING PRIMARY KEY, LAST_ID STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LATENCY_LOGS_6225 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LATENCY_PERCENTILES ( PID STRING PRIMARY KEY, COMPONENT STRING, P50 NUMBER, P95 NUMBER, P99 NUMBER, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LAYOUT_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LAYOUT_JSON VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LAYOUT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LAYOUT_TEMPLATE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DOCUMENT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEASE_LOCKS ( LEASE_ID STRING PRIMARY KEY, RESOURCE_REF STRING, HOLDER STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_AGREEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, AGREEMENT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_AGREEMENT_REGISTRY ( AGREEMENT_ID STRING PRIMARY KEY, TENANT_ID STRING, AGREEMENT_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_CASE_DOCUMENTS ( ENTRY_ID STRING PRIMARY KEY, CASE_ID STRING, DOCUMENT_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_CASE_REGISTRY ( CASE_ID STRING PRIMARY KEY, TENANT_ID STRING, CASE_JSON VARIANT, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_COMPLIANCE_OBSERVATIONS ( OBS_ID STRING PRIMARY KEY, TENANT_ID STRING, OBS_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_DISCOVERY_INDEX ( IDX_ID STRING PRIMARY KEY, HOLD_ID STRING, DOCUMENT_REFS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_DISCOVERY_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_DISCOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_DISCOVERY_RUNS ( RUN_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EVIDENCE_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_URI STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EVIDENCE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, EXPORT_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_ARTIFACTS ( ARTIFACT_ID STRING PRIMARY KEY, REQ_ID STRING, BUNDLE_ID STRING, URI STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPORT_JOB_ID STRING, AUDITED_BY STRING, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, HOLD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DESTINATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUESTED_BY STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, CASE_REF STRING, BUNDLE_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_EXPORT_RUNS ( RUN_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON STRING, PLACED_BY STRING, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, REQUEST_ID STRING, REASON STRING, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS_02 ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS_06 ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS_09 ( HOLD_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS_11 ( HOLD_ID STRING PRIMARY KEY, TARGET_TABLE STRING, REASON STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLDS_14 ( HOLD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, HOLD_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ASSIGN_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ACTIONS ( ACTION_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ACTIONS_02 ( ACTION_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ACTIVITY ( ACT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, ACTED_BY STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, REQUEST_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, HOLD_ID STRING, OBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ASSIGN_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, BY_USER STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_LOG ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_LOGS ( AUDIT_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, HOLD_ID STRING, SNAPSHOT_LOC STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_TASKS ( TASK_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION JSON, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_AUDIT_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, REQ_ID STRING, TRIGGER_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, HOLD_ID STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENFORCEMENT ( ENF_ID STRING PRIMARY KEY, REQ_ID STRING, TARGET_TABLE STRING, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENFORCEMENTS ( ENF_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION JSON, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENFORCEMENT_RUNS ( RUN_ID STRING PRIMARY KEY, HOLD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, HOLD_ID STRING, BUNDLE_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ENTRIES ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, ISSUED_BY STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, HOLD_ID STRING, LEVEL STRING, MESSAGE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ESCROW_REGISTRY ( ESCROW_ID STRING PRIMARY KEY, HOLD_ID STRING, PROVIDER STRING, REFERENCE STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, HOLD_ID STRING, SUBJECT_REF STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, HOLD_ID STRING, OBJECT_REF STRING, EXEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, REASON CLOB, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, HOLD_ID STRING, STAGE_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_HISTORY ( HISTORY_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_INDEX ( IDX_ID STRING PRIMARY KEY, REQ_ID STRING, TARGET_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_INDEX_6260 ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, HOLDS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_LOGS ( LOG_ID STRING PRIMARY KEY, HOLD_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_LOGS ( LOG_ID STRING PRIMARY KEY, HOLD_ID STRING, EVENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_LOGS_6259 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, HOLD_ID STRING, BUNDLES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_MATCHES ( MATCH_ID STRING PRIMARY KEY, HOLD_ID STRING, DOCUMENT_ID STRING, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_MEMBERS_09 ( MEMBER_ID STRING PRIMARY KEY, HOLD_ID STRING, REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, HOLD_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_ORDERS ( ORDER_ID STRING PRIMARY KEY, HOLD_ID STRING, APPLIED_TO STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_POLICIES ( HOLD_POLICY_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_POLICY_CATALOG ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_QUEUE ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'ACTIVE', ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RECORDS ( HOLD_ID STRING PRIMARY KEY, TARGET_TABLE STRING, TARGET_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, SCOPE VARIANT, ISSUED_BY STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REGISTRY ( HOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, PLACED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASES ( RELEASE_ID STRING PRIMARY KEY, HOLD_ID STRING, RELEASED_BY STRING, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASES_09 ( RELEASE_ID STRING PRIMARY KEY, HOLD_ID STRING, RELEASED_BY STRING, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_JOBS ( JOB_ID STRING PRIMARY KEY, HOLD_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_LOGS ( LOG_ID STRING PRIMARY KEY, HOLD_ID STRING, RELEASED_BY STRING, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_LOGS_6369 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_REQUESTS ( REQ_ID STRING PRIMARY KEY, HOLD_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_REQUESTS ( REQ_ID STRING PRIMARY KEY, HOLD_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_REQUESTS_6368 ( REQ_ID STRING PRIMARY KEY, HOLD_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RELEASE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( HOLD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'ACTIVE', ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( HOLD_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( HOLD_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTED_BY STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( REQ_ID STRING PRIMARY KEY, HOLD_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'ACTIVE', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REQUESTS_6258 ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, HOLD_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REVIEW_QUEUE ( REQ_ID STRING PRIMARY KEY, HOLD_ID STRING, REVIEWER STRING, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_HOLD_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_JURISDICTION_INDEX ( JURIS_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_JURISDICTION_INDEX ( J_ID STRING PRIMARY KEY, TENANT_ID STRING, JURISDICTION JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_JURISDICTION_INDEX_6277 ( JURIS_ID STRING PRIMARY KEY, REGION STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_JURISDICTION_LOGS_6278 ( LOG_ID STRING PRIMARY KEY, JURIS_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_JURISDICTION_REGISTRY ( JUR_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_METADATA_04 ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, JURISDICTION STRING, LEGAL_NOTES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_NOTICE_ACKS ( ACK_ID STRING PRIMARY KEY, NOTICE_ID STRING, SUBJECT_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_NOTICE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_NOTICE_REGISTRY ( NOTICE_ID STRING PRIMARY KEY, TENANT_ID STRING, NOTICE_TEXT CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_NOTICE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_AUDITS ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, REQ_ID STRING, TENANT_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATUS STRING, NOTES STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_SUBPOENA_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.LEGAL_SUBPOENA_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, LICENSE_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, LIC_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY_HASH STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_KEY_USAGE ( USG_ID STRING PRIMARY KEY, KEY_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_VIOLATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LICENSE_VIOLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIFECYCLE_EVENT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_REF STRING, STATUS STRING, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LIFECYCLE_EVENT_LOGS_6189 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIFECYCLE_EVENT_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, LOG_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIFECYCLE_EVENT_RETRY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIFECYCLE_EVENT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, EVENT_TYPE STRING, DESTINATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_ANOMALIES ( ANOMALY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, DESCRIPTION CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, LINE_ID STRING, CHANGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, DETAILS VARIANT, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, EDGE_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LINEAGE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIVENESS_CHALLENGE_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, CHALLENGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIVENESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, SESSION_ID STRING, CHECK_TYPE STRING, RESULT STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIVENESS_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, REQUEST_ID STRING, SCORE NUMBER, PASSED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LIVE_SESSION_METRICS ( MET_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LLM_COST_TRACKING ( TRACK_ID STRING PRIMARY KEY, MODEL_ID STRING, COST NUMBER, RUN_ID STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LLM_QUOTA_ENFORCEMENT ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LLM_RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LLM_RATE_LIMIT_USAGE ( USG_ID STRING PRIMARY KEY, PROFILE_ID STRING, WINDOW JSON, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_FALLBACKS ( FALLBACK_ID STRING PRIMARY KEY, LOCALE STRING, FALLBACK_LOCALES ARRAY );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_FALLBACKS ( FB_ID STRING PRIMARY KEY, LOCALE STRING, FALLBACK_LOCALES ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_FALLBACK_RULES ( RULE_ID STRING PRIMARY KEY, LOCALE STRING, FALLBACK_ORDER ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LOCALE STRING, OVERRIDES VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_OVERRIDES_07 ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, KEY STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_RESOURCE_LOGS_6049 ( LOG_ID STRING PRIMARY KEY, RESOURCE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_RESOURCE_REGISTRY_6048 ( RESOURCE_ID STRING PRIMARY KEY, LOCALE STRING, RESOURCE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_SETTINGS_07 ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LOCALE STRING, TIMEZONE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_SETTINGS_12 ( SETTING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LOCALE STRING, TIMEZONE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALE_SUPPORT_INDEX ( IDX_ID STRING PRIMARY KEY, LOCALE STRING, SUPPORTED_FEATURES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LOC_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, LOC_ID STRING, ACTION JSON, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_COVERAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, LOCALE STRING, COVERAGE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, JURISDICTION STRING, REQUIRED_NOTICES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_STRINGS ( KEY_ID STRING PRIMARY KEY, LOCALE STRING, KEY_NAME STRING, VALUE STRING );

CREATE OR REPLACE TABLE DOCGEN.LOCALIZATION_STRINGS_12 ( KEY STRING PRIMARY KEY, LOCALE STRING, VALUE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOCKOUT_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.LOCK_AUDIT_LOG ( AUDIT_ID STRING PRIMARY KEY, LOCK_ID STRING, ACTION STRING, BY_WHOM STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOGIN_ATTEMPT_METRICS ( MET_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESULT STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LOGIN_EVENTS ( EVENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, SUCCESS BOOLEAN, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LONGTERM_VALIDATION_INDEX ( LTV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VALIDATION_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LONG_TERM_ARCHIVE_INDEX ( ARCHIVE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LONG_TERM_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.LRT_ENFORCEMENTS ( ENF_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.LTV_RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_IDS ARRAY, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.LTV_RETENTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_ACTIVITY_LOG ( LOG_ID STRING PRIMARY KEY, COMPONENT_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EVENTS ( EVENT_ID STRING PRIMARY KEY, WINDOW_ID STRING, DESCRIPTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EVENTS_05 ( EVENT_ID STRING PRIMARY KEY, WINDOW_ID STRING, DESCRIPTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EVENTS_07 ( EVENT_ID STRING PRIMARY KEY, WINDOW_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EVENT_INDEX ( EVT_ID STRING PRIMARY KEY, WINDOW_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, WINDOW_ID STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_EXEC_LOG ( LOG_ID STRING PRIMARY KEY, MW_ID STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, ENABLED BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_HISTORY ( H_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_LOG ( LOG_ID STRING PRIMARY KEY, OPERATION STRING, STATUS STRING, DETAILS VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, WINDOW_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, WINDOW_ID STRING, EVENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_LOGS_6288 ( LOG_ID STRING PRIMARY KEY, WINDOW_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, MESSAGE STRING, SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, CHANNELS ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANNEL STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, TARGET_SCOPE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFICATIONS_11 ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, CHANNEL STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, MW_ID STRING, TARGET STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, WINDOW_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_RUN_JOBS ( JOB_ID STRING PRIMARY KEY, WIN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_RUN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_SCHEDULE_EVENTS ( EVT_ID STRING PRIMARY KEY, WINDOW_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_TASKS ( TASK_ID STRING PRIMARY KEY, MW_ID STRING, TASK_JSON VARIANT, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_TASKS ( TASK_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( MW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( MW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( MW_ID STRING PRIMARY KEY, SERVICE_NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, COMPONENT STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, RECURRING JSON );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, RECURRING JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, WINDOW_DEF VARIANT, ACTIVE BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, SERVICE_NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, SERVICE_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DESCRIPTION CLOB );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS_05 ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS_07 ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, DURATION_MINS INT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS_10 ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS_12 ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOWS_12 ( WINDOW_ID STRING PRIMARY KEY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_HISTORY ( HIST_ID STRING PRIMARY KEY, WINDOW_ID STRING, ACTION JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_INDEX ( MW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_REGISTRY ( WIN_ID STRING PRIMARY KEY, COMPONENT_REF STRING, WINDOW JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_RESULTS ( RES_ID STRING PRIMARY KEY, MW_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MAINTENANCE_WINDOW_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANAGEMENT_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANIFEST_REGISTRY_11 ( MANIFEST_ID STRING PRIMARY KEY, NAME STRING, CONTENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANUAL_BILLING_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, INVOICE_REF STRING, ADJ_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANUAL_REVIEW_ASSIGNMENT_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANUAL_REVIEW_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, RES_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.MANUAL_REVIEW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, VERSION INT, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MANUAL_REVIEW_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_APPLICATIONS ( APP_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_APPLICATION_LOG ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MASKING_APPLICATION_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_VER_ID STRING, TARGETS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_APPLICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MASKING_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, QUERY_TEXT CLOB, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, TARGET_COLUMN STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TARGET_TABLE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICY_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MASKING_POLICY_VERSIONS ( VER_ID STRING PRIMARY KEY, POLICY_ID STRING, DEFINITION VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, TARGET_FIELD STRING, MASK_EXPRESSION STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.MASKING_RULE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, RULE_ID STRING, TENANT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MASKING_RULE_LOGS_6383 ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MATERIALIZED_VIEWS_REGISTRY ( MV_ID STRING PRIMARY KEY, NAME STRING, REF_QUERY STRING, LAST_REFRESH TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_ACCESS_CONTROL ( MAC_ID STRING PRIMARY KEY, MEDIA_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, MEDIA_ID STRING, ACCESSED_BY STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTION STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, MEDIA_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_INDEX ( IDX_ID STRING PRIMARY KEY, MEDIA_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_PROCESSING_JOBS ( JOB_ID STRING PRIMARY KEY, MEDIA_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_PROCESSING_JOBS ( JOB_ID STRING PRIMARY KEY, REF_ID STRING, OP JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_PURGE_LOG ( LOG_ID STRING PRIMARY KEY, MEDIA_ID STRING, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TARGET_PATH_PATTERN STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MEDIA_STORE ( MEDIA_ID STRING PRIMARY KEY, PATH STRING, MIME_TYPE STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MERGE_ERROR_INDEX ( ERROR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_TEXT CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MESSAGE_QUEUE_METRICS ( MET_ID STRING PRIMARY KEY, QUEUE_NAME STRING, DEPTH INT, THROUGHPUT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_CATALOG_INDEX ( META_ID STRING PRIMARY KEY, OBJECT_REF STRING, META_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_CHANGE_HISTORY ( CHG_ID STRING PRIMARY KEY, META_ID STRING, OLD_JSON VARIANT, NEW_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_ENRICHMENT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_ENRICHMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ENRICHED_META VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_INDEX ( IDX_ID STRING PRIMARY KEY, TARGET_REF STRING, METADATA VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METADATA_KV ( KV_ID STRING PRIMARY KEY, ENTITY_REF STRING, K STRING, V VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.METADATA_SEARCH_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRICS_ALERTS ( ALERT_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRICS_ALERT_HISTORY ( ALERT_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD VARIANT, OBSERVED VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRICS_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, AGG_RULES VARIANT, SCHEDULE STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.METRICS_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, METRIC_NAME STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, VALUE VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRIC_ALERT_EVENTS ( EVENT_ID STRING PRIMARY KEY, THRESHOLD_ID STRING, METRIC_PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRIC_ALERT_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.METRIC_RUNS ( RUN_ID STRING PRIMARY KEY, CONFIG_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.METRIC_VALUES ( VALUE_ID STRING PRIMARY KEY, RUN_ID STRING, METRIC_KEY STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_CHALLENGE_LOG ( CH_ID STRING PRIMARY KEY, USER_REF STRING, CHALLENGE_TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_CHALLENGE_LOGS ( CHAL_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, STATUS STRING, TRIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_CHALLENGE_LOGS ( LOG_ID STRING PRIMARY KEY, ENR_ID STRING, CHALLENGE JSON, RESULT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, RESULT JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_ENROLLMENT_RECORDS ( ENR_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD_JSON VARIANT, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD_ID STRING, RESULT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MFA_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MFA_RECORDS_06 ( MFA_ID STRING PRIMARY KEY, USER_REF STRING, METHOD STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MIGRATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MIGRATION_NAME STRING, STATUS STRING, LOG VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MIGRATION_HISTORY ( MIG_ID STRING PRIMARY KEY, SCRIPT_NAME STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPLIED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MIGRATION_JOBS_11 ( JOB_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MIGRATION_RESULTS_11 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_APP_EVENTS ( EVENT_ID STRING PRIMARY KEY, APP_REF STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_PUSH_DISPATCH_JOBS ( JOB_ID STRING PRIMARY KEY, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_PUSH_DISPATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_PUSH_NOTIFICATION_REGISTRY ( REG_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_PUSH_REGISTRY ( REG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_PUSH_TOKEN_REGISTRY ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DEVICE_REF STRING, TOKEN STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_SDK_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, SDK_CLIENT STRING, ERROR_CODE STRING, ERROR_MSG CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_SDK_ERROR_REPORTS ( ERR_ID STRING PRIMARY KEY, SDK_CLIENT_ID STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_SDK_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, SDK_CLIENT STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_SDK_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, SDK_CLIENT_ID STRING, EVENT_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MOBILE_SDK_UPDATE_REGISTRY ( REG_ID STRING PRIMARY KEY, SDK_CLIENT_ID STRING, VERSION STRING, RELEASE_NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, MODEL_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, MODEL_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, SUBJECT_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ALERTS_QUEUE ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, ALERT_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ALERTS_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, HANDLED_BY STRING, OUTCOME VARIANT, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, VERSION_ID STRING, APPROVED_BY STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVALS_07 ( APPROVAL_ID STRING PRIMARY KEY, VER_ID STRING, APPROVER STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVALS_12 ( APPROVAL_ID STRING PRIMARY KEY, MODEL_ID STRING, APPROVER STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, WF_ID STRING, ACTION STRING, BY_WHOM STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVAL_WORKFLOW ( FLOW_ID STRING PRIMARY KEY, MODEL_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_APPROVAL_WORKFLOW ( WF_ID STRING PRIMARY KEY, MODEL_ID STRING, APPROVAL_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ARTIFACT_STORE ( ARTIFACT_ID STRING PRIMARY KEY, MODEL_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, CHECK_JSON VARIANT, RESULT VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, AUDIT_JSON VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_AUDIT_REGISTRY ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_MONITORING ( MON_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_BIAS_REPORTS_14 ( REPORT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_CONFIG ( CANARY_ID STRING PRIMARY KEY, VERSION_ID STRING, PERCENT_ROLLOUT FLOAT, METRICS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_METRICS ( METRIC_ID STRING PRIMARY KEY, CANARY_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, ENVIRONMENT STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, SAMPLE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, TRAFFIC_PCT NUMBER, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, MODEL_ID STRING, CHECK_NAME STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, THRESHOLD_JSON VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_CENTER_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, ALLOC_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_ESTIMATES_07 ( EST_ID STRING PRIMARY KEY, MODEL_ID STRING, ESTIMATE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_METRICS ( METRIC_ID STRING PRIMARY KEY, MODEL_ID STRING, COST_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_OPT_RECS ( REC_ID STRING PRIMARY KEY, TENANT_ID STRING, RECOMMENDATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_COST_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, COST_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DATA_LINEAGE ( LINEAGE_ID STRING PRIMARY KEY, MODEL_ID STRING, SOURCE_REF STRING, TRANSFORM JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DECISIONS_05 ( DECISION_ID STRING PRIMARY KEY, BUNDLE_ID STRING, MODEL_ID STRING, DECISION VARIANT, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, MODEL_ID STRING, ENVIRONMENT STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, MODEL_ID STRING, ENVIRONMENT STRING, ROUTING_RULES VARIANT, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DEPLOYMENTS_12 ( DEPLOY_ID STRING PRIMARY KEY, MODEL_ID STRING, ENV STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DEPLOYMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DEPLOYMENT_HISTORY ( DEPLOY_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, DETECTOR_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, DRIFT_SCORE NUMBER, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, DRIFT_SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_DETECTORS ( DETECTOR_ID STRING PRIMARY KEY, MODEL_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_EVENTS_07 ( EVENT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_RETRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, TRIGGER_REASON STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_RETRAINING_QUEUE ( Q_ID STRING PRIMARY KEY, MODEL_ID STRING, TRIGGER_REASON STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_DRIFT_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ENDPOINT_REGISTRY ( ENDPOINT_ID STRING PRIMARY KEY, MODEL_ID STRING, URL STRING, AUTH JSON, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ENDPOINT_USAGE ( USAGE_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, CALLER STRING, LATENCY_MS NUMBER, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EVAL_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EVAL_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, DATASET_REF STRING, METRICS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPERIMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPERIMENT_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, CONFIG VARIANT, METRICS VARIANT, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPLAINABILITY_ARTIFACTS ( ART_ID STRING PRIMARY KEY, MODEL_ID STRING, ARTIFACT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPLAINABILITY_LOGS ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT_HASH STRING, EXPLAIN_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPLAINABILITY_LOGS ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, REQUEST_JSON VARIANT, EXPLANATION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPLAINABILITY_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT_REF VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_EXPLAINABILITY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, EXPLANATION VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FAIRNESS_AUDITS ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FAIRNESS_METRICS ( MET_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_REF STRING, PRIMARY_MODEL STRING, FALLBACK_MODEL STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FALLBACK_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FEATURE_SETS ( SET_ID STRING PRIMARY KEY, MODEL_ID STRING, FEATURES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FEATURE_USAGE ( USAGE_ID STRING PRIMARY KEY, MODEL_ID STRING, FEATURE_KEY STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_FEEDBACK_05 ( FB_ID STRING PRIMARY KEY, DECISION_ID STRING, FEEDBACK VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_GOVERNANCE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_INFERENCE_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, PAYLOAD VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_INFERENCE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_INFERENCE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT_META VARIANT, OUTPUT_META VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_LATENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, LATENCY_MS NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_BASELINES ( BASE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_HISTORY ( HIST_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PERFORMANCE_INDEX ( PERF_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PROMOTIONS ( PROMO_ID STRING PRIMARY KEY, MODEL_ID STRING, FROM_STAGE STRING, TO_STAGE STRING, PROMOTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, MODEL_ID STRING, PROVENANCE JSON, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, MODEL_ID STRING, SOURCE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_QUOTA_BINDINGS ( BIND_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, QUOTA_JSON VARIANT, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_QUOTA_ENFORCEMENTS ( ENF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MODEL_ID STRING, STATUS STRING, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_QUOTA_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, QUOTA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, BIND_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, USAGE JSON );

CREATE OR REPLACE TABLE DOCGEN.MODEL_QUOTA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, PROFILE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, MODEL_NAME STRING, PROVIDER STRING, MODEL_VERSION STRING, DEFAULT BOOL, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_02 ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_12 ( MODEL_ID STRING PRIMARY KEY, NAME STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, USER_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, MODEL_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_EVENTS ( EVENT_ID STRING PRIMARY KEY, MODEL_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_EVENTS ( EVT_ID STRING PRIMARY KEY, MODEL_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_METADATA ( META_ID STRING PRIMARY KEY, MODEL_ID STRING, META_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_METRICS ( MET_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, MODEL_ID STRING, EVENT STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, MODEL_ID STRING, SNAPSHOT JSON, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION_NUMBER STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_REGISTRY_VERSIONS_07 ( VER_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION INT, ARTIFACT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, TRIGGER_REASON STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ARTIFACT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ARTIFACT_LOCATION STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ARTIFACT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, TRIGGER_REASON STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, REASON STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_REQUESTS ( REQ_ID STRING PRIMARY KEY, MODEL_ID STRING, TRIGGER JSON, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_RETRAIN_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTES_12 ( ROUTE_ID STRING PRIMARY KEY, MODEL_ID STRING, TENANT_ID STRING, PRIORITY NUMBER, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, INVOCATION JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_LOGS ( LOG_ID STRING PRIMARY KEY, INVOCATION_ID STRING, ROUTE_JSON VARIANT, ROUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_REF STRING, MODEL_CHOSEN STRING, EVAL_JSON VARIANT, ROUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_RULE ( RULE_ID STRING PRIMARY KEY, MODEL_ID STRING, FEATURE_KEY STRING, PRIORITY NUMBER, CONDITIONS VARIANT, ACTIVE BOOLEAN, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, ROUTE_JSON VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_ROUTING_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SELECTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, SELECTED_MODEL STRING, INPUT_HASH STRING, SELECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SELECT_HISTORY ( HIST_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, SELECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SERVING_ENDPOINTS ( ENDPOINT_ID STRING PRIMARY KEY, MODEL_ID STRING, URL STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SERVING_METRICS ( METRIC_ID STRING PRIMARY KEY, MODEL_ID STRING, LATENCY_MS NUMBER, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SERVING_METRICS ( METRIC_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SERVING_ROUTES ( ROUTE_ID STRING PRIMARY KEY, MODEL_ID STRING, ROUTE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SLA_BREACHES ( BREACH_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_SLA_PROFILES ( SLA_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_KEY STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_REF STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_07 ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_12 ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_13 ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_14 ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_AGG ( AGG_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, VALUE VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, MODEL_ID STRING, AGG_JSON VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, MODEL_ID STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_EVENTS ( EVENT_ID STRING PRIMARY KEY, MODEL_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_EVENTS ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_INDEX ( TEL_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_RAW ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TELEMETRY_STREAM ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_TRAINING_ARTIFACTS ( ART_ID STRING PRIMARY KEY, MODEL_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_USAGE_BREACH_EVENTS ( EVT_ID STRING PRIMARY KEY, BUDGET_ID STRING, DETAILS JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_USAGE_BUDGET ( BUDGET_ID STRING PRIMARY KEY, TENANT_ID STRING, MODEL_ID STRING, BUDGET_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_USAGE_CHARGEBACK ( CHARGE_ID STRING PRIMARY KEY, MODEL_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_USAGE_LEDGERS ( LEDGER_ID STRING PRIMARY KEY, MODEL_ID STRING, ACCOUNT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VERSIONS ( VERSION_ID STRING PRIMARY KEY, MODEL_REF STRING, VERSION INT, ARTIFACT_REF STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODEL_VERSION_DEPRECATION ( DEP_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.MODERATION_QUEUE_14 ( MOD_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MODERATION_RESULTS_14 ( RESULT_ID STRING PRIMARY KEY, MOD_ID STRING, VERDICT STRING, NOTES VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_ALERT_HISTORY ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_ALERT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_EVENTS_05 ( EVENT_ID STRING PRIMARY KEY, RULE_ID STRING, CONTEXT VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_HEARTBEAT_INDEX_6058 ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_HEARTBEAT_LOGS_6059 ( LOG_ID STRING PRIMARY KEY, HB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_KPI_DEFINITIONS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_KPI_VALUES ( VAL_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_RESULTS ( RESULT_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_RULES_05 ( RULE_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.MONTHLY_ACTIVITY_AGG ( AGG_ID STRING PRIMARY KEY, MONTH_START DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONTHLY_BILLING_REPORTS ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REPORT_MONTH DATE, LINE_ITEMS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONTHLY_COST_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, TENANT_ID STRING, MONTH DATE, ALLOC_JSON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MONTHLY_STORAGE_BILLING ( BILL_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, AMOUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.MOTION_LOGS_06 ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, MOTION_TYPE STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MTLS_PEER_REGISTRY ( PEER_ID STRING PRIMARY KEY, NAME STRING, CRED_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MULTILANGUAGE_QUALITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, IDX_ID STRING, LOCALE STRING, ISSUE_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTILINGUAL_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_LANG STRING, TARGET_LANG STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTILINGUAL_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSLATED_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTIMEDIA_INDEX_METRICS ( METRIC_ID STRING PRIMARY KEY, INDEX_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTIMEDIA_PROCESSING_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TYPE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MULTIMEDIA_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTIPART_UPLOAD_PARTS ( PART_ID STRING PRIMARY KEY, UPLOAD_ID STRING, PART_NO INT, ETAG STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTIPART_UPLOAD_REGISTRY ( UPLOAD_ID STRING PRIMARY KEY, OBJECT_KEY STRING, PARTS VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTISIG_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, RUN_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.MULTISIG_POLICY_DEFINITIONS ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTITENANT_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTITENANT_CONFIG ( CONFIG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG_KEY STRING, CONFIG_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTITENANT_FEATURE_USAGE ( USG_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_KEY STRING, USAGE_COUNT NUMBER, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MULTITENANT_TEMPLATE_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, IS_SHARED BOOLEAN, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTI_CURRENCY_INVOICE_LINES ( LINE_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT_BASE NUMBER, AMOUNT_LOCAL NUMBER, CURRENCY STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTI_REGION_CONFIG ( CONFIG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REGION STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTI_SIGN_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MULTI_TENANT_ISOLATION_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TENANT_ID STRING, ISOLATION_CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.MV_REFRESH_JOBS ( JOB_ID STRING PRIMARY KEY, MV_ID STRING, SCHEDULE_CRON STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MV_REFRESH_LOG ( REFRESH_ID STRING PRIMARY KEY, MV_NAME STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.NETWORK_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NONCE_REVOCATION_LIST ( REV_ID STRING PRIMARY KEY, NONCE_HASH STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.NONCE_STORE_05 ( NONCE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NONCE STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NON_REPUDIATION_EVIDENCE ( EVID_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROOF_JSON VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_ACTIONS ( ACTION_ID STRING PRIMARY KEY, NOTARY_ID STRING, REQUEST_ID STRING, ACTION_STRING STRING, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, NOTARY_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_CERT_INDEX ( INDEX_ID STRING PRIMARY KEY, NOTARY STRING, CERT_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_EVENTS ( EVENT_ID STRING PRIMARY KEY, NOTARY_ID STRING, EVENT JSON, OCCURRED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, NOTARY_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_LOGS ( LOG_ID STRING PRIMARY KEY, NOTARY_REQ_ID STRING, EVENT STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_LOGS ( LOG_ID STRING PRIMARY KEY, NREQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_RECORDS_09 ( NOTARY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NOTARY_NAME STRING, CERT_REF STRING, SIGNED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_REGISTRY ( NOTARY_ID STRING PRIMARY KEY, NAME STRING, LICENSE_INFO VARIANT, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_REQUESTS ( NOTARY_REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_REQUESTS ( NREQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', META VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_SERVICE_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NOTARY_PROVIDER STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTARY_SERVICE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTICES_03 ( NOTICE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NOTICE_TYPE STRING, SENT_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTICE_EVENTS ( NOTICE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NOTICE_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATIONS_07 ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT VARIANT, CONTEXT VARIANT, STATUS STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, TEMPLATE_ID STRING, RECIPIENT STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING, LOG JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_BACKOFF_LOGS_6325 ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_BACKOFF_RULES_6324 ( RULE_ID STRING PRIMARY KEY, CHANNEL STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_BOUNCE_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, REASON CLOB, BOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_CHANNEL_CONFIG ( CHANNEL_ID STRING PRIMARY KEY, CHANNEL_NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_CHANNEL_METRICS ( METRIC_ID STRING PRIMARY KEY, CHANNEL_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_CHANNEL_REGISTRY ( CHANNEL_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_CHANNEL_REGISTRY ( CH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERIES_07 ( DELIVERY_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING, RESPONSE VARIANT, DELIVERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, CHANNEL STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, NOTIF_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, STATUS STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, PROVIDER STRING, RESPONSE VARIANT, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DELIVERED INT, FAILED INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_METRICS ( MET_ID STRING PRIMARY KEY, CHANNEL STRING, SUCCESS_RATE NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_QUEUE ( Q_ID STRING PRIMARY KEY, CHANNEL_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, RESPONSE_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_STATS ( STAT_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, DELIVERED BOOLEAN, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_STATS ( STAT_ID STRING PRIMARY KEY, RUN_ID STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANNEL STRING, SENT_COUNT INT, FAILED_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DELIVERY_STATS_6323 ( STAT_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, ATTEMPTS INT, SUCCEEDED BOOLEAN, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_HISTORY ( H_ID STRING PRIMARY KEY, NOTIF_ID STRING, DISPATCH_JSON VARIANT, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGETS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_LOGS ( LOG_ID STRING PRIMARY KEY, WORKER_ID STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_LOG_12 ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, STATUS STRING, RESPONSE VARIANT, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_METRICS ( METRIC_ID STRING PRIMARY KEY, RULE_ID STRING, SENT INT, FAILED INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_DISPATCH_WORKERS ( WORKER_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_EFFECTIVENESS ( EFFECT_ID STRING PRIMARY KEY, RULE_ID STRING, SENT INT, CLICKED INT, CONVERSION_RATE NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_FAILURE_PATTERNS ( PATTERN_ID STRING PRIMARY KEY, CHANNEL STRING, PATTERN_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_FRAUD_FLAGS ( FLAG_ID STRING PRIMARY KEY, NOTIF_ID STRING, REASON STRING, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_HISTORY ( NH_ID STRING PRIMARY KEY, NOTIF_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_HISTORY ( NH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_HISTORY ( NH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ, RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_HISTORY_12 ( NH_ID STRING PRIMARY KEY, PREF_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_OPT_OUTS ( OPT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHANNEL STRING, OPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_OPT_OUT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OPT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PERF_INDEX_6156 ( IDX_ID STRING PRIMARY KEY, CHANNEL STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PERF_LOGS_6157 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFERENCES_10 ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFERENCES_12 ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFERENCES_12 ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFERENCES_HISTORY ( HP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREFS VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PREFS_HISTORY ( H_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFS VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_PROVIDER_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_QUARANTINE ( Q_ID STRING PRIMARY KEY, NOTIF_ID STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_QUEUE ( NQ_ID STRING PRIMARY KEY, TARGET STRING, CHANNEL STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_QUEUE_12 ( NOTIF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, TENANT_ID STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RATE_LIMITS ( NRL_ID STRING PRIMARY KEY, CHANNEL_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RETRY_HISTORY ( RETRY_ID STRING PRIMARY KEY, NOTIF_ID STRING, ATTEMPT INT, STATUS STRING, TRIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, NOTIF_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPT_COUNT INT DEFAULT 0, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, POLICY_ID STRING, MATCH_COND VARIANT, ROUTE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, TARGET_CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_RULE_HITS ( HIT_ID STRING PRIMARY KEY, RULE_ID STRING, REQUEST_REF STRING, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_SEND_LOG ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_STATS ( STAT_ID STRING PRIMARY KEY, RULE_ID STRING, SENT_INT INT, FAILED_INT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, CHANNEL STRING, SUBJECT STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, CHANNEL STRING, SUBJECT STRING, BODY CLOB, LOCALE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, TEMPLATE_BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATES_07 ( TEMPLATE_ID STRING PRIMARY KEY, CHANNEL STRING, SUBJECT STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATE_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NOTIF_TEMPLATE_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATE_INDEX_6152 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATE_LOGS_6153 ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATE_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_THROTTLE_COUNTERS ( CNT_ID STRING PRIMARY KEY, PROFILE_ID STRING, WINDOW_START TIMESTAMP_LTZ, COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.NOTIFICATION_THROTTLE_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIF_DISPATCH_METRICS ( MET_ID STRING PRIMARY KEY, CHANNEL STRING, SENT INT, FAILED INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.NOTIF_TEMPLATE_CATALOG ( TPL_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIF_TEMPLATE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, TPL_ID STRING, CHANGED_BY STRING, DIFF VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.NOTIF_TEMPLATE_USAGE ( USAGE_ID STRING PRIMARY KEY, TPL_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_AUTHORIZATIONS ( AUTH_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT_REF STRING, SCOPE STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENTS ( CLIENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CLIENT_NAME STRING, REDIRECT_URIS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENTS ( CLIENT_ID STRING PRIMARY KEY, APP_ID STRING, SECRET_HASH STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENTS ( CLIENT_ID STRING PRIMARY KEY, NAME STRING, REDIRECT_URIS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENTS_05 ( CLIENT_ID STRING PRIMARY KEY, NAME STRING, REDIRECT_URIS ARRAY, SCOPES ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENTS_13 ( CLIENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CLIENT_METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENT_REGISTRY ( CLIENT_ID STRING PRIMARY KEY, CLIENT_NAME STRING, REDIRECT_URIS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENT_REGISTRY ( CLIENT_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CLIENT_REGISTRY ( CLIENT_ID STRING PRIMARY KEY, TENANT_ID STRING, CLIENT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_CONSENT_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT_REF STRING, SCOPE VARIANT, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_INTEGRATION_REGISTRY ( INTEGRATION_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_REVOCATIONS_13 ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKENS ( TOKEN_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKENS ( TOKEN_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PROVIDER STRING, TOKEN_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKENS_13 ( TOKEN_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT STRING, SCOPE STRING, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKEN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKEN_CACHE ( TOKEN_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, TOKEN_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKEN_REVOCATION ( REV_ID STRING PRIMARY KEY, TOKEN_REF STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.OAUTH_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_HASH STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.OBFUSCATION_RULES_04 ( RULE_ID STRING PRIMARY KEY, NAME STRING, PATTERN STRING, REPLACEMENT STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.OBJECT_LOCKS ( LOCK_ID STRING PRIMARY KEY, OBJECT_REF STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OBJECT_LOCKS_02 ( LOCK_ID STRING PRIMARY KEY, OBJECT_REF STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OBLIGATION_COVERAGE_JOBS ( JOB_ID STRING PRIMARY KEY, OBL_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OBLIGATION_COVERAGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, COVERAGE JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_CONFIDENCE_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, CONFIDENCE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_ENGINE_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, ENGINE_NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_ENGINE_HISTORY ( HIST_ID STRING PRIMARY KEY, ENGINE_NAME STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_ERRORS ( ERROR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_EXTRACTION_INDEX_6041 ( EX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, OCR_JSON VARIANT, EXTRACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_INDEX ( IDX_ID STRING PRIMARY KEY, OCR_ID STRING, KEYWORDS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_INGEST_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_INGEST_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_JOBS ( JOB_ID STRING PRIMARY KEY, PDF_ID STRING, STATUS STRING, ATTEMPTS INT DEFAULT 0, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_LOGS_6042 ( LOG_ID STRING PRIMARY KEY, EX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_MANUAL_REVIEW_QUEUE ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_METRICS ( MET_ID STRING PRIMARY KEY, JOB_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_OUTPUTS ( OCR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PAGE_NUMBER INT, TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, CORRECTION CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_SEARCH_METRICS ( MET_ID STRING PRIMARY KEY, QUERY_TEXT STRING, LATENCY_MS NUMBER, RESULT_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_SEARCH_QUERIES ( Q_ID STRING PRIMARY KEY, QUERY_TEXT STRING, RESULT_REF STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_TEXT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE_NUMBER INT, OCR_TEXT CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_TEXT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE_NUMBER INT, TEXT CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCR_WORKER_HISTORY ( H_ID STRING PRIMARY KEY, JOB_ID STRING, WORKER STRING, DURATION_MS NUMBER, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE ( CACHE_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RAW_RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE ( CERT_FP STRING PRIMARY KEY, OCSP_STATUS STRING, RESP_JSON VARIANT, FRESH_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE ( OCSP_ID STRING PRIMARY KEY, CERT_FP STRING, OCSP_RESPONSE VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE ( OCSP_ID STRING PRIMARY KEY, CERT_SERIAL STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE_06 ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_RESPONSE VARIANT, Fetched_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE_09 ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE_PRUNE_JOBS ( JOB_ID STRING PRIMARY KEY, SCHEDULE JSON, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CACHE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PAYLOAD VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CHECK_CACHE ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_CHECK_HISTORY ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_RESPONSE VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_FAILURE_INDEX ( FAIL_ID STRING PRIMARY KEY, CERT_ID STRING, ERROR_MSG STRING, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLLING_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLLING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLLING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_HISTORY ( POLL_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_HISTORY ( POLL_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, RESPONSE_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, SCHEDULE_CRON STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', LAST_POLLED_AT TIMESTAMP_LTZ, RETRY_COUNT INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, LAST_POLLED_AT TIMESTAMP_LTZ, NEXT_POLL_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_CERTS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_LOGS ( LOG_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, RESPONSE VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_QUEUE ( POLL_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, NEXT_POLL_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( POLL_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RESULT_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, RESPONSE VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RESULT_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, RAW VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RESULT_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, RESPONSE_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RES_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, CERT_ID STRING, STATUS STRING, RESP_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, CERT_ID STRING, STATUS STRING, RESP_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, RESPONSE VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, UPDATED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CERT_ID STRING, NEXT_POLL_AT TIMESTAMP_LTZ, FREQUENCY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CERT_ID STRING, NEXT_POLL_AT TIMESTAMP_LTZ, INTERVAL_SECONDS INT );

CREATE OR REPLACE TABLE DOCGEN.OCSP_POLL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CERT_ID STRING, NEXT_POLL_AT TIMESTAMP_LTZ, POLL_INTERVAL_SECONDS INT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.OCSP_RESPONSES ( OCSP_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, OCSP_STATUS STRING, OCSP_RAW VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_RESPONSE_CACHE ( CACHE_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_JSON VARIANT, FRESH_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_RESPONSE_CACHE ( CACHE_ID STRING PRIMARY KEY, CERT_ID STRING, RESPONSE_JSON VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_RESPONSE_CACHE_6206 ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, RESPONSE_JSON VARIANT, FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_RESPONSE_LOGS_6207 ( LOG_ID STRING PRIMARY KEY, OCSP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_REVOCATION_INDEX ( INDEX_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OCSP_STATUS ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, RESPONSE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OCSP_STATUS ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OFFLINE_SIGNATURE_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OFFLINE_SIGNATURE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, PROVIDER_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OFFLINE_VERIFICATIONS_10 ( VERIF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, METHOD STRING, RESULT STRING, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OIDC_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT STRING, TOKEN_PAYLOAD VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_ACTIVITY_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIVITY JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP STRING, STATUS STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_BLOCKERS ( BLOCKER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DESCRIPTION CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'OPEN' );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_BLOCKER_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, BLOCKER_ID STRING, RESOLUTION_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_CHECKLIST_ACTIVITY ( ACT_ID STRING PRIMARY KEY, INSTANCE_ID STRING, ITEM_REF STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_CHECKLIST_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_CHECKLIST_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_COMPLETION_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_COMPLETION_HISTORY ( H_ID STRING PRIMARY KEY, Q_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_COMPLETION_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_COMPLETION_Q ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTRACT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_EXPERIENCE_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_HEALTH_CHECK ( HC_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, CHECK_JSON VARIANT, LAST_PASSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, HEALTH_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_ISSUE_RESULTS ( RES_ID STRING PRIMARY KEY, ISSUE_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_KPI_REGISTRY ( KPI_ID STRING PRIMARY KEY, TENANT_ID STRING, KPI_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_KPI_RESULTS ( RES_ID STRING PRIMARY KEY, KPI_ID STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP STRING, STATUS STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_INDEX ( PROG_ID STRING PRIMARY KEY, TENANT_ID STRING, STAGE STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP_NAME STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, STAGE STRING, PCT_COMPLETE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP STRING, PROGRESS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_PROGRESS_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, PROGRESS_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_QA_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_RECOMMENDATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_RECOMMENDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RECOMMENDATIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_RESOLUTION_LOGS ( LOG_ID STRING PRIMARY KEY, ISSUE_ID STRING, RESOLVER STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_NAME STRING, MESSAGE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_STATUS_INDEX ( STATUS_ID STRING PRIMARY KEY, TENANT_ID STRING, STAGE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_STEP_DEFINITIONS ( STEP_ID STRING PRIMARY KEY, NAME STRING, SEQUENCE INT, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_STEP_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_STEP_RUNS ( RUN_ID STRING PRIMARY KEY, STEP_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_TASK_QUEUE ( TASK_ID STRING PRIMARY KEY, TENANT_ID STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESULT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_TASK_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONBOARDING_TASK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONBOARD_TENANT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, BY_WHOM STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ACK_LOG ( ACK_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACK_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ALERT_HISTORY ( ALERT_ID STRING PRIMARY KEY, ROSTER_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ALERT_RESPONSES ( RESP_ID STRING PRIMARY KEY, ALERT_ID STRING, OPERATOR_REF STRING, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ASSIGNMENT_LOG ( LOG_ID STRING PRIMARY KEY, OPERATOR STRING, SHIFT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_COVERAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, COVERAGE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_EFFICIENCY_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM_REF STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, SCHED_ID STRING, INCIDENT_REF STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, SHIFT_ID STRING, INCIDENT_ID STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_REF STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATION_JSON VARIANT, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_EVENTS_05 ( EVENT_ID STRING PRIMARY KEY, ROTATION_ID STRING, SUBJECT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_HANDOFF_LOGS ( LOG_ID STRING PRIMARY KEY, ROT_ID STRING, HANDOFF_JSON VARIANT, HANDOFF_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_HANDOFF_NOTES ( NOTE_ID STRING PRIMARY KEY, SHIFT_ID STRING, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_HISTORY ( H_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_HISTORY ( H_ID STRING PRIMARY KEY, SCHED_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_INCIDENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_INCIDENT_HANDLING ( HANDLING_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, ACTION JSON, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_PERFORMANCE_METRICS ( METRIC_ID STRING PRIMARY KEY, OP_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, NAME STRING, MEMBERS VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, PRIMARY_CONTACT BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, ROLE STRING );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROSTERS_07 ( ROSTER_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROTATIONS_05 ( ROTATION_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, TIMEZONE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_ROTATION_METRICS ( MET_ID STRING PRIMARY KEY, ROTATION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCALL_SHIFT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCHAIN_ANCHOR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONCHAIN_ANCHOR_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN STRING, TX_HASH STRING, ANCHORED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ONCHAIN_ANCHOR_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TXID STRING, NETWORK STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONE_TIME_LINKS ( LINK_ID STRING PRIMARY KEY, TARGET_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ONE_TIME_LINK_USES ( USE_ID STRING PRIMARY KEY, LINK_ID STRING, USED_BY STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPENID_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPENID_CLIENTS ( CLIENT_ID STRING PRIMARY KEY, NAME STRING, JWKS CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_ANNOTATIONS ( ANNOTATION_ID STRING PRIMARY KEY, ENTITY_REF STRING, ANNOTATION_TEXT STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CERTIFICATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, CERT_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CERTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, ASSIGN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CHANGE_LOG ( CHANGE_ID STRING PRIMARY KEY, AREA STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, LAST_RUN TIMESTAMP_LTZ, RESULT VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CHECKS_12 ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_CONTINUITY_INDEX ( IDX_ID STRING PRIMARY KEY, SERVICE_REF STRING, CONTINUITY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_COSTS_BY_TEAM ( COST_ID STRING PRIMARY KEY, TEAM_REF STRING, COST_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_IMPROVEMENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, SOURCE_REF STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_ISSUES_REGISTRY ( ISSUE_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_ISSUE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ISSUE_ID STRING, ACTION JSON, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_ISSUE_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_KPIS ( KPI_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_KPI_ACHIEVEMENTS ( ACH_ID STRING PRIMARY KEY, KPI_ID STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_KPI_ALERTS ( ALERT_ID STRING PRIMARY KEY, KPI_ID STRING, THRESHOLD JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_KPI_DASHBOARD ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_KPI_TARGETS ( KPI_ID STRING PRIMARY KEY, NAME STRING, TARGET_JSON VARIANT, EFFECTIVE_FROM DATE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_METRICS ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE NUMBER, TAGS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_METRICS ( MET_ID STRING PRIMARY KEY, NAME STRING, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VALUE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_METRICS_12 ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_NOTES ( NOTE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOK_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, PB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOK_INDEX ( PB_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOK_LINKS ( LINK_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, URL STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, EXEC_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, AREA STRING, CHECK_JSON VARIANT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, COMPONENT_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_METRICS ( MET_ID STRING PRIMARY KEY, AREA STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_READINESS_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_README_INDEX ( README_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_REVIEW_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, REVIEW_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_REVIEW_NOTES ( NOTE_ID STRING PRIMARY KEY, REVIEW_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RISK_EVENTS ( EVENT_ID STRING PRIMARY KEY, RISK_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RISK_METRICS ( METRIC_ID STRING PRIMARY KEY, RISK_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RISK_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, AREA STRING, RISK_JSON VARIANT, MITIGATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, MITIGATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_ROSTER_INDEX ( ROSTER_ID STRING PRIMARY KEY, TEAM_REF STRING, SCHEDULE JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOKS_INDEX ( RB_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_CHANGES ( CHANGE_ID STRING PRIMARY KEY, RB_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_INDEX ( RB_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_INDEX ( RUN_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUNBOOK_VERSIONS ( VERSION_ID STRING PRIMARY KEY, RUNBOOK_NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUN_METRICS ( METRIC_ID STRING PRIMARY KEY, RUN_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2851_signature_template_tag_index.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_RUN_METRICS ( METRIC_ID STRING PRIMARY KEY, RUN_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2851_signature_template_tag_index.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATIONAL_SCORECARDS ( SCORECARD_ID STRING PRIMARY KEY, NAME STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, MODULE STRING, LEVEL STRING, MESSAGE STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_LOGS ( OP_ID STRING PRIMARY KEY, SUBJECT STRING, OPERATION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATION STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_PLAYBACK_INDEX ( IDX_ID STRING PRIMARY KEY, OP_REF STRING, PAYLOAD VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_PLAYBACK_JOBS ( JOB_ID STRING PRIMARY KEY, IDX_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_PLAYBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_QUEUES ( QUEUE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_QUEUES ( Q_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_TASKS ( TASK_ID STRING PRIMARY KEY, QUEUE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_TASK_LOGS ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATION_TELEMETRY ( TELE_ID STRING PRIMARY KEY, SCOPE STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACCESS_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACCESS_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACCESS_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STATUS STRING, REVIEWED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACCESS_REVOCATION ( REV_ID STRING PRIMARY KEY, OPERATOR STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACKNOWLEDGEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ITEM_REF STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACKS ( ACK_ID STRING PRIMARY KEY, OPERATOR STRING, TARGET_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIONS ( ACTION_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION STRING, TARGET STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIONS ( ACTION_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION STRING, TARGET_REF STRING, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIONS_12 ( ACTION_ID STRING PRIMARY KEY, EXEC_ID STRING, OPERATOR STRING, STEP STRING, RESULT VARIANT, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_APPROVAL_QUEUE ( Q_ID STRING PRIMARY KEY, ACTION JSON, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_FEEDBACK ( FB_ID STRING PRIMARY KEY, RUN_ID STRING, RATING NUMBER, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_HISTORY ( ACTION_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_HISTORY ( AH_ID STRING PRIMARY KEY, ACTION_ID STRING, OPERATOR STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, OPERATOR_REF STRING, TASK_JSON VARIANT, DUE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, OP_REF STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_ITEM_RESULTS ( RES_ID STRING PRIMARY KEY, ITEM_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_QUEUE ( ACTION_ID STRING PRIMARY KEY, OP_REF STRING, ACTION JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_RESULTS ( RESULT_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, ACTION_REF STRING, REVIEWER STRING, OUTCOME STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_RUNS ( RUN_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OPERATOR_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, ACTION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY ( ACT_ID STRING PRIMARY KEY, OPERATOR_ID STRING, ACTION STRING, ENTITY_REF STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY ( OP_ID STRING PRIMARY KEY, OP_USER STRING, ACTION STRING, CONTEXT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_HEATMAP ( HEAT_ID STRING PRIMARY KEY, OP_REF STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_LEADERBOARD ( LB_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, SCORES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_LOG ( ACT_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION STRING, CONTEXT VARIANT, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_LOGS_6177 ( LOG_ID STRING PRIMARY KEY, MET_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_METRICS_6176 ( MET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, OP_REF STRING, CONTENT CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_SESSIONS ( SESSION_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ACTIVITY_TIMELINES ( TIMELINE_ID STRING PRIMARY KEY, OP_REF STRING, ACTIVITY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ADHERENCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ALERT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ALERT_CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, OPERATOR_ID STRING, ROLE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ASSIGNMENTS_12 ( ASSIGN_ID STRING PRIMARY KEY, OPERATOR STRING, ROLE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ASSIGNMENT_LOG ( LOG_ID STRING PRIMARY KEY, OPERATOR STRING, ENTITY_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ASSIGNMENT_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, ASSIGNED_BY STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, DETAILS VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_05 ( AUDIT_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION STRING, TARGET_REF STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, TITLE STRING, ITEMS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, CHECKLIST_ID STRING, OP_REF STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_SCORECARD ( SCORE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SCORES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_SCORES ( SCORE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, TIMESTAMP_LTZ TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AUDIT_TRAIL_12 ( AUDIT_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION STRING, TARGET STRING, DETAILS VARIANT, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, OP_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_CALENDAR ( CAL_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, AVAILABILITY JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_CALENDAR ( CAL_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, AVAILABILITY VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, AVAILABLE_FROM TIMESTAMP_LTZ, AVAILABLE_TO TIMESTAMP_LTZ, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, AVAILABLE_PCT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REQUEST_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_AVAILABILITY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TEAM_REF STRING, AVAIL_JSON VARIANT, SNAP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_BACKGROUND_CHECKS ( CHECK_ID STRING PRIMARY KEY, OPERATOR STRING, PROVIDER STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_BACKUP_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, OP_REF STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, THRESHOLD JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, OP_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PLAN_ID STRING, MESSAGE CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_EVENTS ( EVT_ID STRING PRIMARY KEY, OPERATOR STRING, EVENT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_FORECAST ( FCST_ID STRING PRIMARY KEY, OPERATOR_REF STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_FORECASTS ( FC_ID STRING PRIMARY KEY, PERIOD JSON, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, OPERATOR_REF STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_MODELS ( MODEL_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_PLANNING ( PCP_ID STRING PRIMARY KEY, OPERATOR STRING, FORECAST VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, OP_REF STRING, PLAN JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, TEAM_REF STRING, CAPACITY_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_USAGE ( USAGE_ID STRING PRIMARY KEY, PLAN_ID STRING, DATE_DAY DATE, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CAPACITY_USAGES ( USAGE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CASE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, CASE_REF STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CASE_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CASE_NOTES ( NOTE_ID STRING PRIMARY KEY, RES_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CASE_WORKFLOW ( CASE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CURRENT_STEP STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CASE_WORKLOGS ( LOG_ID STRING PRIMARY KEY, CASE_REF STRING, OPERATOR_REF STRING, WORK_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, CERT_NAME STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, CERT_NAME STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, OP_REF STRING, CERT_NAME STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, CERT_REQ_ID STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, OP_REF STRING, CERT_ID STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT JSON );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_CHECKS ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_INDEX ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_ID STRING, ISSUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_MATRIX ( MAT_ID STRING PRIMARY KEY, OP_REF STRING, CERTS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_OUTCOMES ( OUT_ID STRING PRIMARY KEY, PROG_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_PROGRESS ( PROG_ID STRING PRIMARY KEY, OP_REF STRING, REQ_ID STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_RECORDS ( REC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_NAME STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REGISTRY ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REGISTRY ( CERT_ID STRING PRIMARY KEY, OP_REF STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REGISTRY ( CERT_ID STRING PRIMARY KEY, OP_REF STRING, CERT_TYPE STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REGISTRY_6112 ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_RENEWAL_JOBS ( JOB_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_RENEWAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, NAME STRING, MODULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, ROLE STRING, REQUIREMENTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, ROLE STRING, REQUIREMENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, CERT_ID STRING, OPERATOR_REF STRING, PASSED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, CERT_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERTIFICATION_STATUS ( CERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CERT_NAME STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERT_LOGS_6113 ( LOG_ID STRING PRIMARY KEY, CERT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERT_RESULTS ( RES_ID STRING PRIMARY KEY, CERT_ID STRING, RESULT_VARIANT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERT_REVOCATION ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CERT_REVOC_HISTORY ( H_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COACHING_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COACHING_NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COACHING_NOTES ( NOTE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COACHING_QUEUE_6297 ( COACH_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ISSUE JSON, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COACHING_RESULTS ( RES_ID STRING PRIMARY KEY, SESSION_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COACHING_SESSIONS ( SESSION_ID STRING PRIMARY KEY, OP_REF STRING, TOPICS VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMMAND_TELEMETRY ( TELE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COMMAND JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_INDEX ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COMPETENCIES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_INDEX ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/401_signature_request_history.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/401_signature_request_history.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPETENCY_SCORES ( SCORE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, DETAILS VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, OPERATOR_REF STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, OP_REF STRING, CHECK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OPERATOR STRING, REVIEWER STRING, RESULT JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COMPLIANCE_SCORES ( SCORE_ID STRING PRIMARY KEY, OPERATOR STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CONFIG ( CONFIG_KEY STRING PRIMARY KEY, CONFIG_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, NAME STRING, CHANNELS VARIANT, ONCALL BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CONTACTS ( OP_CONTACT_ID STRING PRIMARY KEY, OPERATOR STRING, CONTACT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_COST_CENTER_MAPPING ( MAP_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COST_CENTER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_INDEX_6372 ( CRED_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_LOGS_6082 ( LOG_ID STRING PRIMARY KEY, CRED_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_LOGS_6373 ( LOG_ID STRING PRIMARY KEY, CRED_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_REGISTRY_6081 ( CRED_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CRED_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_ROTATION ( ROT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, LAST_ROTATED_AT TIMESTAMP_LTZ, NEXT_ROTATION_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, CRED_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, OPERATOR STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, OP_REF STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_CRED_ROTATION ( ROT_ID STRING PRIMARY KEY, OPERATOR STRING, CRED_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_EFFICIENCY_INDEX_6110 ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, EFFICIENCY_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_EFFICIENCY_LOGS_6111 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_EFFICIENCY_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_EFFICIENCY_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ENGAGEMENT_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_LOG ( ESC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATED_BY STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_LOG ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, OPERATOR STRING, ACTION_TAKEN STRING, NOTES VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_LOG ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, ESCALATED_TO STRING, REASON CLOB, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, LEVEL INT, OWNER_TEAM STRING, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK ( FB_ID STRING PRIMARY KEY, OPERATOR STRING, CONTEXT VARIANT, RATING INT, COMMENTS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_12 ( FEEDBACK_ID STRING PRIMARY KEY, OPERATOR STRING, CONTEXT VARIANT, FEEDBACK TEXT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_ACTIONS ( ACTION_ID STRING PRIMARY KEY, FB_ID STRING, ASSIGNED_TO STRING, STATUS STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_LOGS ( FB_ID STRING PRIMARY KEY, OPERATOR_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_LOOP ( FB_ID STRING PRIMARY KEY, OP_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_QUEUE ( FEED_ID STRING PRIMARY KEY, OPERATOR STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, OP_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_REGISTRY ( FB_ID STRING PRIMARY KEY, OP_REF STRING, FEEDBACK JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FEED_ID STRING, HANDLED_BY STRING, OUTCOME VARIANT, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, SURVEY_ID STRING, ANALYSIS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_SUMMARIES ( SUM_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SUMMARY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FEEDBACK_SUMMARY_MV ( MV_ID STRING PRIMARY KEY, OPERATOR_REF STRING, AGG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_FOLLOWUP_RESULTS ( RES_ID STRING PRIMARY KEY, ITEM_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_GUIDANCE_FEEDBACK ( FB_ID STRING PRIMARY KEY, SNIP_ID STRING, OP_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_GUIDANCE_SNIPPETS ( SNIP_ID STRING PRIMARY KEY, TOPIC STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_HANDOFF_RECORDS_6106 ( HANDOFF_ID STRING PRIMARY KEY, FROM_OPERATOR STRING, TO_OPERATOR STRING, HANDOFF_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_HELPDESK_TICKETS ( TICKET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SUBJECT STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCENTIVE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROGRAM_ID STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCENTIVE_PROGRAMS ( PROGRAM_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OP_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ASSIGNMENT_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ASSIGNED_TO STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_BOT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_CORRELATION ( CORR_ID STRING PRIMARY KEY, INCIDENT_IDS ARRAY, CORRELATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, FROM_OPERATOR STRING, TO_OPERATOR STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ESCALATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ESCALATION_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, SEVERITY STRING, ESCALATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_FEEDBACK ( FB_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR STRING, FEEDBACK TEXT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_KPIS ( KPI_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, SEVERITY STRING, MESSAGE CLOB, LOG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, INCIDENT_COUNT INT, AVG_RESPONSE_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_METRICS ( MET_ID STRING PRIMARY KEY, PLAY_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_NOTES ( NOTE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, NOTE CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_NOTES ( NOTE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OP_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, INCIDENT_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_OWNERSHIP ( OWN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OWNER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, TITLE STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOKS ( PLAY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PB_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_PRIORITIES ( PRIORITY_ID STRING PRIMARY KEY, INCIDENT_ID STRING, PRIORITY_LEVEL STRING, SCORE NUMBER, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, DESCRIPTION CLOB, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSE ( RESP_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSES ( RESPONSE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR STRING, RESPONSE TEXT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSE_LOGS ( LOG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSE_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, INCIDENT_ID STRING, ACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSE_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, INCIDENT_ID STRING, RESPONSE_TIME_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RESPONSE_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_RETROSPECTIVES ( RETRO_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTION_ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_ROSTER_6289 ( ROSTER_ID STRING PRIMARY KEY, INCIDENT_ID STRING, OPERATOR_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INCIDENT_STATS ( STAT_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD JSON, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_INSIGHTS_DASHBOARD ( DASH_ID STRING PRIMARY KEY, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KB ( KB_ID STRING PRIMARY KEY, TITLE STRING, CONTENT CLOB, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KB_FEEDBACK ( FB_ID STRING PRIMARY KEY, KB_ID STRING, OPERATOR_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPIS ( KPI_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPI_DAILY ( KPI_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, DAY DATE, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPI_INDEX ( KPI_ID STRING PRIMARY KEY, OPERATOR_REF STRING, KPI_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPI_RESULTS ( RESULT_ID STRING PRIMARY KEY, OPERATOR STRING, KPI_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPI_TARGETS ( TARGET_ID STRING PRIMARY KEY, OPERATOR STRING, KPI JSON, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_KPI_WEEKLY ( KPI_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, WEEK_START DATE, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_MESSAGE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_MESSAGING_QUEUE ( MSG_ID STRING PRIMARY KEY, TO_OP STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', QUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_MESSAGING_RESULTS ( RES_ID STRING PRIMARY KEY, MSG_ID STRING, DELIVERED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES ( NOTE_ID STRING PRIMARY KEY, CONTEXT_ID STRING, NOTE_TEXT STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES ( NOTE_ID STRING PRIMARY KEY, OPERATOR_ID STRING, NOTE_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES ( NOTE_ID STRING PRIMARY KEY, OP_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_03 ( NOTE_ID STRING PRIMARY KEY, TARGET_REF STRING, OPERATOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_07 ( NOTE_ID STRING PRIMARY KEY, OP_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_12 ( NOTE_ID STRING PRIMARY KEY, OPERATOR STRING, CONTEXT VARIANT, NOTE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_ARCHIVE ( ARCH_ID STRING PRIMARY KEY, NOTE_ID STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_INDEX ( IDX_ID STRING PRIMARY KEY, NOTE_ID STRING, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_METRICS ( MET_ID STRING PRIMARY KEY, NOTE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_REGISTRY ( NOTE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_REGISTRY ( NOTE_ID STRING PRIMARY KEY, OP_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_SEARCH_INDEX ( IDX_ID STRING PRIMARY KEY, NOTE_ID STRING, TEXT_SEARCH STRING, TAGS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTES_SEARCH_INDEX ( IDX_ID STRING PRIMARY KEY, NOTE_ID STRING, TOKENS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_NOTIFICATIONS_12 ( NOTIF_ID STRING PRIMARY KEY, OPERATOR STRING, MESSAGE STRING, SEEN BOOLEAN DEFAULT FALSE, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ITEM STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, STAGE STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_PROGRESS ( PROG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STEP_REF STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_REGISTRY ( REG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STARTED_AT TIMESTAMP_LTZ, STATUS STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_STATUS ( STATUS_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STEP STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, OP_REF STRING, TASK JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL ( ONCALL_ID STRING PRIMARY KEY, OPERATOR STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ACK ( ACK_ID STRING PRIMARY KEY, SHIFT_ID STRING, OP_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ROTATION_ID STRING, OP_REF STRING, ASSIGNED_FROM TIMESTAMP_LTZ, ASSIGNED_TO TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, SCHED_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_CONTACT_INDEX ( CNT_ID STRING PRIMARY KEY, OP_REF STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_HISTORY ( HISTORY_ID STRING PRIMARY KEY, OP_REF STRING, WINDOW_ID STRING, ACTION STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, INCIDENT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OPERATOR STRING, START_DATE TIMESTAMP_LTZ, END_DATE TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, SHIFT_JSON VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, TEAM_REF STRING, WEEK_OF DATE, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTA ( ROTA_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTA ( ROTA_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTATIONS ( ROTATION_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTATIONS ( ROTATION_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, TEAM_REF STRING, SCHEDULE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, TIMEZONE STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, TEAM_REF STRING, ONCALL_JSON VARIANT, EFFECTIVE_FROM DATE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, ROTA_ID STRING, FROM_OP STRING, TO_OP STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ONCALL_SWAP_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PENALTY_LOG ( PEN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REASON CLOB, AMOUNT NUMBER, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR STRING, KPI STRING, THRESHOLD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, REFRESHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PERFORMANCE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, STATS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_INDEX ( PERF_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_LEADERBOARD ( LB_ID STRING PRIMARY KEY, PERIOD JSON, RANKINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_METRICS ( METRIC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PERIOD_START DATE, PERIOD_END DATE, SUMMARY CLOB, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REVIEW_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OP_REF STRING, REVIEWER STRING, SCORE NUMBER, COMMENTS CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_TARGETS ( TARGET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERFORMANCE_TARGETS_6122 ( TARGET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERF_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR STRING, METRIC JSON, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERF_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PERF_THRESHOLDS ( TH_ID STRING PRIMARY KEY, OPERATOR STRING, THRESHOLDS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PLAYBOOKS ( PB_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PLAYBOOK_LINKS ( LINK_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, OPERATOR_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_POLICY_OVERRIDE_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR_REF STRING, POLICY_ID STRING, REASON CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PRIV_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_PRODUCTIVITY_INDEX ( IDX_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QA_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, OP_REF STRING, ITEM_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QA_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QA_SCORES ( SCORE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, QA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SCORE NUMBER, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, OP_REF STRING, AUDIT_JSON VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TEAM_REF STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_INDEX ( IDX_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_RESULTS ( RES_ID STRING PRIMARY KEY, REVIEW_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_RESULTS ( RES_ID STRING PRIMARY KEY, REVIEW_ID STRING, SCORE NUMBER, DETAILS VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REVIEW_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUALITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, OP_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUAL_RESULTS ( RESULT_ID STRING PRIMARY KEY, TEST_ID STRING, OPERATOR STRING, SCORE NUMBER, PASSED BOOLEAN, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_QUAL_TESTS ( TEST_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RESOLUTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RESPONSE_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, THRESHOLD_MS NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RESPONSE_TIMES ( RECORD_ID STRING PRIMARY KEY, INCIDENT_ID STRING, RESPONSE_SECONDS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RESPONSE_TIMES ( RT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, AVERAGE_MS NUMBER, SAMPLE_COUNT INT, MEASURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RESPONSE_TIME_INDEX ( IDX_ID STRING PRIMARY KEY, OP_REF STRING, AVG_MS NUMBER, P95_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RETENTION_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RETENTION_RECORDS ( REC_ID STRING PRIMARY KEY, OPERATOR STRING, RECORD_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RETRAIN_HISTORY ( H_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RETRAIN_JOBS ( JOB_ID STRING PRIMARY KEY, OPERATOR STRING, REQ_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REVIEW_REASON STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REWARDS_LOG ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, REWARD_JSON VARIANT, AWARDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_REWARD_LOG ( REWARD_ID STRING PRIMARY KEY, OPERATOR_REF STRING, DETAILS VARIANT, AWARDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES ( ROLE_ID STRING PRIMARY KEY, ROLE_NAME STRING, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES ( ROLE_ID STRING PRIMARY KEY, ROLE_NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES_02 ( ROLE_ID STRING PRIMARY KEY, ROLE_NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES_03 ( ROLE_ID STRING PRIMARY KEY, ROLE_NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROLES_12 ( ROLE_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROTATION ( ROT_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROTATIONS ( ROT_ID STRING PRIMARY KEY, TEAM_REF STRING, ROTATION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROTA_CALENDAR ( ROTA_ID STRING PRIMARY KEY, OP_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROTA_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, ROT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_ROTA_METRICS ( METRIC_ID STRING PRIMARY KEY, ROTATION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, ALERT_TYPE STRING, RUNBOOK_URL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_METRICS ( MET_ID STRING PRIMARY KEY, SURVEY_ID STRING, METRICS VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_METRICS ( MET_ID STRING PRIMARY KEY, SURV_ID STRING, METRICS VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, OPERATOR_REF STRING, QUESTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_SURVEYS ( SURVEY_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SCORE NUMBER, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_SURVEYS ( SURV_ID STRING PRIMARY KEY, OPERATOR_REF STRING, RESPONSES VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SATISFACTION_SURVEYS ( SURV_ID STRING PRIMARY KEY, OP_REF STRING, SURVEY_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OP_REF STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, REQ_ID STRING, OLD_SCHEDULE VARIANT, NEW_SCHEDULE VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, ROTATION_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SCHEDULE_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SECRETS_ROT_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, OPERATOR STRING, SECRET_REF STRING, NEXT_ROTATE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SECRET_ROT_EVENTS ( EVT_ID STRING PRIMARY KEY, SCHED_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SESSIONS ( SESSION_ID STRING PRIMARY KEY, OPERATOR STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SESSIONS ( SESSION_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), END_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SESSIONS_12 ( SESSION_ID STRING PRIMARY KEY, OPERATOR STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SESSION_ACTIVITY ( ACT_ID STRING PRIMARY KEY, OPERATOR STRING, SESSION_REF STRING, ACTIVITY JSON, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, OPERATOR STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ACCEPTANCE ( ACCEPT_ID STRING PRIMARY KEY, SUG_ID STRING, OP_REF STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ALLOWANCES ( ALLOW_ID STRING PRIMARY KEY, OPERATOR_REF STRING, ALLOW_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ASSIGNMENTS ( SHIFT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_JSON VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ATTENDANCE ( ATT_ID STRING PRIMARY KEY, SHIFT_ID STRING, OPERATOR_REF STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SHIFT_ID STRING, OPERATOR_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SHIFT_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, OP_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, ROSTER_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9001_signature_sync_audit_queue.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, ROSTER_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9001_signature_sync_audit_queue.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CONFIRMATIONS ( CONF_ID STRING PRIMARY KEY, ROSTER_ID STRING, CONFIRMED_BY STRING, CONFIRMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, ROSTER_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, ROTATION_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_COVERAGE ( COVERAGE_ID STRING PRIMARY KEY, SHIFT_DATE DATE, COVERAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_COVERAGE ( COVER_ID STRING PRIMARY KEY, TEAM_REF STRING, DATE_DAY DATE, COVERAGE_JSON VARIANT, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_FEEDBACK ( FB_ID STRING PRIMARY KEY, HANDOVER_ID STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_FEEDBACK ( FB_ID STRING PRIMARY KEY, ROT_ID STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_FORECAST_METRICS ( MET_ID STRING PRIMARY KEY, ROSTER_ID STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_HANDOVERS ( HANDOVER_ID STRING PRIMARY KEY, FROM_OP STRING, TO_OP STRING, NOTES CLOB, HANDOVER_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_HISTORY ( HIST_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_HISTORY ( HIST_ID STRING PRIMARY KEY, OP_REF STRING, ROSTER_ID STRING, ACTION JSON, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_INCIDENT_CORRELATION ( CORR_ID STRING PRIMARY KEY, SHIFT_ID STRING, INCIDENT_IDS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ISSUES ( ISSUE_ID STRING PRIMARY KEY, LOG_ID STRING, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOG ( SHIFT_ID STRING PRIMARY KEY, OPERATOR STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, NOTES STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS_6091 ( LOG_ID STRING PRIMARY KEY, ROSTER_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_LOGS_6105 ( LOG_ID STRING PRIMARY KEY, SHIFT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_METRICS ( METRIC_ID STRING PRIMARY KEY, ROT_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_NOTES ( NOTE_ID STRING PRIMARY KEY, REPORT_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PENALTIES ( PEN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, REASON CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PLANNING_JOBS ( JOB_ID STRING PRIMARY KEY, ROSTER_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PLANNING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PLAN JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, OPERATOR STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, OP_REF STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_REPORTS ( REPORT_ID STRING PRIMARY KEY, OP_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_RESOLUTION_LOGS ( LOG_ID STRING PRIMARY KEY, CONFLICT_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROSTER ( ROSTER_ID STRING PRIMARY KEY, OP_REF STRING, SHIFT_START TIMESTAMP_LTZ, SHIFT_END TIMESTAMP_LTZ, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROSTERS ( ROSTER_ID STRING PRIMARY KEY, OP_LIST ARRAY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROSTERS ( ROSTER_ID STRING PRIMARY KEY, OP_REF STRING, SHIFT_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROSTER_6090 ( ROSTER_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROTA ( ROTA_ID STRING PRIMARY KEY, OPERATOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, ROLE STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_ROTATIONS ( ROT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SHIFT_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, ZONE STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SCHEDULES ( SCHED_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SCHEDULE_6104 ( SHIFT_ID STRING PRIMARY KEY, OPERATOR_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SUGGESTIONS ( SUG_ID STRING PRIMARY KEY, ROSTER_ID STRING, SUGGESTION JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, SHIFT_ID STRING, SUMMARY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, FROM_OP STRING, TO_OP STRING, DATE_DAY DATE, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, OPERATOR_REF STRING, TARGET_OPERATOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, OP_A STRING, OP_B STRING, SHIFT_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, OP_FROM STRING, OP_TO STRING, PERIOD JSON, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED BOOLEAN, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_SWAP_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHIFT_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, ROSTER_ID STRING, OP_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SHORTCUTS ( SC_ID STRING PRIMARY KEY, OPERATOR STRING, SHORTCUT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, PROFILE_ID STRING, SCORE NUMBER, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_IMPROVEMENT_PLANS ( PLAN_ID STRING PRIMARY KEY, PROFILE_ID STRING, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_INDEX ( SK_ID STRING PRIMARY KEY, OPERATOR STRING, SKILL JSON, RATING NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_MATRIX ( MATRIX_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_MATRIX ( SK_ID STRING PRIMARY KEY, OPERATOR STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_MATRIX ( SK_ID STRING PRIMARY KEY, OPERATOR STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SKILL_PROFILES ( PROFILE_ID STRING PRIMARY KEY, OP_REF STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA ( SLA_ID STRING PRIMARY KEY, NAME STRING, METRIC STRING, TARGET VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_ADHERENCE ( ADH_ID STRING PRIMARY KEY, OP_REF STRING, SLA_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_AWARENESS ( AWARE_ID STRING PRIMARY KEY, OPERATOR STRING, SLO_IDS ARRAY, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_COMPLIANCE ( COMP_ID STRING PRIMARY KEY, OP_REF STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, OPERATOR STRING, SCOPE VARIANT, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD JSON, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_SCORECARDS ( SCORE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, SLA_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, OPERATOR STRING, SLO_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_SURVEY_RESPONSES ( RESP_ID STRING PRIMARY KEY, SURVEY_ID STRING, OPERATOR_REF STRING, ANSWERS VARIANT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TAGS ( TAG_ID STRING PRIMARY KEY, OP_REF STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TASKS ( TASK_ID STRING PRIMARY KEY, ASSIGNEE STRING, CONTEXT VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TASKS_04 ( TASK_ID STRING PRIMARY KEY, ASSIGNED_TO STRING, DESCRIPTION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TASKS_08 ( TASK_ID STRING PRIMARY KEY, NAME STRING, ASSIGNED_TO STRING, STATUS STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TASK_LOGS_04 ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TASK_UPDATES_08 ( UPDATE_ID STRING PRIMARY KEY, TASK_ID STRING, UPDATE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TIME_TO_PROFICIENCY ( REC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, DAYS_TO_PROF NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, MATERIAL_ID STRING, OP_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, MAT_ID STRING, OPERATOR STRING, STATUS STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, ENROLL_ID STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, OP_REF STRING, MATERIAL_ID STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_COMPLETION ( REC_ID STRING PRIMARY KEY, OPERATOR STRING, MODULE STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_COMPLETIONS ( COMPLETION_ID STRING PRIMARY KEY, ASSIGN_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SCORE NUMBER );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_COMPLIANCE ( COMP_ID STRING PRIMARY KEY, OPERATOR STRING, MODULE STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_CURRICULUM ( CUR_ID STRING PRIMARY KEY, NAME STRING, MODULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ENROLLMENTS ( ENROLL_ID STRING PRIMARY KEY, CUR_ID STRING, OP_REF STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ENROLLMENTS ( ENROLL_ID STRING PRIMARY KEY, MAT_ID STRING, OP_REF STRING, STATUS STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_ENROLLMENTS ( ENR_ID STRING PRIMARY KEY, REQ_ID STRING, OPERATOR_REF STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, MATERIAL_ID STRING, OP_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, OPERATOR_REF STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, OP_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, OPERATOR_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3651_signature_alert_feedback_queue.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_FEEDBACK ( FB_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, OPERATOR_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3651_signature_alert_feedback_queue.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_HISTORY ( HIS_ID STRING PRIMARY KEY, OPERATOR STRING, MODULE STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, OPERATOR STRING, CURRICULUM_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, OPERATOR STRING, CURRICULUM_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_LOGS ( LOG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, MODULE STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_MATERIALS ( MATERIAL_ID STRING PRIMARY KEY, TITLE STRING, CONTENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_MATERIALS ( MAT_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_MATERIALS ( MAT_ID STRING PRIMARY KEY, TITLE STRING, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_MATERIALS ( MAT_ID STRING PRIMARY KEY, TITLE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_PLAN ( PLAN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, PLAN_JSON VARIANT, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_PROGRESS ( PROG_ID STRING PRIMARY KEY, ENROLL_ID STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_PROGRESS ( PROG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_REF STRING, PROGRESS_PCT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_PROGRESS ( PROG_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_ref STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS ( RECORD_ID STRING PRIMARY KEY, OPERATOR STRING, TRAINING_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS ( REC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS ( REC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, TRAINING_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS ( REC_ID STRING PRIMARY KEY, OP_REF STRING, COURSE STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS_6079 ( REC_ID STRING PRIMARY KEY, OPERATOR_REF STRING, TRAINING_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RECORDS_6094 ( TRAIN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_REGISTRY ( TRAIN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, ROLE STRING, TRAINING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, ASSIGN_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, ENROLL_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, SCORE NUMBER, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_RUNS ( RUN_ID STRING PRIMARY KEY, OPERATOR_REF STRING, MODULE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_TRAINING_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, OPERATOR_REF STRING, COURSE_REF STRING, SCHEDULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_UTILIZATION_HISTORIES ( HIST_ID STRING PRIMARY KEY, OP_REF STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, UTILIZATION_JSON VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_UTIL_REPORTS ( REP_ID STRING PRIMARY KEY, OPERATOR STRING, UTILIZATION_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_WARNINGS ( WARN_ID STRING PRIMARY KEY, OPERATOR STRING, WARNING_TEXT STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_WEEKLY_REPORTS ( REPORT_ID STRING PRIMARY KEY, OPERATOR STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPERATOR_WORKLOAD_METRICS ( MET_ID STRING PRIMARY KEY, OP_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_INCIDENT_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_INCIDENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_INCIDENT_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OPS_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_RUNBOOKS ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_RUNBOOKS_12 ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, OWNER STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_RUNBOOK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VER_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_RUNBOOK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, TITLE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OPS_RUNBOOK_VERSIONS ( VER_ID STRING PRIMARY KEY, RUNBOOK_REF STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_ACTIONABLE_ALERTS ( ALERT_ID STRING PRIMARY KEY, OPERATOR STRING, ALERT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_AUDIT_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_CASE_LOAD_METRICS ( MET_ID STRING PRIMARY KEY, OPERATOR STRING, OPEN_CASES INT, AVG_RESOLVE_TIME NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_INCIDENT_EMAIL_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, EMAIL_TO STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_INCIDENT_SLACK_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_ONCALL_FEEDBACK ( FB_ID STRING PRIMARY KEY, OPERATOR STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_PRIV_ACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_PRIV_ACTION_REQS ( REQ_ID STRING PRIMARY KEY, OPERATOR STRING, ACTION JSON, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OP_QUALITY_KPIS ( KPI_ID STRING PRIMARY KEY, OPERATOR STRING, KPI_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ORG_QUOTAS_07 ( QUOTA_ID STRING PRIMARY KEY, ORG_ID STRING, QUOTAS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ORG_SETTINGS ( SETTING_ID STRING PRIMARY KEY, ORG_ID STRING, KEY_NAME STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ORG_WIDE_POLICY_CATALOG ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OTPS_01 ( OTP_ID STRING PRIMARY KEY, SESSION_ID STRING, OTP_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, USED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.OTP_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, OTP_ID STRING, ATTEMPT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SUCCESS BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.OTP_ATTEMPTS_11 ( ATTEMPT_ID STRING PRIMARY KEY, OTP_ID STRING, SIGNER_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SUCCESS BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.OTP_CHALLENGES_14 ( OTP_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, OTP_VALUE STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ATTEMPTS NUMBER DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.OTP_CHALLENGE_INDEX_6198 ( CHALLENGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHALLENGE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OTP_CHALLENGE_LOGS_6199 ( LOG_ID STRING PRIMARY KEY, CHALLENGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OTP_CODES ( OTP_ID STRING PRIMARY KEY, SIGNER_ID STRING, OTP_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), USED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.OTP_POLICIES_11 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.OTP_REQUESTS ( OTP_ID STRING PRIMARY KEY, SIGNER_ID STRING, CODE_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OTP_REQUESTS_11 ( OTP_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNEL STRING, OTP_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OTP_USAGE_LOG ( LOG_ID STRING PRIMARY KEY, OTP_ID STRING, SIGNER_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.OTP_USES_01 ( USE_ID STRING PRIMARY KEY, OTP_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), USED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.OTP_VERIFICATION_STORE ( OTP_ID STRING PRIMARY KEY, SIGNER_ID STRING, OTP_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OUTAGE_IMPACT_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, OUTAGE_ID STRING, IMPACT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OUTBOUND_WEBHOOK_QUEUE ( Q_ID STRING PRIMARY KEY, TARGET_URL STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OUTBOUND_WEBHOOK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, RESPONSE VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OVERDUE_ACCOUNTS ( OA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DAYS_OVERDUE INT, OUTSTANDING_AMOUNT NUMBER, LAST_NOTIFICATION_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.OWNERSHIP_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, NEW_OWNER STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OWNERSHIP_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OWNERSHIP_TRANSFER_LOGS_6119 ( LOG_ID STRING PRIMARY KEY, TRANSFER_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OWNERSHIP_TRANSFER_LOGS_6127 ( LOG_ID STRING PRIMARY KEY, TRANSFER_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.OWNER_MAPPING ( OWNER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CONTACT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PACKET_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, PACKET_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ACCOUNTS_06 ( PARTNER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_CREDENTIAL_ROTATION ( ROTATION_ID STRING PRIMARY KEY, PARTNER_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, PARTNER_ID STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_EVENTS_06 ( EVENT_ID STRING PRIMARY KEY, PARTNER_ID STRING, TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_EVENT_INDEX ( IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, PARTNER_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, PARTNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_HEALTH_MONITOR ( MON_ID STRING PRIMARY KEY, PARTNER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INTEGRATIONS ( PARTNER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INTEGRATIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PARTNER_ID STRING, ACTION STRING, PAYLOAD VARIANT, ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, PARTNER_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, PARTNER_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INTEGRATION_REGISTRY ( PARTNER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_INVOICE_LINKS_06 ( LINK_ID STRING PRIMARY KEY, PARTNER_ID STRING, INVOICE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, PARTNER_REF STRING, KEY_META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_MAPPINGS_06 ( MAPPING_ID STRING PRIMARY KEY, PARTNER_ID STRING, ACCOUNT_ID STRING, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_QUEUE ( Q_ID STRING PRIMARY KEY, PARTNER_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_REGISTRY ( PARTNER_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_REQUESTS ( REQ_ID STRING PRIMARY KEY, PARTNER_NAME STRING, CONTACT VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, PARTNER_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, PARTNER_REF STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_PERFORMANCE_METRICS ( METRIC_ID STRING PRIMARY KEY, PARTNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_PERMISSION_GRANTS ( GRANT_ID STRING PRIMARY KEY, PARTNER_ID STRING, PERMS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_RATE_LIMITS_06 ( LIMIT_ID STRING PRIMARY KEY, PARTNER_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_SETTLEMENTS_06 ( SETTLEMENT_ID STRING PRIMARY KEY, PARTNER_ID STRING, AMOUNT NUMBER, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, PARTNER_ID STRING, SLO_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, PARTNER_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_SYNC_LOGS ( LOG_ID STRING PRIMARY KEY, PARTNER_ID STRING, ACTION STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SYNCED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_TELEMETRY_06 ( TELE_ID STRING PRIMARY KEY, PARTNER_ID STRING, METRIC_KEY STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PARTNER_WEBHOOKS ( WEBHOOK_ID STRING PRIMARY KEY, PARTNER_ID STRING, EVENT_TYPE STRING, CALLBACK_URL STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PATCH_DEPLOYMENT_LOGS ( LOG_ID STRING PRIMARY KEY, PATCH_REF STRING, COMPONENT STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PATCH_RELEASE_REGISTRY ( RELEASE_ID STRING PRIMARY KEY, VERSION STRING, NOTES CLOB, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAUSED_TENANT_REACTIVATION_JOBS ( JOB_ID STRING PRIMARY KEY, REG_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAUSED_TENANT_REACTIVATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAUSED_TENANT_REGISTRY ( REG_ID STRING PRIMARY KEY, TENANT_ID STRING, PAUSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_ATTEMPTS_06 ( ATTEMPT_ID STRING PRIMARY KEY, PM_ID STRING, AMOUNT NUMBER, CURRENCY STRING, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_ATTEMPT_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, PROVIDER_ID STRING, RESULT VARIANT, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTE_EVENTS ( EVENT_ID STRING PRIMARY KEY, DISPUTE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTE_INDEX ( DISPUTE_ID STRING PRIMARY KEY, PROVIDER_REF STRING, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, TENANT_ID STRING, PAYMENT_REF STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTE_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_CONFIG ( GATEWAY_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_CONFIGS ( CFG_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_EVENTS ( EVENT_ID STRING PRIMARY KEY, GATEWAY STRING, EVENT_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_EVENTS ( EVENT_ID STRING PRIMARY KEY, GATEWAY STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, INVOICE_ID STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_EVENTS ( EVT_ID STRING PRIMARY KEY, GW_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_INDEX ( GW_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_LOGS_6181 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_METRICS ( METRIC_ID STRING PRIMARY KEY, GATEWAY_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_METRICS_6180 ( METRIC_ID STRING PRIMARY KEY, GATEWAY_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_REGISTRY ( GW_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_STATUS ( STATUS_ID STRING PRIMARY KEY, GATEWAY STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_TRANSACTIONS ( TX_ID STRING PRIMARY KEY, GW_ID STRING, INVOICE_REF STRING, STATUS STRING, tx_payload VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_GATEWAY_TRANSACTIONS ( TX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TENANT_ID STRING, AMOUNT NUMBER, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_METHOD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PM_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_METHOD_INDEX ( PM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METHOD_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_METHOD_REFS_06 ( PM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PM_TYPE STRING, REFERENCE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_METHOD_USAGE ( USG_ID STRING PRIMARY KEY, PM_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_CALLBACKS ( CALLBACK_ID STRING PRIMARY KEY, PROVIDER STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_INTEGRATION ( INTEG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_MAPPINGS ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, PROVIDER STRING, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_SETTLEMENTS ( SETTLEMENT_ID STRING PRIMARY KEY, PROVIDER STRING, AMOUNT NUMBER, SETTLED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_SETTLEMENT_HISTORY ( H_ID STRING PRIMARY KEY, SETTLEMENT_ID STRING, RECORD JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_SETTLEMENT_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SETTLEMENT_REF STRING, SETTLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_PROVIDER_WEBHOOKS ( WH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EVENT_TYPE STRING, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, PAYMENT_ID STRING, STATUS STRING, DETAILS VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, TENANT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATIONS_06 ( RECON_ID STRING PRIMARY KEY, ATTEMPT_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DISC_ID STRING, OWNER STRING, STATUS STRING, RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_DISCREPANCIES ( DISC_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT_DIFF NUMBER, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_INDEX ( IDX_ID STRING PRIMARY KEY, INVOICE_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_INDEX ( IDX_ID STRING PRIMARY KEY, PAYMENT_REF STRING, MATCHED_INVOICE STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, BATCH_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, RUN_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_QUEUE ( Q_ID STRING PRIMARY KEY, BILLING_RUN_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHED_COUNT INT, UNMATCHED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHED_COUNT INT, UNMATCHED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MATCHED_LINES NUMBER, DISCREPANCIES NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RETRY_HISTORY ( RETRY_ID STRING PRIMARY KEY, PAYMENT_REF STRING, ATTEMPT INT, STATUS STRING, TRIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RETRY_LOGS_6127 ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RETRY_POLICY_6126 ( POLICY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, PAYMENT_REF STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, BATCH_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, AMOUNT NUMBER, PROVIDER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SETTLED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PAYMENT_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYOUT_HISTORY ( PAY_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, AMOUNT NUMBER, PAID_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PAYOUT_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SCHEDULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PCI_SCAN_RESULTS ( SCAN_ID STRING PRIMARY KEY, SCOPE_ID STRING, FINDINGS VARIANT, SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PCI_SCOPE_REGISTRY ( SCOPE_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE_META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MANIFEST_ID STRING, SUBJECT_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_ARCHIVES_06 ( ARCHIVE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, S3_PATH STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_ASSEMBLY_REGISTRY_6040 ( ASSEMBLY_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, URL STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_CHECKSUMS ( CHECK_ID STRING PRIMARY KEY, PDF_ID STRING, ALGO STRING, VALUE STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_GENERATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, DOCUMENT_ID STRING, OUTPUT_URL STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_INDEX ( PDF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PAGE_COUNT INT, TEXT_EXTRACT VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_INTEGRITY_INDEX ( IDX_ID STRING PRIMARY KEY, MANIFEST_ID STRING, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_REF STRING, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FILE_REF STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OCR_TEXT CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT_CLOB CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_OPTIMIZATION_INDEX ( IDX_ID STRING PRIMARY KEY, PROFILE_ID STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_OPTIMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_OPTIMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, INPUT_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_OPTIMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_OPTIMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_PREVIEWS ( PREVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_ENGINES ( ENG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_ERRORS ( ERR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_DETAIL VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, HISTORY_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_ERROR_LOG ( ERR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_MSG CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_HISTORY ( HISTORY_ID STRING PRIMARY KEY, PROFILE_ID STRING, Q_ID STRING, DURATION_MS NUMBER, OUTPUT_LOCATION STRING, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ENGINE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, OPTIONS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, MESSAGE STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PRIORITY INT DEFAULT 0, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_STORAGE ( PDF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, S3_URL STRING, SIZE_BYTES NUMBER, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_STORAGE ( PDF_ID STRING PRIMARY KEY, RENDER_ID STRING, FILE_URL STRING, SIZE_BYTES NUMBER, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_STORAGE_12 ( PDF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, URL STRING, SIZE_BYTES NUMBER, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_STORAGE_INDEX ( INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, URL STRING, SIZE_BYTES NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_STORE_INDEX ( PDF_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, SIZE_BYTES NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_TEXT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEXT CLOB, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_TEXT_INDEX_STATS ( STAT_ID STRING PRIMARY KEY, PDF_ID STRING, TOKEN_COUNT INT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_TRANSCODE_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, TARGET_FORMAT STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PDF_TRANSCODE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PENDING_ACTIONS_10 ( ACTION_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION_TYPE STRING, PAYLOAD VARIANT, DUE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PEN_TEST_FINDINGS ( FINDING_ID STRING PRIMARY KEY, TARGET STRING, SEVERITY STRING, DESCRIPTION CLOB, FOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PEN_TEST_REMEDIATIONS ( REM_ID STRING PRIMARY KEY, FINDING_ID STRING, REMEDIATION JSON, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PEN_TEST_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PEN_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERFORMANCE_BENCHMARKS ( BENCH_ID STRING PRIMARY KEY, NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERFORMANCE_TARGET_LOGS_6123 ( LOG_ID STRING PRIMARY KEY, TARGET_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERF_METRICS_SUMMARY ( METRIC_ID STRING PRIMARY KEY, COMPONENT STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PERIODIC_ACCESS_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERIODIC_ACCESS_REVIEW_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PERIODIC_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, SERVICE_NAME STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERIODIC_SECURITY_SCANS ( SCAN_ID STRING PRIMARY KEY, SCOPE VARIANT, RESULT VARIANT, SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERIOD_END_CLOSURE ( CLOSURE_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, CLOSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PERMISSIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PRINCIPAL STRING, OBJECT_NAME STRING, ACTION STRING, TIMESTAMP_LTZ TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERMISSION_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REVIEWED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PERMISSION_REVIEW_HISTORY ( H_ID STRING PRIMARY KEY, REVIEW_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PERSONALIZATION_PREVIEW_JOBS ( JOB_ID STRING PRIMARY KEY, PROFILE_ID STRING, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PERSONALIZATION_PREVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PREVIEW_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PHONE_VERIFICATIONS ( VERIF_ID STRING PRIMARY KEY, SIGNER_ID STRING, PHONE_NUMBER STRING, VERIF_CODE STRING, VERIFIED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PHONE_VERIF_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SIGNER_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SUCCESS BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.PIA_ASSESSMENTS_12 ( PIA_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PIA_LOGS_6074 ( LOG_ID STRING PRIMARY KEY, PIA_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PIA_MITIGATION_PLANS ( PLAN_ID STRING PRIMARY KEY, PIA_ID STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PIA_RECORDS ( PIA_ID STRING PRIMARY KEY, TITLE STRING, SUMMARY VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PIA_RESULTS ( RES_ID STRING PRIMARY KEY, PIA_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PIA_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, PIA_ID STRING, REVIEWER STRING, RESULT STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PII_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PII_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, REDACTED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DISCOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DISCOVERY_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_DISCOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_INDEX_09 ( PII_ID STRING PRIMARY KEY, TABLE_NAME STRING, COLUMN_NAME STRING, SENSITIVITY STRING, DISCOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_MASKING_APPLICATIONS ( APP_ID STRING PRIMARY KEY, MASK_ID STRING, OBJECT_NAME STRING, FIELD_NAME STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_MASKING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, TARGET_COLUMN STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_MASKING_REGISTRY ( MASK_ID STRING PRIMARY KEY, TENANT_ID STRING, FIELD_PATTERN STRING, MASK_RULE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_MASKS_07 ( MASK_ID STRING PRIMARY KEY, FIELD_NAME STRING, MASK_PATTERN STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_SCAN_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PII_SCAN_JOBS_07 ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PII_SCAN_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, FOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PII_SCAN_RESULTS_07 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PIPELINE_STATES ( PIPE_ID STRING PRIMARY KEY, NAME STRING, STATE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKCS11_ADAPTERS ( ADAPTER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PKCS12_STORE ( STORE_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACTION STRING, SUBJECT STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACTION STRING, SUBJECT_REF STRING, DETAILS VARIANT, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CERT_PEM STRING, ISSUER STRING, SUBJECT STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PKI_CERTIFICATE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CERT_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PKI_CERTIFICATE_STORE ( CERT_ID STRING PRIMARY KEY, CERT_PEM STRING, SUBJECT STRING, ISSUER STRING, SERIAL_NUMBER STRING, FINGERPRINT STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PKI_CERTIFICATE_STORE (CERT_ID STRING PRIMARY KEY, FINGERPRINT STRING, CERT_BLOB STRING, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PKI_CERTIFICATE_STORE( CERT_ID STRING PRIMARY KEY, CERT_PEM STRING, SUBJECT STRING, ISSUER STRING, SERIAL_NUMBER STRING, FINGERPRINT STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_KEY_STORE ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_OCSP_STATUS ( OCSP_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, OCSP_RESPONSE VARIANT, STATUS STRING, -- GOOD, REVOKED, UNKNOWN CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PKI_OCSP_STATUS ( OCSP_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, OCSP_RESPONSE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PKI_OCSP_STATUS ( OCSP_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_RESPONSE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PKI_OCSP_STATUS (OCSP_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, OCSP_RESPONSE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PKI_OCSP_STATUS( OCSP_ID STRING PRIMARY KEY, CERT_FINGERPRINT STRING, OCSP_RESPONSE VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PKI_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OP_TYPE STRING, KEY_REF STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PKI_REVOCATION_LOG ( REVOC_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.PLAN_BILLING_CYCLES ( CYCLE_ID STRING PRIMARY KEY, PLAN_ID STRING, CYCLE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAN_FEATURE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, PLAN_ID STRING, FEATURES ARRAY, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAN_OVERAGE_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACCOUNT_ID STRING, OCCURRED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAN_OVERAGE_POLICIES ( POLICY_ID STRING PRIMARY KEY, PLAN_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLATFORM_ALERTS ( ALERT_ID STRING PRIMARY KEY, COMPONENT STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLATFORM_INCIDENT_MATRIX ( MAT_ID STRING PRIMARY KEY, INCIDENT_TYPE STRING, SEVERITY_MAP VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLATFORM_OPERATIONAL_RISKS ( RISK_ID STRING PRIMARY KEY, NAME STRING, MITIGATIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLATFORM_SECURITY_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, ANN_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLATFORM_SECURITY_ANNOUNCEMENTS ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, SEVERITY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_INDEX INT, ACTION_JSON VARIANT, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PB_ID STRING, ASSIGNEE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, OP_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, RUN_ID STRING, ACTION JSON, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXECUTIONS_12 ( EXEC_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, STATUS STRING, LOGS VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXECUTION_LOG ( LOG_ID STRING PRIMARY KEY, PB_ID STRING, EXECUTOR STRING, RESULT VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXECUTION_METRICS ( METRIC_ID STRING PRIMARY KEY, PB_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXECUTION_METRICS ( MET_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXEC_METRICS ( MET_ID STRING PRIMARY KEY, PB_ID STRING, METRICS JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_EXEC_METRICS ( MET_ID STRING PRIMARY KEY, PB_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, PB_ID STRING, STATUS STRING, LAST_RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_HISTORY ( PH_ID STRING PRIMARY KEY, PB_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_LOGS ( LOG_ID STRING PRIMARY KEY, PB_ID STRING, STEP_NAME STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_METRICS ( PM_ID STRING PRIMARY KEY, PB_ID STRING, METRICS JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_METRICS_ARCHIVE ( ARCH_ID STRING PRIMARY KEY, PB_ID STRING, METRICS VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INITIATED_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_RUN_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_TEMPLATES_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, KEYWORDS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_TEMPLATE_AUDIT ( PTA_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PLAYBOOK_VERSION_INDEX ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PM_LINKS ( LINK_ID STRING PRIMARY KEY, PM_ID STRING, RESOURCE_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICYSYNC_EVENT_LOG ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PAYLOAD VARIANT, EVT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_APPROVALS ( APP_ID STRING PRIMARY KEY, POLICY_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_APPROVALS_07 ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ASSIGNMENTS ( PA_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TYPE STRING, TARGET_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ASSIGNMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ASSIGN_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ASSIGNMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ASSIGN_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ASSIGNMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, TEMPLATE_ID STRING, ASSIGNED_BY STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ATTACHMENTS ( ATTACH_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, ATTACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT ( PAUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT ( PAUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, POLICY_ID STRING, SNAP_JSON VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, CHANGED_BY STRING, CHANGE_PAYLOAD VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT_TRAIL_07 ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_AUDIT_TRAIL_13 ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDINGS ( BINDING_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDINGS_06 ( BINDING_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TYPE STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_BINDING_LOGS_6235 ( LOG_ID STRING PRIMARY KEY, BIND_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CATEGORIZATION_LOGS_6131 ( LOG_ID STRING PRIMARY KEY, CAT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGES ( CHANGE_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, DECISION STRING, NOTES STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, POLICY_ID STRING, APPROVER STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_FEED ( FEED_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_HISTORY ( HIST_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGE_JSON VARIANT, APPLIED_BY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_LOG ( CHANGE_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_LOG_V2 ( CHANGE_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPROVED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_OUTCOMES ( OUT_ID STRING PRIMARY KEY, PROP_ID STRING, OUTCOME JSON, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_PROPOSALS ( PROP_ID STRING PRIMARY KEY, POLICY_ID STRING, PROPOSAL_JSON VARIANT, SUBMITTED_BY STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_RECON ( RECON_ID STRING PRIMARY KEY, POLICY_ID STRING, APPLIED_TO STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTED_BY STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_KEY STRING, REQUESTOR STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTED_BY STRING, POLICY_ID STRING, CHANGE JSON, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_REQUESTS_07 ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTED_BY STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CHANGE_VOTES ( VOTE_ID STRING PRIMARY KEY, PROP_ID STRING, VOTER STRING, VOTE STRING, VOTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, POLICY_ID STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, POLICY_REF STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_DOCUMENTS ( DOC_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, COMPLIANT BOOLEAN, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_REF STRING, SCOPE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, RESULT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE VARIANT, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, DOC_ID STRING, REVIEWER STRING, RESULT VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_SCORES ( SCORE_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_COMPLIANCE_SUMMARIES ( SUM_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CONFLICT_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, CONFLICT_DESC CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CONFLICT_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, LOG_ID STRING, RESOLUTION_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_CONSENT_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, SIGNER_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_DOCUMENT_INDEX ( DOC_ID STRING PRIMARY KEY, NAME STRING, SCOPE STRING, LOCATION STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EFFECTIVITY_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_ID STRING, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENTS_09 ( ENFORCE_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT VARIANT, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EVENT_ID STRING, ACTION JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, POLICY_ID STRING, EXECUTED_BY STRING, ACTION_DETAIL VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUEST_ID STRING, OUTCOME STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_METRICS ( MET_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENFORCEMENT_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENGINE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENGINE_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENGINE_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ENGINE_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ESCALATION_PATHS ( PATH_ID STRING PRIMARY KEY, POLICY_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, BIND_ID STRING, SUBJECT_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, CONTEXT VARIANT, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, RULE_ID STRING, SUBJECT_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATIONS_06 ( EVAL_ID STRING PRIMARY KEY, BINDING_ID STRING, CONTEXT VARIANT, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATIONS_13 ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVALUATOR_RUNS ( RUN_ID STRING PRIMARY KEY, EVAL_ID STRING, CONTEXT VARIANT, RESULT VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVAL_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT JSON, EVAL_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EVIDENCE_REGISTRY ( EVID_ID STRING PRIMARY KEY, POLICY_ID STRING, ARTIFACT_REF STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, POLICY_ID STRING, GRANTED_TO STRING, EXPIRES_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTIONS_13 ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, EX_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_LOGS ( LOG_ID STRING PRIMARY KEY, EXC_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, DECISION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_REGISTRY ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, REASON STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, JUSTIFICATION CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, EX_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, NOTES CLOB, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXCEPTION_WORKFLOW ( WF_ID STRING PRIMARY KEY, POLICY_ID STRING, REQUESTOR STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, CONTEXT VARIANT, RESULT VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACCOUNT_ID STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_EXEMPTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXEMPTION_ID STRING, POLICY_ID STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_IMPACT_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, POLICY_ID STRING, IMPACT_JSON VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_IMPACT_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE VARIANT, IMPACT_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_IMPLEMENTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, IMP_ID STRING, AUDITOR STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_IMPLEMENTATION_INDEX ( IMP_ID STRING PRIMARY KEY, POLICY_ID STRING, IMP_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_IMPLEMENTATION_TASKS ( TASK_ID STRING PRIMARY KEY, POLICY_ID STRING, OWNER STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_LOOKUP_INDEX ( IDX_ID STRING PRIMARY KEY, POLICY_KEY STRING, POLICY_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_OVERRIDE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.POLICY_PREFLIGHT_CACHE ( CACHE_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_HASH STRING, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REMEDIATION_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVIEW_OUTCOMES ( OUT_ID STRING PRIMARY KEY, SCHED_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVIEW_SCHEDULES ( SCHED_ID STRING PRIMARY KEY, POLICY_ID STRING, NEXT_REVIEW_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVISIONS ( REV_ID STRING PRIMARY KEY, POLICY_ID STRING, REV_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_REVISION_HISTORY ( REV_ID STRING PRIMARY KEY, POLICY_ID STRING, DIFF JSON, REVISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_RISK_HISTORY ( HIST_ID STRING PRIMARY KEY, POLICY_ID STRING, SCORE NUMBER, REASON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, POLICY_ID STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ROLLBACK_REQUESTS ( REQ_ID STRING PRIMARY KEY, POLICY_ID STRING, REASON CLOB, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_RULE_VERSIONING ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, RULE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_SIM_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_SIM_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_SNAPSHOT_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_STATS ( STAT_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES ( PT_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES_02 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES_ADMIN ( PT_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES_INDEX ( PTIDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NAME STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TEMPLATES_V2 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_TRIGGER_RUN_LOGS ( LOG_ID STRING PRIMARY KEY, TRIG_ID STRING, RUN_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_USAGE ( USAGE_ID STRING PRIMARY KEY, POLICY_ID STRING, ACCOUNT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSIONING_07 ( PV_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION INT, CHANGES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, RULE_ID STRING, VERSION_NUMBER INT, DEFINED_AT TIMESTAMP_LTZ, PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSIONS_05 ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUM INT, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSIONS_07 ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, DEFINITION VARIANT, ACTIVATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSION_HISTORY ( PVH_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION INT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSION_HISTORY ( VER_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VERSION_HISTORY ( VER_ID STRING PRIMARY KEY, POLICY_KEY STRING, VERSION_NUMBER INT, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, POLICY_ID STRING, ENTITY_REF STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_ACKS ( ACK_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, PV_ID STRING, ACTION_TAKEN STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, WF_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_CASES ( CASE_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_EVIDENCE ( EVID_ID STRING PRIMARY KEY, CASE_ID STRING, EVID_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_INDEX ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_INDEX ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, SEVERITY STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_METRICS ( MET_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, PV_ID STRING, SENT_TO STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, VIOLATION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_REMEDIATION ( REM_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTIONS VARIANT, OWNER STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, EVENT_ID STRING, RESOLVED_BY STRING, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_RESPONSES ( RESP_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_TAKEN STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_TRENDS ( TREND_ID STRING PRIMARY KEY, POLICY_ID STRING, TREND_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_WATCHERS ( WATCH_ID STRING PRIMARY KEY, PV_ID STRING, WATCHER STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_WORKFLOW ( WF_ID STRING PRIMARY KEY, VIOLATION_REF STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POLICY_VIOLATION_WORKFLOW ( WF_ID STRING PRIMARY KEY, VIOL_ID STRING, STEPS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEMS_10 ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_ACTION_OWNERS ( OWNER_ID STRING PRIMARY KEY, ITEM_ID STRING, OWNER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, ITEM_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, PM_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, PM_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_RUNS_07 ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TEMPLATE_ID STRING, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POSTMORTEM_TEMPLATES_07 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POST_DEPLOYMENT_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POST_DEPLOY_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, COMPONENT_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POST_INCIDENT_REVIEW_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.POST_MORTEM_ACTION_REGISTRY ( ACTION_ID STRING PRIMARY KEY, PM_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.POST_SIGN_EXECUTIONS_02 ( EXEC_ID STRING PRIMARY KEY, HOOK_ID STRING, BUNDLE_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.POST_SIGN_HOOKS_02 ( HOOK_ID STRING PRIMARY KEY, NAME STRING, HOOK_TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PREPAID_BALANCE_TRANSACTIONS ( TXN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PREVIEW_ID STRING, SUBJECT_REF STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_ACCESS_LOG ( ACCESS_ID STRING PRIMARY KEY, PREVIEW_ID STRING, USER_ID STRING, ACCESS_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, IP_ADDR STRING, USER_AGENT STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, PREVIEW_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, DETAIL VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_BUDGET_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, RENDERED_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_LOCATION STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE ( PREVIEW_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_06 ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_INVALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, CACHE_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_INVALIDATION_QUEUE ( Q_ID STRING PRIMARY KEY, PREVIEW_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_LOGS_6036 ( LOG_ID STRING PRIMARY KEY, CACHE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_CACHE_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, HIT_COUNT INT, MISS_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, REQ_ID STRING, ESTIMATE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_EXPERIMENT_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, EXP_ID STRING, SESSION_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_EXPIRY_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, PREVIEW_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_EXPIRY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_HISTORY ( PH_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_INVALIDATIONS ( INVALID_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INVALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_INVALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, CACHE_IDS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INVALIDATED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_PERF_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LATENCY_MS NUMBER, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_QUEUE ( QUEUE_ID STRING PRIMARY KEY, REQ_ID STRING, PRIORITY INT DEFAULT 100, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_QUOTA_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_JSON VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RECOMMENDATION_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, RECS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RECONCILIATION ( REC_ID STRING PRIMARY KEY, REQ_ID STRING, EXPECTED JSON, ACTUAL JSON, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FORMAT STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RENDER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, URL STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTER STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_REQUEST_LOG ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, IP_ADDR STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, RENDER_URL STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PREVIEW_URL STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_SESSION_EVENTS ( EVT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PREVIEW_SESSION_STORE ( SESSION_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRE_SIGN_CHECKS ( CHECK_ID STRING PRIMARY KEY, REQUEST_ID STRING, CHECK_TYPE STRING, RESULT STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRICING_ADJUSTMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ADJUSTMENT_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), BY_USER STRING );

CREATE OR REPLACE TABLE DOCGEN.PRICING_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRICING_CACHE_06 ( CACHE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RATE_REF STRING, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRICING_RULE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIORITY_DISPATCH_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, DISPATCHED_TO STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PRIORITY_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, PRIORITY INT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_ACTIONS ( ACTION_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION_TYPE STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_ACTIONS_ADMIN ( PA_ID STRING PRIMARY KEY, VIOLATION_ID STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_ACTION_ITEMS ( ITEM_ID STRING PRIMARY KEY, PIA_ID STRING, ACTION JSON, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_APPROVAL_HISTORY ( AH_ID STRING PRIMARY KEY, WF_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_APPROVAL_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_ASSESSMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_ASSESSMENT_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT ( PA_ID STRING PRIMARY KEY, REQ_ID STRING, RESULTS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CONTROL_ID STRING, RESULT VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_FINDINGS ( FIND_ID STRING PRIMARY KEY, CHECK_ID STRING, FINDING JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTIONS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_BREACH_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, INCIDENT_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TENANT_ID STRING, INCIDENT_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINTS ( COMPLAINT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DETAILS VARIANT, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINTS_REGISTRY ( COMPLAINT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DETAILS CLOB, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, DUE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_INVESTIGATIONS ( INVEST_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, STATUS STRING DEFAULT 'OPEN', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_OUTCOMES ( OUTCOME_ID STRING PRIMARY KEY, INVEST_ID STRING, RESULT JSON, CLOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_QUEUE ( COMPLAINT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DETAILS VARIANT, STATUS STRING DEFAULT 'OPEN', RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_REGISTRY ( COMPLAINT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, DESCRIPTION CLOB, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_REGISTRY ( COMPLAINT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_REGISTRY ( COMP_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS CLOB, FILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_RESOLUTION ( RES_ID STRING PRIMARY KEY, COMP_ID STRING, RESOLUTION CLOB, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_RESULTS ( RES_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, ACTIONS VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLAINT_RESULTS ( RES_ID STRING PRIMARY KEY, COMPLAINT_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_CERTS ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, CHECK_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, DASH_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_DSR_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_DSR_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_COMPLIANCE_RUNS ( RUN_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_CONSENT_INSTANCES ( CONSENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_CONSENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DASHBOARD_11 ( DASH_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_ERASURE_JOBS ( JOB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TARGETS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_INVENTORY ( INV_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEMS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_INVENTORY ( INV_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, LAST_SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_INVENTORY ( ITEM_ID STRING PRIMARY KEY, TENANT_ID STRING, DATA_DESC VARIANT, SENSITIVITY STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_INVENTORY_UPDATES ( UPDATE_ID STRING PRIMARY KEY, ITEM_ID STRING, UPDATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_MAP ( MAP_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_MAP_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_MAP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MAP JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DATA_MASKING_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, MASKING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DIFFERENTIAL_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DISCLOSURE_ACCEPTANCES ( ACCEPT_ID STRING PRIMARY KEY, DISCLOSURE_ID STRING, SUBJECT_REF STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DISCLOSURE_REGISTRY ( DISCLOSURE_ID STRING PRIMARY KEY, TENANT_ID STRING, DISCLOSURE_JSON VARIANT, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DISCLOSURE_WITHDRAWALS ( WITHDRAW_ID STRING PRIMARY KEY, ACCEPT_ID STRING, WITHDRAWN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DSR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_DSR_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, OPEN_REQUESTS INT, AVG_TTR NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_EXCEPTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EX_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_EXCEPTION_LOGS ( LOG_ID STRING PRIMARY KEY, PIA_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_EXCEPTION_REGISTRY ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, AUTHORIZED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_EXEMPTION_REGISTRY ( EXEMPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_FLAGS ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FLAG_KEY STRING, FLAG_VALUE STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_FLAGS_13 ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FLAG_TYPE STRING, SET_BY STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, PIA_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( ASMT_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, RESULT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, SCOPE VARIANT, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, SCOPE VARIANT, SUMMARY CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, ASSESSMENT JSON, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, ASSESSMENT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENTS ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_ASSESSMENT_6073 ( PIA_ID STRING PRIMARY KEY, TENANT_ID STRING, ASSESSMENT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PIA_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REVIEWER STRING, RESULT VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, ASMT_ID STRING, REVIEWER STRING, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_IMPACT_WORKFLOW ( WF_ID STRING PRIMARY KEY, ASMT_ID STRING, STAGES VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, REPORT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, TENANT_ID STRING, SEVERITY STRING, DESCRIPTION STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_INCIDENT_REPORTS ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_INCIDENT_RESULTS ( RES_ID STRING PRIMARY KEY, REPORT_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MASKING_APPLICATION_LOGS ( LOG_ID STRING PRIMARY KEY, ASSIGN_ID STRING, QUERY_TEXT CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MASKING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_TABLE STRING, TARGET_COLUMN STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MASKING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MASKING_RULES ( RULE_ID STRING PRIMARY KEY, FIELD_PATH STRING, MASK_EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MASKS_11 ( MASK_ID STRING PRIMARY KEY, NAME STRING, TARGET_FIELD STRING, MASKING_RULE STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_METRICS ( PM_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_MITIGATION_PLANS ( PLAN_ID STRING PRIMARY KEY, RISK_ID STRING, ACTIONS VARIANT, OWNER STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_OFFICER_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_OFFICER_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CONTENT VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ACCEPTANCES ( ACCEPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, VERSION_ID STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ACKS ( ACK_ID STRING PRIMARY KEY, SUBJECT_REF STRING, VERSION_ID STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ACKS ( ACK_ID STRING PRIMARY KEY, VERSION_ID STRING, SUBJECT_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ACK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, SUBJECT_REF STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, VERSION_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, VERSION_ID STRING, TENANT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_CHANGE_LOG ( CHANGE_ID STRING PRIMARY KEY, VERSION_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_LOGS_6385 ( LOG_ID STRING PRIMARY KEY, VERSION_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, VERSION_NUMBER INT, BODY CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_CLOB CLOB, APPLICABLE_FROM TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_TEXT CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_POLICY_VERSIONS_6384 ( VERSION_ID STRING PRIMARY KEY, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS ( PR_ID STRING PRIMARY KEY, SUBJECT_ID STRING, REQUEST_TYPE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS ( PR_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS ( PR_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, SUBJECT STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS_04 ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS_08 ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUEST_TYPE STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUESTS_REGISTRY ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQ_TYPE STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_AUDITS_08 ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, OPEN_REQUESTS INT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, REQ_ID STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_HANDLERS ( HANDLER_ID STRING PRIMARY KEY, Q_ID STRING, WORKER STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_INDEX ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_INDEX ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, TYPE STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, PR_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, PR_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, PR_ID STRING, STATUS STRING, NOTES STRING, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, DETAIL VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_TYPE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REQUEST_WORKFLOWS ( WF_ID STRING PRIMARY KEY, REQ_ID STRING, STEPS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_RESPONSES_04 ( RESP_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE VARIANT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_RESPONSE_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_REVIEW_NOTES ( NOTE_ID STRING PRIMARY KEY, REQ_ID STRING, REVIEWER STRING, NOTE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, TENANT_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TENANT_ID STRING, DESCRIPTION CLOB, RISK_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_SHARING_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, EXCEPTION_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_TAG_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, TAG STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_TAG_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_TAG_INDEX ( TAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TAG STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_TRAINING_LOGS ( LOG_ID STRING PRIMARY KEY, MODULE STRING, USER_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SCORE NUMBER );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_TRAINING_LOGS ( LOG_ID STRING PRIMARY KEY, USER_REF STRING, COURSE_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVACY_VIOLATIONS ( PV_ID STRING PRIMARY KEY, TENANT_ID STRING, DESCRIPTION STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACCESS_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUESTOR STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACCESS_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ADMIN_USER STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACTION_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_ACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_OPERATION_APPROVALS ( APP_ID STRING PRIMARY KEY, OPERATION_JSON VARIANT, REQUESTED_BY STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_OPERATION_LOGS ( LOG_ID STRING PRIMARY KEY, OP_REF STRING, PAYLOAD VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_SESSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, ACTIONS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGED_SESSION_MONITORING ( MON_ID STRING PRIMARY KEY, SESSION_ID STRING, STREAM JSON, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGE_ESCALATION_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, OPERATION_JSON VARIANT, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGE_GRANTS_06 ( GRANT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESOURCE_REF STRING, PRIVILEGES ARRAY, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIVILEGE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, REVIEW_ID STRING, OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ACCESS_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, APP_ID STRING, ACTION STRING, NOTES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ESCALATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ESCALATION_HISTORY ( H_ID STRING PRIMARY KEY, Q_ID STRING, ACTION JSON, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRIV_SESSION_MONITOR ( MON_ID STRING PRIMARY KEY, SESSION_REF STRING, SUBJECT_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PRIV_TASK_RUNNER ( RUN_ID STRING PRIMARY KEY, TASK_JSON VARIANT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROCESSING_BENCHMARK_LOGS_6071 ( LOG_ID STRING PRIMARY KEY, BENCH_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROCESSING_CHECKPOINT ( CHECKPOINT_ID STRING PRIMARY KEY, NAME STRING, LAST_PROCESSED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROCESSING_NODE_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NODE_REF STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROCESSING_NODE_ERRORS ( ERR_ID STRING PRIMARY KEY, NODE_REF STRING, JOB_REF STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROCESSING_NODE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, NODE_REF STRING, STATUS STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PRODUCT_ANALYTICS_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRODUCT_FEEDBACK_QUEUE ( FB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRODUCT_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, HANDLED_BY STRING, OUTCOME VARIANT, HANDLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PRODUCT_USAGE_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, TENANT_ID STRING, ANCHOR_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROFILE_DIFF_AUDIT ( DIFF_ID STRING PRIMARY KEY, SIGNER_ID STRING, DIFF JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROFILE_ENRICH_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROGRAM_ENROLLMENTS ( ENROLL_ID STRING PRIMARY KEY, OPERATOR STRING, PROGRAM STRING, ENROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROGRAM_PROGRESS ( PROG_ID STRING PRIMARY KEY, ENROLL_ID STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMOTIONAL_CREDIT_REGISTRY ( CREDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMOTIONAL_CREDIT_USAGE ( USAGE_ID STRING PRIMARY KEY, CREDIT_ID STRING, USAGE_AMOUNT NUMBER, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMOTIONS_REGISTRY ( PROMO_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROMOTION_REDEMPTIONS ( RED_ID STRING PRIMARY KEY, PROMO_ID STRING, TENANT_ID STRING, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_CACHE_EVICTIONS ( EVICT_ID STRING PRIMARY KEY, PROMPT_ID STRING, REASON STRING, EVICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_CACHE_REGISTRY ( PROMPT_ID STRING PRIMARY KEY, PROMPT_HASH STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INPUT VARIANT, OUTPUT VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_PERFORMANCE_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LATENCIES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_TEMPLATE_LIBRARY ( PROMPT_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_CLOB CLOB, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_TEMPLATE_LIBRARY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, VERSION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_TEMPLATE_REGISTRY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, VERSION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, PROMPT_ID STRING, MODEL_ID STRING, INPUT_HASH STRING, OUTPUT_SUMMARY CLOB, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROMPT_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROOF_CHAIN ( CHAIN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROOF_OF_EXISTENCE_INDEX ( POE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ISSUE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, PROV_ID STRING, ANCHOR_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ANCHOR_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TXID STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ANCHOR_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TXID STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ANCHOR_INDEX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TYPE STRING, ANCHOR_VALUE STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_ANCHOR_RETRIES ( RETRY_ID STRING PRIMARY KEY, ANCHOR_ID STRING, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_AUDIT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SCOPE VARIANT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_CERT_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CERT_FP STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_CHAIN ( PROV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PREV_HASH STRING, ANCHOR_TXID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_CHAIN_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_CHAIN_NODES ( NODE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, NODE_META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_CHECKSUM_INDEX ( CHK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECKSUM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_COMPARISON_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_COMPARISON_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DIFFS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EDGES_6252 ( EDGE_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, RELATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EDGES_V2 ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EDGE_INDEX ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EDGE_LOGS_6253 ( LOG_ID STRING PRIMARY KEY, EDGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_EVENT_INDEX ( EVT_IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVENT_TYPE STRING, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_GRAPH_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, RELATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_GRAPH_METRICS ( MET_ID STRING PRIMARY KEY, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_GRAPH_NODES ( NODE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NODE_TYPE STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_GRAPH_NODES ( NODE_ID STRING PRIMARY KEY, NODE_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, NODE_REF STRING, ATTRIBUTES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_INDEX ( PI_ID STRING PRIMARY KEY, REF STRING, METADATA VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, ANCHOR_TXID STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_INDEX ( PROV_IDX_ID STRING PRIMARY KEY, PROV_HASH STRING, SOURCE_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_INDEX_13 ( PROV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROV_HASH STRING, ANCHOR_TXID STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_LINKS ( PL_ID STRING PRIMARY KEY, PARENT_REF STRING, CHILD_REF STRING, RELATION_TYPE STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_NODES ( NODE_ID STRING PRIMARY KEY, NODE_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_NODE_METADATA ( NODE_ID STRING PRIMARY KEY, DOC_REF STRING, NODE_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, PROV_ID STRING, STATUS STRING, ISSUES VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONSTRUCTION_JOBS ( JOB_ID STRING PRIMARY KEY, PROV_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RECONSTRUCTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_RETENTION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, POLICY_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_SEARCH_VIEWS ( VIEW_ID STRING PRIMARY KEY, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVENANCE_VERIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ACCESS_POLICY ( POLICY_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ACCOUNT_MAPPINGS ( MAP_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ACCOUNT_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SEVERITY STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_AML_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ANNOUNCE_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, MESSAGE CLOB, ANNOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_API_KEYS ( KEY_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_API_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER STRING, PATH STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_API_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ENDPOINT STRING, REQUEST VARIANT, RESPONSE VARIANT, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_API_QUOTA ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, QUOTA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ASSURANCE_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_AUDIT_INDEX ( PAIDX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, AUDIT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_AUDIT_TRAILS ( AUDIT_ID STRING PRIMARY KEY, PROVIDER STRING, ACTION JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_AUDIT_TRAILS ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKFILL_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKOFF ( BACKOFF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKOFF ( BACKOFF_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, CURRENT_DELAY_MS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKOFF_07 ( BACKOFF_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, ATTEMPTS INT, LAST_ERROR VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BACKOFF_STATE ( STATE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, BACKOFF_UNTIL TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BENCHMARK_RESULTS ( BENCH_ID STRING PRIMARY KEY, PROVIDER STRING, BENCH_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BENCHMARK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BENCHMARK_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, BENCH_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, PROVIDER STRING, ALLOC_JSON VARIANT, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_DISCREPANCIES ( DISC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_DISCREPANCIES ( DISC_ID STRING PRIMARY KEY, RECON_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AMOUNT NUMBER, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, BILL_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_HISTORY ( ENTRY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AMOUNT NUMBER, CURRENCY STRING, BILLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_INVOICES ( INVOICE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RUN_ID STRING, AMOUNT NUMBER, DUE_DATE TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_MAPPINGS ( MAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_PAYMENTS ( PAYMENT_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, PAID_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_POLICIES ( POLICY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RATES ( RATE_ID STRING PRIMARY KEY, PROVIDER STRING, RATE_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RATES ( RATE_ID STRING PRIMARY KEY, PROVIDER STRING, RATE_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD JSON, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, AMOUNTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BILLING_USAGE ( USG_ID STRING PRIMARY KEY, PROVIDER STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_BLACKLIST ( BL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CALLBACK_INDEX ( CB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EVENT_TYPE STRING, HANDLER_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPABILITIES (CAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPABILITY STRING, DETAILS VARIANT);

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPABILITY_INDEX ( CAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPABILITIES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPABILITIES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITIES ( PROVIDER_ID STRING PRIMARY KEY, MAX_CONCURRENT INT, CURRENT_CONCURRENT INT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY ( CAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAP_METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY ( CAP_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CAPACITY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PLAN_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_CLAIMS ( CLAIM_ID STRING PRIMARY KEY, PROVIDER STRING, CLAIM_JSON VARIANT, CLAIMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_CLAIM_RESPONSES ( RESP_ID STRING PRIMARY KEY, CLAIM_ID STRING, RESPONSE_JSON VARIANT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, PROVIDER STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPACITY JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CAPACITY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_RUNBOOK ( RUNBOOK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_USAGE ( USAGE_ID STRING PRIMARY KEY, PLAN_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CAPACITY_USAGES ( USG_ID STRING PRIMARY KEY, PROFILE_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_PEM CLOB, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CERT PEM CLOB, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATE_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_ID STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATE_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATE_ROTATIONS ( ROT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, OLD_CERT_ID STRING, NEW_CERT_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATE_STORE ( CERT_STORE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_PEM CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATION_COMPLETIONS ( COMP_ID STRING PRIMARY KEY, REQ_ID STRING, PROVIDER STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERTIFICATION_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, PROVIDER STRING, REQS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_AUDIT_TRAILS ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_METADATA ( CERT_ID STRING PRIMARY KEY, PROVIDER STRING, CERT_FINGERPRINT STRING, CERT_META VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_ROTATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ROTATE_EVERY_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_STATUS ( STATUS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_STATUS_INDEX_6216 ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_STATUS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_STATUS_LOGS_6217 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_STORE ( CERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_PEM CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CERT_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REQUESTED_BY STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CHARGEBACKS ( CHARGE_ID STRING PRIMARY KEY, PROVIDER STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, CHARGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMMS_CONFIG ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPATIBILITY_TESTS ( TEST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, NAME STRING, SCRIPT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPAT_MATRIX ( CM_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, COMPAT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPAT_RESULTS ( RES_ID STRING PRIMARY KEY, TEST_ID STRING, PROVIDER_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CERTS ( PC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_REF STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, RESULT STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_REF STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CHECKS_02 ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, RESULT VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_CHECKS_HISTORY ( CH_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CHECK_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_DOCS ( DOC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DOC_LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_DOCUMENTS ( DOC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DOC_META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_FAILING_ITEMS ( ITEM_ID STRING PRIMARY KEY, REVIEW_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_INDEX_6271 ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COMPLIANCE_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_LOGS_6272 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, COMPLIANCE_JSON VARIANT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COMPLIANCE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, DOC_ID STRING, REVIEWER STRING, RESULT STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIGS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_CHANGES ( CHANGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANGE JSON, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, PROVIDER STRING, CHANGE_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_HISTORY ( HISTORY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONFIG JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPLIED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TEMPLATE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONFIG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONN_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONN_HISTORY ( CONN_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONSENT_06 ( CONSENT_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, ACCOUNT_ID STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONTACT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER STRING, TERMS VARIANT, STARTED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONTRACT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONTRACT_TEXT CLOB, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS CLOB, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS CLOB, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS CLOB, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS VARIANT, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, TERMS VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TERM_ID STRING, ACTION JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_CHANGES ( CHANGE_ID STRING PRIMARY KEY, CONTRACT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_DOCS ( DOC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, DOC_URL STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_EXPIRY ( EXP_ID STRING PRIMARY KEY, CONTRACT_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, NOTIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_INDEX ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_RENEWALS ( RENEW_ID STRING PRIMARY KEY, CONTRACT_ID STRING, PROPOSED_TERMS VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_RENEWALS ( RENEW_ID STRING PRIMARY KEY, CONTRACT_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_TERMS ( TERM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS CLOB, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_VERSIONS ( PCV_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CONTRACT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, CONTRACT_ID STRING, VERSION_NUMBER INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COSTS ( COST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_CURRENCY STRING, COST_AMOUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COSTS ( COST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COSTS_11 ( COST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_VARIANT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ALLOCATION ( ALLOC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ALLOC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, COST_ID STRING, ACCOUNT_ID STRING, ALLOC_AMOUNT NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_CENTER ( CC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_CENTER JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_CENTERS ( COST_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, COST_META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, ESTIMATE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, PROVIDER STRING, ESTIMATE_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ESTIMATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_ESTIMATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ESTIMATES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_FORECAST ( FORECAST_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, ESTIMATES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_LEDGER ( ENTRY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AMOUNT NUMBER, CHARGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_MODELS ( MODEL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_FORMULA STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER STRING, COST_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COST_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_RECONCILE ( RECON_ID STRING PRIMARY KEY, PROVIDER STRING, FINDINGS JSON, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, COST_SUMMARY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_COST_TRENDS ( TREND_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_TYPE STRING, CRED_DATA VARIANT, LAST_ROTATED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_TYPE STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS_02 ( CRED_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_TYPE STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS_06 ( CRED_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CRED_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANGED_BY STRING, CHANGE_PAYLOAD VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS_HISTORY ( CHG_ID STRING PRIMARY KEY, CRED_ID STRING, ACTION STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIALS_HISTORY ( HISTORY_ID STRING PRIMARY KEY, CRED_ID STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CRED_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VAULT_ID STRING, ACTION STRING, BY_USER STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATE ( ROTATE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATION ( ROT_ID STRING PRIMARY KEY, PROVIDER STRING, SECRET_META VARIANT, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATION ( ROT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATION ( ROT_ID STRING PRIMARY KEY, PROVIDER_ID STRING,LAST_ROTATED_AT TIMESTAMP_LTZ, NEXT_ROTATION_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, CRED_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, PROVIDER STRING, CRED_META VARIANT, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROT_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_ROTATION_LOGS ( LOG_ID STRING PRIMARY KEY, ROT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDENTIAL_VAULT ( VAULT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDITS ( CREDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, BALANCE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDIT_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER STRING, LIMIT JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CREDIT_NOTES ( NOTE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, AMOUNT NUMBER, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CRED_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CRED_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CRED_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_META VARIANT, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CRED_HISTORY ( H_ID STRING PRIMARY KEY, CRED_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CRED_ROTATION ( ROT_ID STRING PRIMARY KEY, CRED_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_CRL_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, CERT_ID STRING, CRL_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DECOMMISSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEGRADED_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, DEPLOY_JSON VARIANT, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEPLOY_ARTIFACTS ( ART_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ARTIFACT_TYPE STRING, LOCATION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEPRECATION_PLANS ( PLAN_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEPRECATION_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTICE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DEPRECATION_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DEPRECATE_AT TIMESTAMP_LTZ, NOTE STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPATCH_LOG ( DISPATCH_ID STRING PRIMARY KEY, REQUEST_ID STRING, PROVIDER_ID STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPATCH_QUEUE ( DISPATCH_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPATCH_RESULTS ( RESULT_ID STRING PRIMARY KEY, DISPATCH_ID STRING, STATUS STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPUTE_LOGS ( DISPUTE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, DETAILS VARIANT, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPUTE_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, DISC_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_DISPUTE_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EMAIL_CONFIGS ( CFG_ID STRING PRIMARY KEY, PROVIDER STRING, SMTP_JSON VARIANT, DEFAULT_FROM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EMERGENCY_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONTACT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ENDPOINTS ( ENDPOINT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, URL STRING, METHOD STRING, LAST_CHECK TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ENDPOINTS_HISTORY ( PID STRING PRIMARY KEY, PROVIDER_ID STRING, URL STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ENDPOINT_CATALOG ( ENDPOINT_ID STRING PRIMARY KEY, PROVIDER STRING, ENDPOINT_TYPE STRING, URL STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ENDPOINT_CONFIGS ( EP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ENDPOINT_URL STRING, AUTH_METHOD STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERRORS_07 ( ERROR_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, BUNDLE_ID STRING, ERROR_TEXT STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_BUDGET ( BUDGET_ID STRING PRIMARY KEY, PROVIDER STRING, ALLOWED_ERRORS INT, WINDOW JSON, TRACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_CODES ( CODE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ERROR_CODE STRING, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_CORRELATION ( CORR_ID STRING PRIMARY KEY, PROVIDER STRING, CORRELATION_JSON VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_DASHBOARD ( DASH_ID STRING PRIMARY KEY, PROVIDER STRING, ERROR_TYPE STRING, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATES ( ERR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ERROR_COUNT NUMBER, INTERVAL_START TIMESTAMP_LTZ, INTERVAL_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATES ( ERR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ERROR_RATE NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATES ( METRIC_ID STRING PRIMARY KEY, PROVIDER STRING, ERROR_RATE NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATES ( MET_ID STRING PRIMARY KEY, PROVIDER STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATES ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATE_HISTORY ( ENTRY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ERROR_RATE_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_DISPATCH_LOG ( LOG_ID STRING PRIMARY KEY, DISPATCH_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_DLQ ( DLQ_ID STRING PRIMARY KEY, STREAM_ID STRING, PAYLOAD VARIANT, ERROR TEXT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_INDEX ( PEI_ID STRING PRIMARY KEY, EVENT_REF STRING, PROVIDER_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_LOGS ( PEL_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, EVENT_REF STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, EVENT_TYPE STRING, MAPPED_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_PARSED ( EVENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, PARSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_RAW ( RAW_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_REPLAYS ( REPLAY_ID STRING PRIMARY KEY, DLQ_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_EVENT_STREAMS ( STREAM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EVENT JSON, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_CONFIG ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_GROUP STRING, CONFIG_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_CONFIGS ( CFG_ID STRING PRIMARY KEY, PRIMARY_PROVIDER STRING, SECONDARY_PROVIDER STRING, SWITCH_RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_EVENTS ( EVENT_ID STRING PRIMARY KEY, CFG_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_EVENTS ( EVENT_ID STRING PRIMARY KEY, FROM_PROVIDER STRING, TO_PROVIDER STRING, TRIGGER_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_EVENTS ( EVENT_ID STRING PRIMARY KEY, PLAN_ID STRING, TRIGGER_REASON STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_EVENTS ( EVT_ID STRING PRIMARY KEY, FROM_PROVIDER STRING, TO_PROVIDER STRING, REASON STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, RULE_ID STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, OUTCOME VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_PLAN ( PLAN_ID STRING PRIMARY KEY, PROVIDER_GROUP STRING, PRIORITY_LIST ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, ORDERED_PROVIDERS ARRAY, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, ORDERED_PROVIDERS ARRAY, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_POLICIES ( POLICY_ID STRING PRIMARY KEY, PROVIDERS ARRAY, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_POLICIES ( POLICY_ID STRING PRIMARY KEY, PROVIDER_GROUP STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RULES ( RULE_ID STRING PRIMARY KEY, PRIMARY_PROVIDER STRING, SECONDARY_PROVIDER STRING, CONDITIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RULES ( RULE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, FALLBACK_PROVIDER_ID STRING, CONDITION VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RULES ( RULE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, FALLBACK_PROVIDER STRING, CONDITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RULES ( RULE_ID STRING PRIMARY KEY, SOURCE_PROVIDER STRING, TARGET_PROVIDERS ARRAY, CONDITIONS VARIANT, PRIORITY INT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, TRIGGER_REASON STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_GROUP STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_STATE ( STATE_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTIVE_PROVIDER STRING, SWITCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_STATE ( STATE_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTIVE_PROVIDER STRING, SWITCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILOVER_TESTS ( TEST_ID STRING PRIMARY KEY, PROVIDER STRING, SCENARIO JSON, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FAILURES ( FAILURE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, FAILURE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FALLBACKS ( FALLBACK_ID STRING PRIMARY KEY, PRIMARY_PROVIDER STRING, FALLBACK_PROVIDERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FALLBACKS_04 ( FALLBACK_ID STRING PRIMARY KEY, PRIMARY_PROVIDER STRING, FALLBACK_PROVIDERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FALLBACK_HISTORY ( H_ID STRING PRIMARY KEY, REQUEST_REF STRING, PRIMARY_PROVIDER STRING, FALLBACK_PROVIDER STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FALLBACK_POLICIES ( POLICY_ID STRING PRIMARY KEY, PRIORITY ARRAY, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FALLBACK_RULES ( RULE_ID STRING PRIMARY KEY, POLICY_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, FEATURE_NAME STRING, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, FLAG_KEY STRING, FLAG_VALUE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEATURE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, FEATURES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEATURE_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, FEATURE_KEY STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEE_APPLICATIONS ( APP_ID STRING PRIMARY KEY, RUN_ID STRING, PROVIDER_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FEE_RULES ( RULE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FINANCIAL_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_FINANCIAL_TERMS ( TERM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_GEO_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, GEO JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_GEO_COVERAGE ( COVER_ID STRING PRIMARY KEY, PROVIDER_ID STRING, COUNTRY_CODE STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_GEO_RESTRICTIONS ( GR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ALLOWED_REGIONS ARRAY, DENIED_REGIONS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_GEO_RESTRICTIONS ( RESTR_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, REGION STRING, ENFORCED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_GOVERNANCE ( CHECK_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CHECK_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH ( PH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTHCHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTHCHECKS ( HC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_04 ( PROVIDER_NAME STRING PRIMARY KEY, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_TYPE STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECK_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_EXPR STRING, INTERVAL_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECK_HISTORY ( HISTORY_ID STRING PRIMARY KEY, CONFIG_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, EVENT_TYPE STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_HISTORY ( HID STRING PRIMARY KEY, PROVIDER_NAME STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, HEALTH_SUMMARY VARIANT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_SNAPSHOT ( SNAP_ID STRING PRIMARY KEY, PROVIDER_REF STRING, STATUS JSON, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_SUMMARY ( HS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_SUMMARY ( SUM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEALTH_TRENDS ( TREND_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEARTBEAT ( PROVIDER_ID STRING PRIMARY KEY, LAST_HEARTBEAT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_HEARTBEAT ( HB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SEVERITY STRING, DESCRIPTION STRING, STATUS STRING DEFAULT 'OPEN', RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, INCIDENT_ID STRING, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_HISTORY ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER STRING, DESCRIPTION CLOB, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY CLOB, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY CLOB, SEVERITY STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_LOG ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY CLOB, STATUS STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, INCIDENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER STRING, SEVERITY STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER STRING, SEVERITY STRING, DESCRIPTION STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TITLE STRING, DESCRIPTION CLOB, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_SLACK_ALERTS ( ALERT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SLACK_PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_STATS ( STAT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, INCIDENT_COUNT INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INCIDENT_SUMMARY ( SUM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, INCIDENT_COUNT INT, LAST_INCIDENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INDEX_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PROVIDER STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INTEGRATION_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHECK_NAME STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INTEGRATION_HEARTBEAT ( HB_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INTEGRATION_SECRETS ( SECRET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SECRET_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INVOICE_LINKS ( LINK_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, INVOICE_REF STRING, URI STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INVOICE_MAP ( MAP_ID STRING PRIMARY KEY, PROVIDER STRING, INVOICE_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INVOICE_MATCHING ( MATCH_ID STRING PRIMARY KEY, PROVIDER_INV_REF STRING, STATUS STRING, MATCHED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INVOICING_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_INVOICING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, INVOICE_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUMMARY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_KEYRING ( KEY_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, KEY_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_KEY_ROTATIONS ( ROT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_KEY_ROTATION_POLICY ( POLICY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_HISTOGRAM ( HIST_ID STRING PRIMARY KEY, PROVIDER STRING, BUCKET_MS NUMBER, COUNT INT, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_HISTOGRAMS ( HIST_ID STRING PRIMARY KEY, PROVIDER STRING, BUCKETS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_HISTOGRAMS ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, BUCKETS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_HISTORY ( ENTRY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LAT_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER STRING, P95_MS NUMBER, P99_MS NUMBER, SAMPLE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER STRING, PERCENTILES VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, LATENCY_BUCKETS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_ROLLING ( ROLL_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, LATENCY_MS_AVG NUMBER );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LATENCY_STATS ( STATS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, P50_MS NUMBER, P95_MS NUMBER, P99_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LEGAL_ATTACHMENTS ( ATT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ATTACHMENT_URL STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LICENSE_STATUS ( LS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_LOAD_BALANCER ( LB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STRATEGY STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE ( MAINT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, DURATION_MIN INT, NOTES VARIANT);

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE ( MAINT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_EVENTS ( EVENT_ID STRING PRIMARY KEY, WINDOW_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_LOG ( LOG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, MAINTENANCE_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, PROVIDER STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, PROVIDER_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, PROVIDER_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, RECURRING JSON );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINTENANCE_WINDOWS ( WIN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAINT_WINDOW ( MW_ID STRING PRIMARY KEY, PROVIDER STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METADATA_CACHE ( CACHE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, META VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER STRING, LATENCY_MS FLOAT, ERR_RATE FLOAT, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS (METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS_07 ( METRIC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METRIC_KEY STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS_11 ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_METRICS_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METRIC JSON, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, FROM_PROVIDER STRING, TO_PROVIDER STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MIGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MIGRATION_TASKS ( TASK_ID STRING PRIMARY KEY, FROM_PROVIDER STRING, TO_PROVIDER STRING, STATUS STRING DEFAULT 'PENDING', META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_MIRROR_INDEX ( MIRROR_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SOURCE_REF STRING, MIRRORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_NEGOTIATION_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, NEGOTIATION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_NOTIFICATION_CHANNELS_11 ( CHANNEL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANNEL_TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OAUTH_LOGS_6219 ( LOG_ID STRING PRIMARY KEY, REG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OAUTH_REGISTRY_6218 ( REG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CRED_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OCSP_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, CERT_ID STRING, OCSP_JSON VARIANT, POLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION STRING, BY_USER STRING, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, PROVIDER STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_REQUESTS ( REQ_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, PROVIDER_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARDING_STATUS ( STATUS_ID STRING PRIMARY KEY, PROVIDER STRING, ACCOUNT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARD_DOCS ( DOC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, DOC_URL STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONBOARD_HISTORY ( H_ID STRING PRIMARY KEY, PROVIDER STRING, STEP JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONCALL_EVENTS ( EVENT_ID STRING PRIMARY KEY, ROT_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONCALL_ROSTER ( ROSTER_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONTACTS ARRAY, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONCALL_ROTA ( ROTA_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ROTAS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ONCALL_ROTATION ( ROT_ID STRING PRIMARY KEY, PROVIDER STRING, ONCALL_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OPS_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OUTAGES ( OUTAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT);

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OUTAGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, REPORT_ID STRING, SENT_TO ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OUTAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OUTAGE_SCHEDULE ( OUTAGE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_OUTAGE_WINDOW_INDEX ( WINDOW_ID STRING PRIMARY KEY, PROVIDER_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PATCH_NOTES ( NOTE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, NOTE CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYMENT_METHODS ( PM_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METHOD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYMENT_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RUN_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYMENT_TERMS ( TERM_ID STRING PRIMARY KEY, PROVIDER STRING, TERMS_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYMENT_TERMS ( TERM_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYOUTS ( PAYOUT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, AMOUNT NUMBER, CURRENCY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYOUT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PAYOUT_RUNS ( RUN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AMOUNT NUMBER, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PENALTIES ( PEN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REASON STRING, AMOUNT NUMBER, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PENALTY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, AMOUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PENALTY_RUNS ( RUN_ID STRING PRIMARY KEY, SLA_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE ( PERF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_DASHBOARDS ( DASH_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, PERIOD JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_HISTORY ( PERF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_SCORES ( SCORE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SCORES VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERFORMANCE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERF_BASELINES ( BASE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PERF_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PHASED_MIGRATIONS ( MIG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PHASES VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POLICY_AUDITS ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, PROVIDER_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POLICY_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, POLICY_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, PROVIDER_REF STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POOLS ( POOL_ID STRING PRIMARY KEY, NAME STRING, PROVIDERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POOL_STATS ( STATS_ID STRING PRIMARY KEY, POOL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_POSTMORTEM_INDEX ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, PUBLISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PRICING_CHANGES ( CHANGE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PRICING_HISTORY ( PH_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PRICE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PRIVACY_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, PROVIDER STRING, SUMMARY JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_PRIVACY_VIOLATIONS ( V_ID STRING PRIMARY KEY, PROVIDER STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUARANTINE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, Q_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUARANTINE_LIST ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUARANTINE_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUARANTINE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUEUES ( QUEUE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REQUEST_ID STRING, PRIORITY NUMBER DEFAULT 0, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, MAX_PER_MIN INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, QUOTA JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTAS_04 ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, QUOTA VARIANT, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, DESCRIPTION STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, THRESHOLD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, PROVIDER STRING, TENANT_ID STRING, QUOTA NUMBER, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTIONS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER STRING, QUOTA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_PROFILES ( PROFILE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, QUOTA JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, ALLOC_ID STRING, USED NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, USAGE JSON );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, USAGE_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USG_ID STRING PRIMARY KEY, PROFILE_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_USAGE ( USG_ID STRING PRIMARY KEY, PROFILE_ID STRING, WINDOW JSON, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, PROFILE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_QUOTA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, QUOTA_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARDS ( RATECARD_ID STRING PRIMARY KEY, PROVIDER STRING, RATE_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARD_CHANGES ( CHANGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARD_HISTORY ( HIST_ID STRING PRIMARY KEY, RATECARD_ID STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGE_META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARD_INDEX_6220 ( RC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RATECARD JSON, EFFECTIVE_FROM TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARD_LOGS_6221 ( LOG_ID STRING PRIMARY KEY, RC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATECARD_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_CARDS ( RATE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CURRENCY STRING, PRICING JSON, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_CHANGE_HISTORY ( H_ID STRING PRIMARY KEY, PROVIDER STRING, OLD_RATE JSON, NEW_RATE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LIMIT_PER_MINUTE INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW_SECONDS INT, MAX_CALLS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( PL_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS ( RL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LIMIT_JSON VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMITS_04 ( LIMIT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_LIMIT_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LIMIT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATE_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW_START TIMESTAMP_LTZ, CALLS INT DEFAULT 0, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RATING_HISTORY ( RH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RATING NUMBER, RATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SOURCE STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RBAC_ROLES ( ROLE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ROLE_NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RECERT_HISTORY ( H_ID STRING PRIMARY KEY, PROVIDER STRING, ACTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RECERT_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER STRING, DUE_DATE DATE, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RECOMMENDATIONS ( REC_ID STRING PRIMARY KEY, REQUEST_ID STRING, RANKED_PROVIDERS VARIANT, RECOMMENDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REGIONS ( PR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REGION STRING, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REGIONS (REGION_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REGION STRING, ENDPOINT VARIANT);

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REGION_MAPPING ( MAP_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, REGION STRING, ENDPOINT STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REGION_STATUS ( PRS_ID STRING PRIMARY KEY, PR_ID STRING, STATUS STRING, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REGION_STATUS ( RS_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, REGION STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RELIABILITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RELIABILITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RELIABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RELIABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RENEWAL_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REPUTATION_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REQUESTS_01 ( REQ_ID STRING PRIMARY KEY, PROVIDER_CONFIG_ID STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESILIENCE_HISTORY ( HIST_ID STRING PRIMARY KEY, TEST_ID STRING, PROVIDER STRING, SUMMARY VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESILIENCE_TESTS ( TEST_ID STRING PRIMARY KEY, PROVIDER STRING, SCENARIO VARIANT, RESULT JSON, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESPONSES_01 ( RESP_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESPONSE_HISTOGRAM ( HIST_ID STRING PRIMARY KEY, PROVIDER STRING, BUCKETS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESPONSE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PATTERN VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RESPONSE_TIME ( RT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LATENCY_MS NUMBER, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETIREMENT_RECORDS ( RET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RETIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETRY_LOG_07 ( RETRY_ID STRING PRIMARY KEY, BACKOFF_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETRY_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, RETRIES INT, SUCCESS_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, CALL_REF STRING, PROVIDER_ID STRING, STATUS STRING DEFAULT 'PENDING', NEXT_ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RETRY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REVIEW_NOTES ( NOTE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, NOTE_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REVIEW_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SCORE NUMBER, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_RISK_MATRIX ( MATRIX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, RISK_JSON VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROLLBACK_PLANS ( PLAN_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PLAN VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROTATION_06 ( ROTATION_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROTATION_LOG ( ROT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, OLD_ENDPOINT STRING, NEW_ENDPOINT STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, ROT_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTER_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING ( ROUTE_ID STRING PRIMARY KEY, TENANT_ID STRING, ROUTE_RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, OLD_CONFIG VARIANT, NEW_CONFIG VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_EVAL_LOG ( LOG_ID STRING PRIMARY KEY, REQUEST_REF STRING, SELECTED_PROVIDER STRING, EVAL_JSON VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_METRICS ( MET_ID STRING PRIMARY KEY, RULE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, ROUTE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_ROUTING_RULES (RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, PRIORITY INT, ACTIVE BOOLEAN DEFAULT TRUE);

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECRETS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECRETS_META ( SECRET_META_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SECRET_REF STRING, ROTATED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECURITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECURITY_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECURITY_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SEVERITY STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SECURITY_POSTURE ( POSTURE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ASSESSMENT JSON, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SELECTION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SELECTED_PROVIDER STRING, SELECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SELECTION_LOGS ( LOG_ID STRING PRIMARY KEY, REQUEST_ID STRING, SELECTED_PROVIDER STRING, REASON JSON, SELECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SERVICE_LEVELS ( SL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SETTLEMENT_JSON VARIANT, SETTLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER STRING, AMOUNT NUMBER, CURRENCY STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SETTLEMENT_STATUS ( SETTLE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLO VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLACK_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ALERT_BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLACK_CONFIG ( CFG_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CHANNEL STRING, HOOK_URL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLACK_CONFIGS ( CFG_ID STRING PRIMARY KEY, PROVIDER STRING, WEBHOOK_URL STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_AGREEMENTS ( SLA_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SLA_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER STRING, SLO_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, THRESHOLD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_BREACHES ( BREACH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_COMPLIANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_DEFINITIONS ( SLA_ID STRING PRIMARY KEY, PROVIDER STRING, TERMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ISSUE_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_FAILURES ( FAILURE_ID STRING PRIMARY KEY, PROVIDER STRING, INCIDENT_REF STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_HISTORY ( HISTORY_ID STRING PRIMARY KEY, PROVIDER STRING, SLA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_HISTORY ( HISTORY_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_HISTORY (HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLO VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_INDEX ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_INDEX ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TERMS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_MITIGATION_LOGS ( LOG_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, PROVIDER STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_RECORDS ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_RECORDS ( SLA_REC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_REGISTRY ( SLA_ID STRING PRIMARY KEY, PROVIDER_REF STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD JSON, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_TARGETS ( TARGET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_TERMS ( TERM_ID STRING PRIMARY KEY, PROVIDER STRING, SLA_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_TRACKING ( TRACK_ID STRING PRIMARY KEY, PROVIDER STRING, SLA_JSON VARIANT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_REF STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, SLA_ID STRING, INCIDENT_REF STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, PROVIDER STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLA_VIOLATIONS ( V_ID STRING PRIMARY KEY, PROVIDER STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLRS ( SLR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLR_DEFINITION VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SLR_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER STRING, SLR_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SMS_CONFIGS ( CFG_ID STRING PRIMARY KEY, PROVIDER STRING, API_JSON VARIANT, CARRIER INFO VARCHAR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, LAST_PING TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_11 ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_DASHBOARD ( DASH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_DASHBOARD ( DASH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_HISTORY ( HIST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_STATUS_PAGES ( PAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, URL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TENANT_ID STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SUBSCRIPTION_EVENTS ( EVT_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SUPPORT_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, NAME STRING, EMAIL STRING, PHONE STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SWITCH_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, FROM_PROVIDER STRING, TO_PROVIDER STRING, SWITCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER STRING, OBJECTS JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUMMARY JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TAGS (TAG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TAGS_HISTORY ( PTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TAG STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TELEMETRY ( TELE_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TELEMETRY_04 ( TELE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METRIC_KEY STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TELEMETRY_AGG ( AGG_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TERMS_ACCEPTANCE ( ACC_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, ACCEPTED_BY STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TEST_HARNESS ( HARNESS_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, TEST_JSON VARIANT, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TEST_MATRIX ( MATRIX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, TESTS VARIANT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TEST_PAYLOADS ( PAYLOAD_ID STRING PRIMARY KEY, PROVIDER_ID STRING, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TEST_RESULTS ( RESULT_ID STRING PRIMARY KEY, HARNESS_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, PAYLOAD_ID STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_THROTTLE_CONFIGS ( CFG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_THROTTLE_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONFIG_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_THROTTLE_EVENTS ( EVT_ID STRING PRIMARY KEY, CFG_ID STRING, METRICS VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_THROUGHPUT ( METRIC_ID STRING PRIMARY KEY, PROVIDER STRING, REQ_PER_MIN NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_THROUGHPUT_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TIMEOUTS_01 ( TIMEOUT_ID STRING PRIMARY KEY, PROVIDER_CONFIG_ID STRING, TIMEOUT_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TRAFFIC_STATS ( STAT_ID STRING PRIMARY KEY, PROVIDER STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, CALLS INT, ERRORS INT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TRANSACTION_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TRANSACTION_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_TRUST_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, PROVIDER_ID STRING, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_URIS ( URI_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PATH STRING, TYPE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_USAGE_ESTIMATES ( EST_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EST_WINDOW VARIANT, EST_METRICS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_USAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_VENDOR_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, PROVIDER_REF STRING, CONTACT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_VERIFICATION_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROVIDER STRING, CHECK_JSON VARIANT, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_WEBHOOKS ( WEBHOOK_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PAYLOAD_SCHEMA VARIANT, LAST_RECEIVED_AT TIMESTAMP_LTZ, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_WEBHOOK_DLQ ( DLQ_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PAYLOAD VARIANT, ERROR_MSG STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_WEBHOOK_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LAST_RECEIVED_AT TIMESTAMP_LTZ, STATUS STRING, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_WEBHOOK_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PROVIDER_WHITELIST ( WL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVISIONING_AUDIT_INDEX_6146 ( AUDIT_ID STRING PRIMARY KEY, RUN_REF STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PROVISIONING_AUDIT_LOGS_6147 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MAP_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_JOBS_08 ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_KEYS ( KEY_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_KEYS ( KEY_ID STRING PRIMARY KEY, TENANT_ID STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_MAPPINGS ( MAP_ID STRING PRIMARY KEY, ORIGINAL_REF STRING, PSEUDO_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_OPS_LOG ( LOG_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_REGISTRY ( REG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ROWS_PROCESSED INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYMIZATION_RESULTS_08 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, AFFECTED_ROWS NUMBER, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PSEUDONYM_MAPPINGS ( MAP_ID STRING PRIMARY KEY, ORIGINAL_REF STRING, PSEUDO_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, TARGET_TABLE STRING, PURGED_COUNT INT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TARGET_TABLE STRING, ROW_COUNT NUMBER, PURGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT ( PURGE_ID STRING PRIMARY KEY, ENTITY_NAME STRING, ROWS_PURGED NUMBER, CUT_OFF TIMESTAMP_LTZ, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT( PURGE_ID STRING PRIMARY KEY, ENTITY_NAME STRING, ROWS_PURGED NUMBER, CUT_OFF TIMESTAMP_LTZ, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT_06 ( AUDIT_ID STRING PRIMARY KEY, PURGE_ID STRING, ROWS_PURGED NUMBER, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT_11 ( PURGE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, ROWS_PURGED NUMBER, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, TARGET_REF STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT_TRAIL ( PA_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED_COUNT INT, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PURGE_ERRORS ( ERR_ID STRING PRIMARY KEY, PURGE_ID STRING, ERROR_DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, CRON_EXPR STRING, RETENTION_DAYS INT, LAST_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_JOBS_09 ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PURGE_LOGS ( LOG_ID STRING PRIMARY KEY, PURGE_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_OPERATIONS ( OP_ID STRING PRIMARY KEY, TARGET_TABLE STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.PURGE_OPERATION_RESULTS ( RES_ID STRING PRIMARY KEY, OP_ID STRING, DELETED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_QUEUE_06 ( PURGE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAIL VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PURGE_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, CRON_EXPR STRING, RETENTION_DAYS INT, ENABLED BOOLEAN DEFAULT TRUE, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.PURGE_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, TARGET_TABLE STRING, CRON_EXPR STRING, RETENTION_DAYS INT, LAST_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PURGE_SCHEDULE_HISTORY ( HIST_ID STRING PRIMARY KEY, POLICY_ID STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.PUSH_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, PROVIDER_RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_DELIVERY_QUEUE ( Q_ID STRING PRIMARY KEY, CHANNEL_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_DELIVERY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, RESPONSE VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_NOTIFICATIONS_10 ( NOTIF_ID STRING PRIMARY KEY, TARGET_REF STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_NOTIFICATION_INDEX ( PN_ID STRING PRIMARY KEY, DEVICE_REF STRING, STATUS STRING, LAST_SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEVICE_TOKEN STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TITLE STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.PUSH_TEMPLATES_12 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QA_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, METRICS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QA_ISSUE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, ISSUE_ID STRING, AUTHOR STRING, BODY CLOB, COMMENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QA_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, SUMMARY STRING, REPORTR STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QC_ISSUE_TRIAGE_QUEUE ( Q_ID STRING PRIMARY KEY, RES_ID STRING, TRIAGE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QC_RULE_REGISTRY ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QC_RULE_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, RULE_ID STRING, BUNDLE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QC_TRIAGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QES_SIGNATURE_REQUESTS ( QES_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACCOUNT_ID STRING, QES_STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QR_SCAN_EVENTS ( EVENT_ID STRING PRIMARY KEY, QR_ID STRING, SCANNER_REF STRING, SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, CHECK_ID STRING, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_ASSURANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, RULE JSON, LAST_RUN_AT TIMESTAMP_LTZ, LAST_RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_ASSURANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_CONTROL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_CONTROL_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_FIX_JOBS ( JOB_ID STRING PRIMARY KEY, VIOL_ID STRING, FIX_SCRIPT STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_FIX_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_ISSUE_LOGS_6331 ( LOG_ID STRING PRIMARY KEY, ISSUE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_LOGS_6294 ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_RESULTS ( RESULT_ID STRING PRIMARY KEY, CHECK_ID STRING, TARGET_REF STRING, RESULT VARIANT, RAN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_REVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, Q_ID STRING, BUNDLE_ID STRING, REVIEWER STRING, SCORE NUMBER, NOTES VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, BUNDLE_ID STRING, OUTCOME STRING, NOTES VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SCORE NUMBER, COMMENTS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUALITY_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, METRIC_NAME STRING, MIN_VALUE NUMBER, MAX_VALUE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUARANTINE_BLOBS ( QUARANTINE_ID STRING PRIMARY KEY, REASON STRING, PAYLOAD VARIANT, QUARANTINED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUARANTINE_HISTORY_06 ( HISTORY_ID STRING PRIMARY KEY, QUARANTINE_ID STRING, ACTION STRING, ACTED_BY STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUARANTINE_STORE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, TOP_QUERIES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_AUDIT ( QA_ID STRING PRIMARY KEY, USER_REF STRING, QUERY_TEXT STRING, RESULT_SUMMARY VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_AUDIT_TRACES ( TRACE_ID STRING PRIMARY KEY, QUERY_TEXT STRING, EXECUTOR STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DURATION_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.QUERY_BUDGET_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_BUDGET_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, BUDGET_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_BUDGET_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, METRICS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_CACHE_POLICIES ( QP_ID STRING PRIMARY KEY, NAME STRING, TTL_SECONDS INT, MAX_ENTRIES INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_CACHE_STATS ( QCS_ID STRING PRIMARY KEY, CACHE_KEY STRING, HITS NUMBER, MISSES NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_ALERTS ( ALERT_ID STRING PRIMARY KEY, EST_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, QUERY_HASH STRING, COST_ESTIMATE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, QUERY_HASH STRING, ESTIMATE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, QUERY_HASH STRING, EST_COST NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_MONITORING ( MON_ID STRING PRIMARY KEY, QUERY_ID STRING, COST NUMBER, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_COST_TRACKING ( TRACK_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUERY_HASH STRING, COST NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_ERROR_RATES ( ERR_ID STRING PRIMARY KEY, QUERY_REF STRING, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_FALLBACK_LOGS_6057 ( LOG_ID STRING PRIMARY KEY, REG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_FALLBACK_METRICS ( METRIC_ID STRING PRIMARY KEY, QUERY_REF STRING, USED_FAISS BOOLEAN, USED_VECTOR BOOLEAN, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_FALLBACK_REGISTRY_6056 ( REG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_HEALTH_12 ( CHECK_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_HISTORIES ( HISTORY_ID STRING PRIMARY KEY, QUERY_ID STRING, RAN_BY STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT_SUMMARY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUERY_LATENCY_HISTOGRAM ( HIST_ID STRING PRIMARY KEY, BUCKET_START_MS NUMBER, BUCKET_END_MS NUMBER, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_LATENCY_HISTOGRAM ( LAT_ID STRING PRIMARY KEY, QUERY_REF STRING, BUCKETS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_LOGS ( QUERY_ID STRING PRIMARY KEY, QUERY_TEXT STRING, USER_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_PERMISSION_GRANTS ( GRANT_ID STRING PRIMARY KEY, QUERY_ID STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_PLANS ( PLAN_ID STRING PRIMARY KEY, QUERY_TEXT STRING, PLAN VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_PLAN_CACHE ( PLAN_ID STRING PRIMARY KEY, QUERY_HASH STRING, PLAN VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_PREFETCH_HISTORY ( H_ID STRING PRIMARY KEY, PJ_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTPUT_LOCATION STRING, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.QUERY_PREFETCH_JOBS ( PJ_ID STRING PRIMARY KEY, KEY STRING, SCHEDULE_CRON STRING, LAST_RUN TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.QUERY_RETRIES_12 ( RETRY_ID STRING PRIMARY KEY, REQ_ID STRING, ATTEMPTS NUMBER, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUERY_ROUTING_METRICS ( METRIC_ID STRING PRIMARY KEY, ROUTE_ID STRING, COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_ROUTING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION_JSON VARIANT, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_SERVICE_REGISTRY_12 ( SERVICE_ID STRING PRIMARY KEY, HOST STRING, PORT NUMBER, HEALTH_VAR VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_SLA_TRACKING ( TRACK_ID STRING PRIMARY KEY, SCOPE VARIANT, SLA_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_TELEMETRY ( QT_ID STRING PRIMARY KEY, USER_REF STRING, QUERY_TEXT STRING, LATENCY_MS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUERY_TRACING_SPANS ( SPAN_ID STRING PRIMARY KEY, TRACE_ID STRING, SPAN JSON, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUEUE_STATS ( STATS_ID STRING PRIMARY KEY, QUEUE_NAME STRING, DEPTH INT, BACKPRESSURE BOOLEAN, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUICK_SEARCH_INDEX ( KEY STRING PRIMARY KEY, REF VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ALERTS_12 ( ALERT_ID STRING PRIMARY KEY, QUOTA_ID STRING, THRESHOLD NUMBER, CURRENT_USAGE NUMBER, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BREACHES ( BREACH_ID STRING PRIMARY KEY, QUOTA_ID STRING, ACCOUNT_ID STRING, USAGE VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BREACHES_07 ( BREACH_ID STRING PRIMARY KEY, ORG_ID STRING, QUOTA_KEY STRING, USAGE VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BREACH_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_REF STRING, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SEVERITY STRING );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BREACH_ALERTS ( ALERT_ID STRING PRIMARY KEY, QUOTA_ID STRING, SUBJECT_REF STRING, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_BREACH_EVENTS ( EVT_ID STRING PRIMARY KEY, QUOTA_ID STRING, METRICS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ENFORCEMENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EVENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, RESOURCE STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_ENFORCE_LOGS ( LOG_ID STRING PRIMARY KEY, QUOTA_ID STRING, SUBJECT_REF STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_HISTORY ( HISTORY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_TYPE STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, QUOTA_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_TYPE STRING, VALUE VARIANT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_PROFILES ( PROFILE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, LIMIT_VALUE NUMBER, WINDOW STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, TENANT_ID STRING, RESOURCE STRING, USAGE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_USAGE_12 ( USAGE_ID STRING PRIMARY KEY, QUOTA_ID STRING, USAGE_AMOUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_USAGE_LOGS_6391 ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_USAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, USAGE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, TENANT_ID STRING, RESOURCE STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_VIOLATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, QUOTA_ID STRING, TENANT_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_VIOLATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_KEY STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_VIOLATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, QUOTA_ID STRING, TENANT_ID STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_VIOLATION_LOG ( LOG_ID STRING PRIMARY KEY, QUOTA_ID STRING, SUBJECT_REF STRING, OCCURRED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.QUOTA_WARNINGS_12 ( WARNING_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_CODE STRING, USAGE NUMBER, LIMIT NUMBER, WARNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATECARDS ( RC_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATECARD_CHANGES ( CHANGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANGE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATECARD_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_ID STRING, PRICE_OVERRIDE NUMBER, VALID_FROM TIMESTAMP_LTZ, VALID_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATECARD_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SNAPSHOT VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATECARD_VERSIONS ( RCV_ID STRING PRIMARY KEY, RC_ID STRING, VERSION INT, RULES VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATECARD_VERSIONS_06 ( RATE_ID STRING PRIMARY KEY, NAME STRING, VERSION INT, DEFINITION VARIANT, ACTIVE BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_CARD_HISTORY_07 ( RH_ID STRING PRIMARY KEY, RATE_ID STRING, CHANGES VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_CARD_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_NAME STRING, OVERRIDE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, COUNTER_ID STRING, ACTION_TYPE STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_ASSIGNMENTS_V2 ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, LIMIT_NAME STRING, BREACH_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_BUCKETS_07 ( BUCKET_ID STRING PRIMARY KEY, CLIENT_ID STRING, REMAINING INT, RESET_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_COUNTERS ( COUNTER_ID STRING PRIMARY KEY, PROFILE_ID STRING, KEY STRING, COUNT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_COUNTERS ( COUNTER_ID STRING PRIMARY KEY, PROFILE_ID STRING, KEY_REF STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_COUNTERS_10 ( COUNTER_ID STRING PRIMARY KEY, RULE_ID STRING, KEY STRING, COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_EVENTS ( EVT_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, TRIGGERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_HIT_LOG ( HIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PROFILE_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, STATUS STRING, LOG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_MITIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, CLIENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ENDPOINT STRING, LIMIT_VALUE INT, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_OVERRIDE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CLIENT_ID STRING, REQUESTED_LIMIT JSON, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_OVERRIDE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_PROFILES_02 ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_RULES_10 ( RULE_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, LIMIT_CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_USAGE ( USAGE_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_USAGE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, PROFILE_ID STRING, WINDOW_START TIMESTAMP_LTZ, COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, PROFILE_ID STRING, KEY_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, CLIENT_ID STRING, ENDPOINT STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, CLIENT_ID STRING, PROFILE_ID STRING, COUNT INT, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATIONS ( V_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LIMIT_ID STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EVENT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_INDEX_6354 ( VIOL_ID STRING PRIMARY KEY, SUBJECT STRING, PROFILE_ID STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, PROFILE_ID STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, CLIENT_ID STRING, VIOLATION_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, COUNTER_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RATE_LIMIT_VIOLATION_LOGS_6355 ( LOG_ID STRING PRIMARY KEY, VIOL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTION STRING, TARGET_REF STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.RBAC_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_PERMISSION_SETS ( PS_ID STRING PRIMARY KEY, NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_ROLE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, ROLE_NAME STRING, SUBJECT_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RBAC_TEMPLATE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REALTIME_ALERTS ( ALERT_ID STRING PRIMARY KEY, SOURCE STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REALTIME_ALERTS ( ALERT_ID STRING PRIMARY KEY, SOURCE_REF STRING, ALERT_TYPE STRING, SEVERITY STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REALTIME_ALERT_ACK ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACKED_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.REALTIME_ALERT_QUEUE ( QUEUE_ID STRING PRIMARY KEY, ALERT_PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REALTIME_MONITORING_EVENTS ( EVENT_ID STRING PRIMARY KEY, STREAM_NAME STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REBATE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROGRAM_ID STRING, ACCOUNT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REBATE_PROGRAMS ( PROGRAM_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REBATE_REDEMPTIONS ( RED_ID STRING PRIMARY KEY, ASSIGN_ID STRING, AMOUNT NUMBER, REDEEMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECALL_RECONCILIATION_INDEX_6096 ( IDX_ID STRING PRIMARY KEY, REQ_ID STRING, RECON_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECALL_RECONCILIATION_LOGS_6097 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECENT_INCIDENTS_VIEW ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, STATUS STRING, RAISED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RECENT_SIGNATURES_MV ( MV_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECIPIENT_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, BEHAVIOR JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECIPIENT_HISTORY ( RH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RECIPIENT_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECIPIENT_PREFERENCES_07 ( PREF_ID STRING PRIMARY KEY, RECIPIENT_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOMMENDATION_FEEDBACK ( FB_ID STRING PRIMARY KEY, CACHE_ID STRING, USER_REF STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOMMENDATION_LOGS_6107 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILE_RESULTS_06 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DISC_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, DISC_ID STRING, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ACTION_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_DISCREPANCIES ( DISC_ID STRING PRIMARY KEY, CONTEXT STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_DISCREPANCIES ( DISC_ID STRING PRIMARY KEY, REC_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_TABLE STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RECONCILIATION_LOG ( RECON_ID STRING PRIMARY KEY, SOURCE STRING, TARGET STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_ACTIONS ( ACT_ID STRING PRIMARY KEY, CAMP_ID STRING, ACCOUNT_ID STRING, ACTION JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTION_JSON VARIANT, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_CAMPAIGNS ( CAMP_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_EXECUTIONS_09 ( EXEC_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_PLANS_09 ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_POINT_CHECKPOINTS ( CP_ID STRING PRIMARY KEY, REPO_REF STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_POINT_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, CP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_POINT_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_RUNS ( RUN_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_RUN_REGISTRY ( RUN_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECOVERY_TOKEN_STORE ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RECURRING_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_REF STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQUEST_ID STRING, RULE_ID STRING, REDACTED_FIELDS VARIANT, REDACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, CHANGES VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT ( AUD_ID STRING PRIMARY KEY, JOB_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REDACTION_META VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_INDEX_6328 ( AUDIT_ID STRING PRIMARY KEY, REDACT_ID STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_LOG ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES VARIANT, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_LOGS_6329 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, JOB_ID STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_EXCEPTION_QUEUE ( Q_ID STRING PRIMARY KEY, RES_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_EXEC_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULES JSON, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, PROGRESS VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_JOBS_11 ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FIELDS ARRAY, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, OUTPUT_URL STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RECOVERY_REQUESTS ( REQ_ID STRING PRIMARY KEY, TOKEN_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FIELDS ARRAY, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, FIELDS_TO_REDACT VARIANT, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, PDF_ID STRING, FIELDS VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_REQUEST_LOGS_6327 ( LOG_ID STRING PRIMARY KEY, REDACT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REDACTED_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS_04 ( RESULT_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RESULTS_11 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, AFFECTED_COUNT NUMBER, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, PATTERN STRING, SCOPE VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_TASKS_04 ( TASK_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULE_ID STRING, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REDACTION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RED_TEAM_FINDINGS_12 ( FINDING_ID STRING PRIMARY KEY, MODEL_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REENGAGEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUNDS ( REFUND_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REFUND_ID STRING, ACTION STRING, ACTION_BY STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REFUND_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_AUTHORIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_AUTHORIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, AUTH_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, REQ_ID STRING, ACCOUNT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_EVENTS ( RE_ID STRING PRIMARY KEY, REFUND_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_OUTCOMES_02 ( OUTCOME_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_PAYMENTS ( PAYMENT_ID STRING PRIMARY KEY, REFUND_ID STRING, PAYMENT_METHOD STRING, AMOUNT NUMBER, CURRENCY STRING, PAID_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_PROCESSING_JOBS ( JOB_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REFUND_PROCESSING_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_PROCESSING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REFUND_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, BILLING_RUN_ID STRING, AMOUNT NUMBER, CURRENCY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REFUND_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, AMOUNT NUMBER, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_REF STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, INVOICE_REF STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, AMOUNT NUMBER, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, AMOUNT NUMBER, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, AMOUNT NUMBER, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REFUND_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REFUND_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGIONAL_DATA_LOCATIONS ( LOC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REGION STRING, STORAGE_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGION_DATA_RESIDENCY ( RES_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REGION STRING, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGION_FAILOVERS ( FAIL_ID STRING PRIMARY KEY, REGION STRING, FALLBACK_REGION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGISTRATION_EVENTS ( REG_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGISTRY_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, REGISTRY_REF STRING, CHANGE JSON, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGISTRY_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, REGISTRY_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, REG_REF STRING, SUMMARY VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_CHANGE_LOG ( CHANGE_ID STRING PRIMARY KEY, REGION STRING, DESCRIPTION CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, JURISDICTION STRING, CHANGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, REGION STRING, CHANGE JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_CHANGE_REGISTER ( CHANGE_ID STRING PRIMARY KEY, JURISDICTION STRING, SUMMARY CLOB, EFFECTIVE_DATE DATE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_CHANGE_REGISTRY ( CHANGE_ID STRING PRIMARY KEY, REGION STRING, CHANGE_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_ESCROWS ( ESCROW_ID STRING PRIMARY KEY, SUBJECT_REF STRING, HOLD_REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_ASSESSMENTS ( ASMT_ID STRING PRIMARY KEY, JURISDICTION STRING, ASSESSMENT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, CHANGE_ID STRING, SCOPE VARIANT, IMPACT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, REG_ID STRING, SCOPE VARIANT, RESULT JSON, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_IMPACT_RUNS ( RUN_ID STRING PRIMARY KEY, CHANGE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_NOTICES_INDEX ( NOTICE_ID STRING PRIMARY KEY, REGION STRING, NOTICE_CLOB CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_NOTICE_DISPATCH ( DISPATCH_ID STRING PRIMARY KEY, JUR_ID STRING, NOTICE JSON, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_NOTICE_INDEX_6273 ( NOTICE_ID STRING PRIMARY KEY, REGION STRING, NOTICE_JSON VARIANT, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_NOTICE_LOGS_6274 ( LOG_ID STRING PRIMARY KEY, NOTICE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, REGION STRING, DESCRIPTION STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_OBLIGATIONS_INDEX ( OBL_ID STRING PRIMARY KEY, REGION STRING, OBL_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REGISTRY ( REG_ID STRING PRIMARY KEY, JURISDICTION STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_INDEX ( REPORT_ID STRING PRIMARY KEY, JURISDICTION STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_INDEX ( REP_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_TYPE STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE JSON, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, REPORT_NAME STRING, SCOPE VARIANT, SCHEDULE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, REP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, DESTINATION VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_TYPE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_REGISTRY ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORTING_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_HISTORY ( H_ID STRING PRIMARY KEY, REPORT_TYPE STRING, STATUS STRING, OUTPUT_LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_QUEUE ( Q_ID STRING PRIMARY KEY, REPORT_TYPE STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REQUEST_REGISTRY ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_REQUEST_RESPONSES ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESPONSE JSON, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_RESPONSE_RECORDS ( RES_ID STRING PRIMARY KEY, SUB_ID STRING, RESPONSE_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, JURISDICTION STRING, CONDITION VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_SUBMISSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUB_ID STRING, AUDITOR STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_SUBMISSION_INDEX ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_REF STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_SUBMISSION_LOGS ( SUB_ID STRING PRIMARY KEY, REP_ID STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_SUBMISSION_RESULTS ( RES_ID STRING PRIMARY KEY, SUB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_SUMMARY_REPORTS ( REPORT_ID STRING PRIMARY KEY, JURISDICTION STRING, CONTENT VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_TAGS ( TAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, JURISDICTION STRING, REGULATION STRING, NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.REGULATORY_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, RULE_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REINTEGRATION_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELATIONSHIP_CONFLICT_LOGS ( LOG_ID STRING PRIMARY KEY, FROM_REF STRING, TO_REF STRING, REASON CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELAY_SERVICE_LOGS ( LOG_ID STRING PRIMARY KEY, SERVICE_REF STRING, LEVEL STRING, MESSAGE CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELAY_SERVICE_METRICS ( MET_ID STRING PRIMARY KEY, SERVICE_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_BADGE_INDEX ( BADGE_ID STRING PRIMARY KEY, RELEASE_REF STRING, BADGE_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_CANARY_ROLLOUTS ( ROLL_ID STRING PRIMARY KEY, VERSION STRING, TARGET_SEGMENT VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_CANDIDATE_REGISTRY ( RC_ID STRING PRIMARY KEY, VERSION STRING, ARTIFACTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_CANDIDATE_VALIDATION ( VAL_ID STRING PRIMARY KEY, RC_ID STRING, RESULT VARIANT, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_COMPLIANCE_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, RELEASE_REF STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_DEPLOYMENTS ( DEP_ID STRING PRIMARY KEY, VERSION STRING, ENVIRONMENT STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_DEPLOYMENT_LOGS ( LOG_ID STRING PRIMARY KEY, VERSION STRING, ENV STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_GATE_CHECKS ( CHECK_ID STRING PRIMARY KEY, RELEASE_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, RELEASE_REF STRING, SUMMARY CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, NOTES TEXT, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_07 ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_INDEX ( NOTE_ID STRING PRIMARY KEY, RELEASE_ID STRING, SUMMARY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_INDEX ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, CONTENT CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_INDEX_6085 ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_LOGS_6086 ( LOG_ID STRING PRIMARY KEY, NOTE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_REGISTRY ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, BODY CLOB, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_NOTES_REGISTRY ( NOTE_ID STRING PRIMARY KEY, VERSION STRING, NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_PIPELINE_LOGS_6407 ( LOG_ID STRING PRIMARY KEY, PIPE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_POSTDEPLOY_MONITOR ( MON_ID STRING PRIMARY KEY, RELEASE_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, RELEASE_REF STRING, SUMMARY CLOB, ACTIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_READINESS_CHECKS ( CHECK_ID STRING PRIMARY KEY, RELEASE_REF STRING, CHECK_JSON VARIANT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACKS ( RB_ID STRING PRIMARY KEY, REL_ID STRING, INITIATED_BY STRING, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_JOBS ( JOB_ID STRING PRIMARY KEY, RELEASE_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_QUEUE ( Q_ID STRING PRIMARY KEY, ROLLOUT_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_REGISTRY ( RB_ID STRING PRIMARY KEY, RELEASE_REF STRING, REASON CLOB, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, RB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLFORWARD_INDEX ( ROLL_ID STRING PRIMARY KEY, RELEASE_REF STRING, STEPS VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_ROLLOUT_STATUS ( ROLLOUT_ID STRING PRIMARY KEY, NOTE_ID STRING, TENANT_SCOPE VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_SAFETY_CHECKS ( CHECK_ID STRING PRIMARY KEY, RELEASE_ID STRING, CHECK_JSON VARIANT, PASSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_SCHEDULE ( REL_ID STRING PRIMARY KEY, VERSION STRING, SCHEDULE_DATE TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_STAGING_INDEX ( STAGE_ID STRING PRIMARY KEY, RELEASE_REF STRING, ARTIFACTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_STAGING_RESULTS ( RES_ID STRING PRIMARY KEY, STAGE_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, RELEASE_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RELEASE_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEVANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MODEL_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RELEVANCE_DEPLOYMENTS ( DEP_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELEVANCE_MODEL_TRAINING ( TRAIN_ID STRING PRIMARY KEY, MODEL_ID STRING, TRAINING_PAYLOAD VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RELEVANCE_TRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, TRAIN_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RELIABILITY_INDEX ( IDX_ID STRING PRIMARY KEY, COMPONENT_REF STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_EFFECTIVENESS_METRICS ( MET_ID STRING PRIMARY KEY, MIT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_JOBS ( JOB_ID STRING PRIMARY KEY, VULN_ID STRING, STATUS STRING, ASSIGNED_TO STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_PLANS ( PLAN_ID STRING PRIMARY KEY, TITLE STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REMEDIATION_TASKS_06 ( TASK_ID STRING PRIMARY KEY, SA_ID STRING, ACTIONS VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMINDER_DISPATCH_LOG ( LOG_ID STRING PRIMARY KEY, SCH_ID STRING, ATTEMPT INT, STATUS STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMOTE_AUDIT_PROVIDERS ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMOTE_AUDIT_SUB_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REMOTE_AUDIT_SUB_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERED_DOCUMENTS ( DOCUMENT_ID STRING PRIMARY KEY, ASSEMBLY_RUN_ID STRING, RENDERED_URL STRING, MIME_TYPE STRING DEFAULT 'application/pdf', SIZE_BYTES NUMBER, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERED_DOCUMENTS_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ARCHIVE_LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERERS ( RENDERER_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_AUTOSCALE_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_AUTOSCALE_POLICIES ( POLICY_ID STRING PRIMARY KEY, RENDERER_REF STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_AUTOSCALE_RESULTS ( RES_ID STRING PRIMARY KEY, EVT_ID STRING, ACTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_CAPACITIES ( CAP_ID STRING PRIMARY KEY, RENDERER_ID STRING, MAX_CONCURRENCY INT, RESERVATION JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_CAPACITY_HISTORY ( HIST_ID STRING PRIMARY KEY, RENDERER_ID STRING, CAPACITY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, RENDERER_ID STRING, CONFIG JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_CONFIG_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, RENDERER_ID STRING, VERSION STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_DEPLOYMENT_JOBS ( JOB_ID STRING PRIMARY KEY, RENDERER_REF STRING, VERSION_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_DEPLOYMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_DEPLOY_ERRORS ( ERR_ID STRING PRIMARY KEY, DEPLOY_ID STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_ERRORS ( ERR_ID STRING PRIMARY KEY, RENDERER_ID STRING, JOB_ID STRING, ERROR_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_ERROR_RATE_METRICS ( MET_ID STRING PRIMARY KEY, RENDERER_REF STRING, ERROR_COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_ERROR_TRACES ( TRACE_ID STRING PRIMARY KEY, RENDERER_REF STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_FAILURE_ALERTS ( ALERT_ID STRING PRIMARY KEY, RENDERER_ID STRING, JOB_ID STRING, ERROR_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, RENDERER_REF STRING, HEALTH JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, FINISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, RENDERER_REF STRING, P50 NUMBER, P95 NUMBER, P99 NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, RENDERER_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_METRICS ( METRIC_ID STRING PRIMARY KEY, RENDERER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, RENDERER_ID STRING, JOB_PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_REGISTRY ( REG_ID STRING PRIMARY KEY, RENDERER_ID STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_SLA_METRICS ( MET_ID STRING PRIMARY KEY, RENDERER_ID STRING, SLO_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_TELEMETRY ( TEL_ID STRING PRIMARY KEY, RENDERER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_VERSION_HISTORY ( VER_ID STRING PRIMARY KEY, RENDERER_ID STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDERER_VERSION_REGISTRY ( VERSION_ID STRING PRIMARY KEY, RENDERER_REF STRING, VERSION_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERING_COST_BILLING ( BILL_ID STRING PRIMARY KEY, RUN_ID STRING, TOTAL_COST NUMBER, CURRENCY STRING, BILLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERING_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, JOB_ID STRING, ESTIMATE JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERING_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THRESHOLD NUMBER, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDERING_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USED_UNITS NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDERING_SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, JOB_ID STRING, SLA_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_BACKPRESSURE_LOG ( LOG_ID STRING PRIMARY KEY, NODE_REF STRING, BACKPRESSURE_LEVEL NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE ( CACHE_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, RENDERED_URL STRING, CACHE_KEY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE ( CACHE_KEY STRING PRIMARY KEY, DOCUMENT_ID STRING, RENDERED_URL STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_EVICTION ( EVICT_ID STRING PRIMARY KEY, CACHE_ID STRING, EVICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_HASH STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RENDER_HASH STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INDEX ( IDX_ID STRING PRIMARY KEY, CACHE_KEY STRING, CACHE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INDEX_6350 ( CACHE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RENDER_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INVALIDATION ( INV_ID STRING PRIMARY KEY, CACHE_ID STRING, INVALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INVALIDATION ( INV_ID STRING PRIMARY KEY, CACHE_ID STRING, TRIGGER_REF STRING, INVALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_INVALIDATION ( INV_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, INVALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CACHE_LOGS_6351 ( LOG_ID STRING PRIMARY KEY, CACHE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_CALLBACK_DLQ ( DLQ_ID STRING PRIMARY KEY, CB_ID STRING, PAYLOAD VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_COST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EST_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ESTIMATE_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, PROFILE_ID STRING, COST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_DEFAULT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_CAPACITY_JOBS ( JOB_ID STRING PRIMARY KEY, ENGINE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_CAPACITY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_ERRORS ( ERR_ID STRING PRIMARY KEY, ENGINE STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_ERRORS ( ERR_ID STRING PRIMARY KEY, ENGINE_TYPE STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, ENGINE_ID STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_HEALTH ( H_ID STRING PRIMARY KEY, ENGINE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_METRICS ( MET_ID STRING PRIMARY KEY, ENGINE_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_NODE_PROVISIONING ( PROV_ID STRING PRIMARY KEY, NODE_ID STRING, ACTION STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_NODE_PROVISIONING_RESULTS ( RES_ID STRING PRIMARY KEY, PROV_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_POOL ( POOL_ID STRING PRIMARY KEY, ENGINE_TYPE STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_POOL_NODES ( NODE_ID STRING PRIMARY KEY, POOL_ID STRING, HOST STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_REGISTRY ( ENGINE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_SCALING_EVENTS ( EVT_ID STRING PRIMARY KEY, ENGINE_TYPE STRING, ACTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_STATS ( STAT_ID STRING PRIMARY KEY, ENGINE STRING, LATENCY_MS NUMBER, ERR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ENGINE_USAGE ( USG_ID STRING PRIMARY KEY, ENGINE_TYPE STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERRORS ( ERROR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_JSON VARIANT, RETRY BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERRORS ( ERROR_ID STRING PRIMARY KEY, RENDER_JOB_ID STRING, ERROR_MESSAGE STRING, TRACE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_CODES ( ERROR_CODE STRING PRIMARY KEY, DESCRIPTION STRING, RECOVERABLE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_INDEX ( ERR_ID STRING PRIMARY KEY, Q_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_TEXT CLOB, TRACE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_LOGS_6039 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_REGISTRY ( ERR_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_ERROR_TRACES ( TRACE_ID STRING PRIMARY KEY, JOB_ID STRING, STACK TRACE CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_FAILURE_INDEX ( FAIL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ERROR_MSG STRING, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), TRACE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_FAILURE_RATE ( FR_ID STRING PRIMARY KEY, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, FAIL_COUNT INT, TOTAL_COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_FALLBACK_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_FILE_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_PATH STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_FILE_RETENTION ( RET_ID STRING PRIMARY KEY, FILE_ID STRING, RETENTION_DAYS INT, SCHEDULED_PURGE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOBS ( JOB_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, STATUS STRING, WORKER_NODE STRING, ATTEMPTS INT DEFAULT 0, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOBS_06 ( RENDER_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, RENDER_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', PRIORITY NUMBER DEFAULT 5, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_URL STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RENDER_LOCATION STRING, RENDER_META VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, MESSAGE STRING, LOG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_LOGS ( LOG_ID STRING PRIMARY KEY, RENDER_ID STRING, STATUS STRING, OUTPUT_LOCATION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_LOGS_06 ( LOG_ID STRING PRIMARY KEY, RENDER_ID STRING, MESSAGE STRING, LOG_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_METRICS ( METRIC_ID STRING PRIMARY KEY, JOB_ID STRING, DURATION_MS NUMBER, WORKER_ID STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_METRICS ( METRIC_ID STRING PRIMARY KEY, RENDER_JOB_ID STRING, DURATION_MS NUMBER, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_ALERTS ( ALERT_ID STRING PRIMARY KEY, NODE_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, NODE_REF STRING, JOB_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_CAPACITY_RESERVATIONS ( RES_ID STRING PRIMARY KEY, NODE_REF STRING, RESERVED_FOR STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NODE_REF STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_ERRORS ( ERROR_ID STRING PRIMARY KEY, NODE_REF STRING, JOB_ID STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_EVENTS ( EVENT_ID STRING PRIMARY KEY, NODE_REF STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_METRICS ( MET_ID STRING PRIMARY KEY, NODE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_METRICS ( MET_ID STRING PRIMARY KEY, NODE_REF STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_REGISTRY ( NODE_ID STRING PRIMARY KEY, HOST STRING, CAPACITY JSON, LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_NODE_UPTIME ( UPTIME_ID STRING PRIMARY KEY, NODE_REF STRING, UPTIME_SECONDS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PERFORMANCE_METRICS ( METRIC_ID STRING PRIMARY KEY, WORKER_TYPE STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_BINDINGS ( BIND_ID STRING PRIMARY KEY, CFG_ID STRING, BOUND_TO STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_CATALOG ( CATALOG_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_CONFIG ( CFG_ID STRING PRIMARY KEY, NAME STRING, STAGES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_ERRORS ( ERR_ID STRING PRIMARY KEY, RUN_ID STRING, STAGE_NAME STRING, ERROR_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, CFG_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, LOG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, CFG_ID STRING, CRON_EXPRESSION STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PIPELINE_STAGE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, STAGE_NAME STRING, STATUS STRING, DETAIL VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PREVIEW_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, PREVIEW_ID STRING, ACCESSOR STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PRIORITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, ACCOUNT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENTITY_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROFILE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_COMPATIBILITY ( COMP_ID STRING PRIMARY KEY, PROFILE_ID STRING, PLATFORM STRING, COMPAT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_HISTORY ( HIST_ID STRING PRIMARY KEY, PROFILE_ID STRING, ACCOUNT_ID STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGE_JSON VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_HISTORY ( HIST_ID STRING PRIMARY KEY, PROFILE_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_HISTORY ( HIST_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENTITY_REF STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_REGISTRY ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_USAGE ( USAGE_ID STRING PRIMARY KEY, PROFILE_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_USAGE ( USG_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_USAGE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, PROFILE_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_PROFILE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, PROFILE_ID STRING, VERSION_NUMBER INT, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PRIORITY INT DEFAULT 10, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PRIORITY INT DEFAULT 100, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, JOB_ID STRING, DOCUMENT_ID STRING, PRIORITY INT DEFAULT 10, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( QUEUE_ID STRING PRIMARY KEY, JOB_REF STRING, PRIORITY INT DEFAULT 1, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( RENDER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MERGE_CONTEXT VARIANT, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE ( RENDER_JOB_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_12 ( QUEUE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TEMPLATE_ID STRING, PRIORITY NUMBER DEFAULT 50, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, Q_ID STRING, PRIORITY INT DEFAULT 0, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_BACKPRESSURE_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EVT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_BACKPRESSURE_EVENTS ( EVT_ID STRING PRIMARY KEY, QUEUE_NAME STRING, METRICS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_PARTITION_MAP ( MAP_ID STRING PRIMARY KEY, QUEUE_ID STRING, PARTITION_KEY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_RETRIES ( RETRY_ID STRING PRIMARY KEY, QUEUE_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUEUE_STATS ( STAT_ID STRING PRIMARY KEY, QUEUE_NAME STRING, PENDING INT, RUNNING INT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USAGE_COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_REQUEST_QUEUE_6037 ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, OUTPUT_REF STRING, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RESULT_INDEX_6038 ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RENDER_JSON VARIANT, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRIES ( RETRY_ID STRING PRIMARY KEY, JOB_ID STRING, ATTEMPT INT, STATUS STRING, LAST_ERROR VARIANT, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_BACKOFF ( BACKOFF_ID STRING PRIMARY KEY, JOB_ID STRING, ATTEMPT INT, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ERROR_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_INDEX ( RETRY_ID STRING PRIMARY KEY, Q_ID STRING, ATTEMPT INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, LAST_ERROR VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_POLICY ( POL_ID STRING PRIMARY KEY, POLICY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_REF STRING, NEXT_RUN_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.RENDER_SERVICE_REGISTRY ( SERVICE_ID STRING PRIMARY KEY, SERVICE_NAME STRING, ENDPOINT STRING, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_SETTINGS ( SETTING_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_TASK_QUEUE ( Q_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PROFILE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_TASK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_TEMPLATE_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RENDERED_URL STRING, CACHE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_TEMPLATE_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SNAPSHOT_JSON VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_TEMPLATE_PERFORMANCE_6140 ( PERF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_THROTTLE_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, EVENT_JSON VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_THROTTLE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_THROUGHPUT ( TP_ID STRING PRIMARY KEY, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, RENDERED INT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKERS ( WORKER_ID STRING PRIMARY KEY, HOST STRING, LAST_HEARTBEAT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'IDLE' );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_CLAIMS ( CLAIM_ID STRING PRIMARY KEY, JOB_ID STRING, WORKER_ID STRING, CLAIMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, WORKER_REF STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_ERRORS ( ERR_ID STRING PRIMARY KEY, JOB_ID STRING, WORKER_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, WORKER_REF STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, WORKER_ID STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_HEARTBEATS ( HB_ID STRING PRIMARY KEY, WORKER_REF STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_HISTORY ( HW_ID STRING PRIMARY KEY, JOB_ID STRING, WORKER STRING, DURATION_MS NUMBER, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_METRICS ( METRIC_ID STRING PRIMARY KEY, WORKER_ID STRING, JOB_COUNT NUMBER, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_POOL ( WORKER_ID STRING PRIMARY KEY, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RENDER_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_STATUS ( WORKER_ID STRING PRIMARY KEY, HOSTNAME STRING, STATUS STRING, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RENDER_WORKER_TELEMETRY ( TELE_ID STRING PRIMARY KEY, WORKER_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENDITION_METRICS_06 ( METRIC_ID STRING PRIMARY KEY, RENDER_ID STRING, LATENCY_MS INT, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RENEWAL_REMINDER_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, TRIGGER_DATE DATE, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.RENEWAL_REMINDER_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME JSON );

CREATE OR REPLACE TABLE DOCGEN.REPAIR_TASKS ( TASK_ID STRING PRIMARY KEY, TARGET_REF STRING, TASK_TYPE STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAYABILITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, CHECK_ID STRING, ALERT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REPLAYABILITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REPLAY_REF STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, REPLAY_ID STRING, FINDINGS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, FINDINGS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, REPLAY_REF STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_EVENTS ( EVENT_ID STRING PRIMARY KEY, REPLAY_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, SEG_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_PRIVACY_FILTERS ( FILTER_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_PROTECTION_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, NONCE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, IDX_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_REQUESTS ( REPLAY_ID STRING PRIMARY KEY, REQUESTOR STRING, START_TS TIMESTAMP_LTZ, END_TS TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_RESULTS ( RESULT_ID STRING PRIMARY KEY, REPLAY_ID STRING, OUTPUT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SNAP_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME STRING, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLAY_SESSIONS ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, RECORDING_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLICATION_ERRORS ( ERR_ID STRING PRIMARY KEY, JOB_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REPLICATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, TARGET STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REPLICATION_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPLICATION_STATS ( STAT_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSFERRED_BYTES NUMBER, DURATION_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_JOB_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE JSON, QUERY TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_JOB_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, JOB_NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_JOB_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, NAME STRING, RESULT_LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORTING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_ACCESS ( ACCESS_ID STRING PRIMARY KEY, REPORT_ID STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_ACCESS_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, REPORT_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, RUN_ID STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, REPORT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REPORT_AUDIT_TRAIL ( AT_ID STRING PRIMARY KEY, REPORT_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT_TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_DEFINITIONS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, QUERY STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, RUN_ID STRING, TARGET STRING, STATUS STRING, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SREP_ID STRING, STATUS STRING, DETAILS VARIANT, DELIVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_GENERATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PARAMETERS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_GENERATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_GENERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTPUT_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_GENERATION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTPUT_LOC STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_HISTORY ( RH_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, OUTPUT_LOCATION STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_JOBS_06 ( REPORT_JOB_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE STRING, LAST_RUN TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RESULTS ( RESULT_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, RUN_BY STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTPUT_LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, SCHED_ID STRING, STATUS STRING, OUTPUT_LOCATION STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PARAMETERS VARIANT, STATUS STRING DEFAULT 'QUEUED', OUTPUT_LOCATION STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUNS_06 ( RUN_ID STRING PRIMARY KEY, REPORT_JOB_ID STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.REPORT_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.REPORT_SCHEDULES ( SCHEDULE_ID STRING PRIMARY KEY, REPORT_NAME STRING, CRON_EXPR STRING, OWNER STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REPORT_SCHEDULING_JOBS ( JOB_ID STRING PRIMARY KEY, DASH_ID STRING, SCHEDULE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_SCHEDULING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, REPORT_ID STRING, SCHEDULE VARIANT, DESTINATION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, QUERY TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, QUERY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATE_LIBRARY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATE_REGISTRY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPORT_TEMPLATE_USAGE ( USAGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPROCESS_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.REPROCESS_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, OUTPUT VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, REP_ID STRING, CHANGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_CHANGE_LOGS_6079 ( LOG_ID STRING PRIMARY KEY, REP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, REASON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_INFLUENCE_JOBS ( JOB_ID STRING PRIMARY KEY, SIGNER_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_INFLUENCE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DELTA JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_SCORES ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_SERVICE_REGISTRY ( SRV_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REPUTATION_SOURCES ( SRC_ID STRING PRIMARY KEY, SIGNER_ID STRING, SOURCE_NAME STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUESTOR_IDENTITY_INDEX ( IDX_ID STRING PRIMARY KEY, REQUESTOR_REF STRING, ATTRIBUTES VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUESTOR_REPUTATION_SCORES ( SCORE_ID STRING PRIMARY KEY, REQUESTOR_REF STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_CANCELLATIONS ( CAN_ID STRING PRIMARY KEY, REQUEST_ID STRING, CANCELLED_BY STRING, CANCELLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_GEODATA ( GEODATA_ID STRING PRIMARY KEY, REQUEST_ID STRING, IP_ADDRESS STRING, GEO JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_INDEX ( RIX_ID STRING PRIMARY KEY, REQUEST_ID STRING, KEY_PATH STRING, KEY_VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_LABELS ( LABEL_ID STRING PRIMARY KEY, REQUEST_ID STRING, LABEL STRING, ADDED_BY STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_LOCKS ( LOCK_ID STRING PRIMARY KEY, REQUEST_ID STRING UNIQUE, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_LOCKS ( LOCK_ID STRING PRIMARY KEY, REQUEST_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_PRIORITY ( PRIORITY_ID STRING PRIMARY KEY, REQUEST_ID STRING, PRIORITY INT, SET_BY STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_RATE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_RETENTION_STATE ( STATE_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_RETRY_INDEX ( IDX_ID STRING PRIMARY KEY, REQUEST_REF STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_RETRY_TOKENS ( TOKEN_ID STRING PRIMARY KEY, REQUEST_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_ROUTING_HISTORY ( RH_ID STRING PRIMARY KEY, REQUEST_ID STRING, ROUTE_REF STRING, ROUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REQUEST_TAG_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, REQUEST_ID STRING, TAG_COUNTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESELLER_ACCOUNT_MAPPING ( MAP_ID STRING PRIMARY KEY, RESELLER_REF STRING, ACCOUNT_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESELLER_BILLING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, AMOUNTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESELLER_BILLING_RUNS ( RUN_ID STRING PRIMARY KEY, RESELLER_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESOLUTION_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESOLUTION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_CAPACITY_ALERT_HISTORY ( ALERT_ID STRING PRIMARY KEY, RESOURCE_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_CAPACITY_FORECAST ( FCST_ID STRING PRIMARY KEY, RESOURCE_REF STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_PROVISION_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, RESOURCE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_PROVISION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTAS_12 ( QUOTA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, RESOURCE_TYPE STRING, LIMIT NUMBER, PERIOD STRING );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, QUOTA_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, RESOURCE_REF STRING, THRESHOLD JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, RESOURCE STRING, SUBJECT_REF STRING, QUOTA NUMBER, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_CONSUMPTION ( CONS_ID STRING PRIMARY KEY, QUOTA_ID STRING, SUBJECT_REF STRING, CONSUMED NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_DEFINITIONS ( QUOTA_ID STRING PRIMARY KEY, NAME STRING, LIMITS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_QUOTA_HISTORY ( HIST_ID STRING PRIMARY KEY, RESOURCE_REF STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_TAGS ( TAG_ID STRING PRIMARY KEY, RESOURCE_REF STRING, TAG_KEY STRING, TAG_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_TAG_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, RESOURCE_REF STRING, TAG_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_TAG_DEFINITIONS ( TAG_ID STRING PRIMARY KEY, KEY_NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESOURCE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, RESOURCE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESPONDER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, ROSTER_ID STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RESPONDER_ROSTERS ( ROSTER_ID STRING PRIMARY KEY, NAME STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESPONSE_PROVENANCE_STORE ( PROV_ID STRING PRIMARY KEY, REQ_ID STRING, PROVENANCE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESPONSE_TIME_STATS ( STAT_ID STRING PRIMARY KEY, OPERATOR STRING, AVG_RESPONSE_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_JOBS_05 ( RESTORE_ID STRING PRIMARY KEY, ARCH_ID STRING, REQUESTED_BY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_OPERATION_INDEX ( OP_ID STRING PRIMARY KEY, SOURCE_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_OPERATION_RESULTS ( RES_ID STRING PRIMARY KEY, OP_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, ALLOWED_SOURCES ARRAY, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_REQUESTS ( REQ_ID STRING PRIMARY KEY, MANIFEST_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RESTORE_RUN_DETAILS ( DETAIL_ID STRING PRIMARY KEY, REQ_ID STRING, FILE_REF STRING, STATUS STRING, DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETAIN_FLAGS ( FLAG_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, EXPIRES_AT TIMESTAMP_LTZ, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETAIN_FLAG_LOGS ( LOG_ID STRING PRIMARY KEY, FLAG_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETAIN_RELEASE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETAIN_RELEASE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION_TYPE STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, EXECUTED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, TARGET_REF STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TARGET STRING, ACTION_TYPE STRING, SCHEDULE_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'SCHEDULED' );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ACTIONS_14 ( ACTION_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TABLE STRING, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, DETAIL VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ACTION STRING, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_REF STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_COMPLIANCE_REPORTS ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_DRYRUN ( DRYRUN_ID STRING PRIMARY KEY, POLICY_ID STRING, SAMPLE_COUNT INT, ESTIMATED_REMOVALS INT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_DRYRUN_REPORTS ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, SAMPLE COUNT NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, BUCKET_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, AFFECTED_ROWS INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED_COUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTIONS_03 ( EXCEPTION_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTION_APPROVALS ( APP_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTION_LOGS_6121 ( LOG_ID STRING PRIMARY KEY, EXC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXCEPTION_RESULTS ( RES_ID STRING PRIMARY KEY, EXC_ID STRING, OUTCOME STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXEMPTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXEMPT_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXEMPTION_CATALOG ( EXEMPTION_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXEMPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, EX_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXEMPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TARGET_REF STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXEMPTION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, SCOPE VARIANT, TARGET_STAGE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_HOLD_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'SCHEDULED', LAST_RUN_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_LABEL_ENFORCEMENT ( ENF_ID STRING PRIMARY KEY, LABEL_ID STRING, ACTION_JSON VARIANT, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_LOGS_14 ( LOG_ID STRING PRIMARY KEY, ACTION_ID STRING, RESULT VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_OVERRIDE_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_OVERRIDE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TABLES VARIANT, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICIES_06 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICIES_11 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TARGET_TABLE STRING, RETENTION_DAYS NUMBER, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICIES_14 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICY ( POLICY_ID STRING PRIMARY KEY, ENTITY_NAME STRING, RETENTION_DAYS NUMBER, ACTION STRING, -- 'Purge'|'Archive' ACTIVE BOOLEAN, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICY_COMPLIANCE ( COMP_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, TARGET_REF STRING, POLICY_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICY_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_POLICY_EXECUTIONS_02 ( EXEC_ID STRING PRIMARY KEY, POLICY_ID STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_REPORTS_06 ( REPORT_ID STRING PRIMARY KEY, POLICY_ID STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, PURGED_COUNT INT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_RUNS_11 ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_VIOLATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, TARGET_TABLE STRING, DESCRIPTION CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETENTION_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETIREMENT_LOGS_6300 ( LOG_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRAIN_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, MODEL_ID STRING, CRON_EXPR STRING, ENABLED BOOLEAN DEFAULT TRUE, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_AUDIT_03 ( AUDIT_ID STRING PRIMARY KEY, QUERY VARIANT, RESULT_COUNT INT, USER_REF STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, TTL_SECONDS INT, MAX_ITEMS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_EVICTIONS ( EVICT_ID STRING PRIMARY KEY, CACHE_KEY STRING, REASON STRING, EVICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_HITS ( HIT_ID STRING PRIMARY KEY, CACHE_ID STRING, QUERY_REF STRING, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_HITS ( HIT_ID STRING PRIMARY KEY, CACHE_KEY STRING, RESULT_COUNT INT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_CACHE_MISSES ( MISS_ID STRING PRIMARY KEY, CACHE_KEY STRING, MISS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_RESULTS ( RESULT_ID STRING PRIMARY KEY, QUERY_ID STRING, BUNDLE_ID STRING, SCORE NUMBER, DETAILS VARIANT, RETRIEVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_RESULTS ( RETRIEVAL_ID STRING PRIMARY KEY, REQUEST_ID STRING, DOCUMENT_ID STRING, SCORE FLOAT, RETRIEVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_RESULTS ( RETR_ID STRING PRIMARY KEY, QUERY_TEXT STRING, RESULTS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRIEVAL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, QUERY_HASH STRING, LATENCY_MS NUMBER, RESULT_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_BACKOFF_EVENTS ( EVENT_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, REASON STRING, SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_BACKOFF_LOG ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, ATTEMPT INT, BACKOFF_SECONDS INT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_BACKOFF_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BASE_SECONDS INT, MAX_SECONDS INT );

CREATE OR REPLACE TABLE DOCGEN.RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BACKOFF_CONFIG VARIANT, MAX_ATTEMPTS INT DEFAULT 5, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, MAX_RETRIES INT, BACKOFF JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_POLICIES_08 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.RETRY_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RETRY_QUEUE ( RETRY_ID STRING PRIMARY KEY, ORIGINAL_ID STRING, REASON STRING, NEXT_RUN_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RETRY_SCHEDULER_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_QUEUE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RETRY_SCHEDULER_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REUSE_METRIC_LOGS_6310 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_FORECAST_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RECOGNITION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RECOGNITION_EVENTS ( EVENT_ID STRING PRIMARY KEY, RULE_ID STRING, INVOICE_ID STRING, AMOUNT NUMBER, RECOGNIZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RECOGNITION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RECOGNITION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, AMOUNTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RECOGNITION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, AMOUNTS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVENUE_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, Q_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_ASSIGNMENTS ( ASSN_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_ASSIGNMENT_METRICS ( MET_ID STRING PRIMARY KEY, ASSN_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, Q_ID STRING, COMMENT_BY STRING, COMMENT_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_COMMENT_INDEX_6040 ( COMMENT_ID STRING PRIMARY KEY, REVIEW_ID STRING, COMMENT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_COMMENT_LOGS_6041 ( LOG_ID STRING PRIMARY KEY, COMMENT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, REVIEW_ID STRING, REASON STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_EVENTS_06 ( EVENT_ID STRING PRIMARY KEY, INSTANCE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_FEEDBACK ( FB_ID STRING PRIMARY KEY, ASSN_ID STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_INSTANCES_06 ( INSTANCE_ID STRING PRIMARY KEY, WORKFLOW_ID STRING, CURRENT_STEP INT, STATUS STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_KPI_ROLLUPS ( ROLL_ID STRING PRIMARY KEY, TENANT_ID STRING, KPI_JSON VARIANT, ROLL_TIME TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_QA_METRICS ( MET_ID STRING PRIMARY KEY, REVIEWER STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVIEW_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, REVIEW_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVISION_APPROVALS_08 ( APPROVAL_ID STRING PRIMARY KEY, REV_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVISION_AUDIT_LOGS_6302 ( LOG_ID STRING PRIMARY KEY, REV_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVISION_REVIEW_LOGS_08 ( LOG_ID STRING PRIMARY KEY, REV_ID STRING, REVIEWER STRING, COMMENT CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_ACTIONS_07 ( ACTION_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, CERT_SERIAL STRING, ALERT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_INDEX_07 ( CERT_SN STRING PRIMARY KEY, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_LOGS_6209 ( LOG_ID STRING PRIMARY KEY, REVOKE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, CERT_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_PROPAGATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_PROPAGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_REGISTRY_6208 ( REVOKE_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.REVOCATION_REQUESTS_07 ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOKED_TOKENS ( REVOKE_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.REVOKED_TOKENS_13 ( REVOKE_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.REVOKE_INDEX ( RID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, ENTITY_REF STRING, RISK_SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_ALERT_QUEUE ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, STATUS STRING DEFAULT 'OPEN', RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ALERT_RESOLUTION ( RES_ID STRING PRIMARY KEY, ALERT_ID STRING, RESOLVED_BY STRING, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.RISK_AND_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RISK_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENTS_08 ( RISK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RISK_SCORE FLOAT, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENT_INDEX ( RISK_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RISK_ID STRING, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENT_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_ASSESSMENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_COMPLIANCE_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TENANT_ID STRING, MATRIX JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_ENGINE_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_EVALUATION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_EVALUATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SCORE NUMBER, DETAILS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_EXEMPTIONS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_EXEMPTION_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RISK_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TARGET_REF STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, VIOLATION_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_EFFECTIVENESS ( RES_ID STRING PRIMARY KEY, MIT_ID STRING, SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_LOGS ( LOG_ID STRING PRIMARY KEY, RISK_ID STRING, ACTION JSON, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_PLANS ( PLAN_ID STRING PRIMARY KEY, IDX_ID STRING, STEPS VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_PLANS ( PLAN_ID STRING PRIMARY KEY, RISK_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, PLAN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MITIGATION_TASKS ( TASK_ID STRING PRIMARY KEY, EXPOSURE_ID STRING, OWNER STRING, STATUS STRING, DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_METRICS ( METRIC_ID STRING PRIMARY KEY, MODEL_VER_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_RESULTS ( RESULT_ID STRING PRIMARY KEY, RUN_ID STRING, SIGNER_ID STRING, SCORE NUMBER, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_RUNS ( RUN_ID STRING PRIMARY KEY, MODEL_ID STRING, PARAMETERS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_TELEMETRY ( TELE_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_TELEMETRY ( TEL_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_VERSIONS ( MODEL_VER_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_MODEL_VERSIONS ( MV_ID STRING PRIMARY KEY, MODEL_NAME STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SIGNER_ID STRING, THRESHOLD_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RISK_POLICY_ASSIGNMENTS_13 ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, SIGNER_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, RULE_ID STRING, CONTEXT VARIANT, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_POLICY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, ACTIONS VARIANT, SEVERITY STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, MITIGATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, MITIGATION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, RISK_ID STRING, REVIEWER STRING, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_RULE_DEFINITIONS ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, REQUEST_ID STRING, SCORE FLOAT, FACTORS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORES_02 ( SCORE_ID STRING PRIMARY KEY, TARGET_REF STRING, PROFILE_ID STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORES_11 ( RISK_ID STRING PRIMARY KEY, SUBJECT_ID STRING, SCOPE STRING, SCORE NUMBER, METADATA VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_EXPOSURE ( EXPOSURE_ID STRING PRIMARY KEY, TENANT_ID STRING, RISK_SCORE NUMBER, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_FACTORS ( FACTOR_ID STRING PRIMARY KEY, SCORE_ID STRING, FACTOR_KEY STRING, FACTOR_VALUE VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SCORE_ID STRING, PREV_SCORE FLOAT, NEW_SCORE FLOAT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, REASON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_HISTORY ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, MODEL_REF STRING, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORE_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_PROFILES_02 ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_RESULTS ( RES_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, SUBJECT_REF STRING, RISK_SCORE NUMBER, DETAILS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_SCORING_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, NAME STRING, RULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_THRESHOLD_ACTIONS ( ACTION_ID STRING PRIMARY KEY, THRESHOLD_ID STRING, ACTION JSON, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RISK_TREATMENT_PLANS ( PLAN_ID STRING PRIMARY KEY, RISK_ID STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_TREATMENT_PROGRESS ( PROG_ID STRING PRIMARY KEY, PLAN_ID STRING, PROGRESS_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_TREATMENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RISK_TREATMENT_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ROLE_AUDIT_LOG ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ROLE_ASSIGNED STRING, ASSIGNED_BY STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ROLE_BINDINGS ( BIND_ID STRING PRIMARY KEY, ROLE_ID STRING, USER_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_CHANGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, FROM_ROLE STRING, TO_ROLE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_CHANGE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ROLE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, OLD_ROLE STRING, NEW_ROLE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_COMPLIANCE_INDEX_6102 ( IDX_ID STRING PRIMARY KEY, ROLE STRING, COMPLIANCE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_COMPLIANCE_LOGS_6103 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_DELEGATION_LOGS ( LOG_ID STRING PRIMARY KEY, ROLE_ID STRING, DELEGATED_TO STRING, DELEGATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.ROLE_GRANTS ( GRANT_ID STRING PRIMARY KEY, ROLE_ID STRING, SUBJECT STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_GRANT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROLE_NAME STRING, GRANTED_TO STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_GRANT_HISTORY ( GH_ID STRING PRIMARY KEY, ROLE_NAME STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.ROLE_GRANT_REQUESTS ( REQ_ID STRING PRIMARY KEY, ROLE_NAME STRING, TARGET_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_GRANT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, APPLIED_BY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), OUTCOME JSON );

CREATE OR REPLACE TABLE DOCGEN.ROLE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, ROLE_NAME STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_POLICIES_06 ( ROLE_POLICY_ID STRING PRIMARY KEY, ROLE_ID STRING, POLICY_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_POLICY_BINDINGS ( RPB_ID STRING PRIMARY KEY, ROLE_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLE_POLICY_HISTORY ( RPH_ID STRING PRIMARY KEY, RPB_ID STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ROLLBACKS ( ROLLBACK_ID STRING PRIMARY KEY, DEPLOY_ID STRING, REASON STRING, ROLLED_BACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLLBACK_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, RELEASE_REF STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLLOUT_HISTORY ( RH_ID STRING PRIMARY KEY, ROLL_ID STRING, ACCOUNT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLLOUT_METRICS_07 ( METRIC_ID STRING PRIMARY KEY, ROLLOUT_ID STRING, KEY STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLLOUT_PROGRESS ( PROG_ID STRING PRIMARY KEY, FLAG_ID STRING, TENANT_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROLLOUT_TELEMETRY ( MET_ID STRING PRIMARY KEY, ROLL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROSTER_CHANGE_HISTORY ( CHG_ID STRING PRIMARY KEY, ROSTER_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROTATION_EVENTS ( EVT_ID STRING PRIMARY KEY, RULE_ID STRING, OPERATOR STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ROTATION_FAILURES ( FAIL_ID STRING PRIMARY KEY, RULE_ID STRING, ERROR_DETAIL VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROTATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROUTING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROUTE_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.ROUTING_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, REQUEST_ID STRING, CHOSEN_PROVIDER STRING, LOG_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROUTING_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, REQUEST_ID STRING, SELECTED_TARGET STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ROW_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RULE_VIOLATION_AUDITS ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, SUBJECT_REF STRING, VIOLATION_DETAIL VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_AUDIT ( RA_ID STRING PRIMARY KEY, PB_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_CACHE ( CACHE_ID STRING PRIMARY KEY, RB_ID STRING, SNAPSHOT JSON, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, RUNBOOK_REF STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, NAME STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, TITLE STRING, STEPS VARIANT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, INITIATED_BY STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, REV_ID STRING, EXECUTOR STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, EXECUTOR STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, VERSION_ID STRING, OPERATOR STRING, STEPS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTION_METRICS ( METRIC_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, DURATION_MS NUMBER, OUTCOME STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXECUTION_STEPS ( STEP_ID STRING PRIMARY KEY, EXEC_ID STRING, STEP_INDEX INT, STATUS STRING, DETAIL VARIANT, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXEC_LOGS ( LOG_ID STRING PRIMARY KEY, RB_ID STRING, EXECUTOR STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_EXEC_LOGS ( LOG_ID STRING PRIMARY KEY, RUNBOOK_REF STRING, STEP_JSON VARIANT, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_FEEDBACK ( FB_ID STRING PRIMARY KEY, RB_ID STRING, AUTHOR STRING, FEEDBACK CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_INDEX ( INDEX_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, TITLE STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_LINKS ( LINK_ID STRING PRIMARY KEY, PB_ID STRING, URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_REVISION_HISTORY ( REV_ID STRING PRIMARY KEY, RUNBOOK_REF STRING, AUTHOR STRING, NOTES CLOB, REVISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_REVISION_REGISTRY ( REV_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, REV_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_RUNS ( RUN_ID STRING PRIMARY KEY, ENTRY_ID STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_STANDARDS ( STD_ID STRING PRIMARY KEY, NAME STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_STEPS_05 ( STEP_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_UPDATE_JOBS ( JOB_ID STRING PRIMARY KEY, RB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_UPDATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_USAGE ( USAGE_ID STRING PRIMARY KEY, PLAYBOOK_ID STRING, INVOKED_BY STRING, INVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_VERSIONS ( RV_ID STRING PRIMARY KEY, PB_ID STRING, VERSION INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNBOOK_VERSIONS ( VERSION_ID STRING PRIMARY KEY, RUNBOOK_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), APPLIED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OVERRIDE_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_CONFIG_CACHE ( KEY STRING PRIMARY KEY, VALUE VARIANT, LOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_CONFIG_CHANGE_Q ( Q_ID STRING PRIMARY KEY, CONFIG_KEY STRING, NEW_VALUE VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_CONFIG_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_CONFIG_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, SCOPE_REF STRING, CONFIG_JSON VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_EXPERIMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, EXP_ID STRING, SUBJECT_REF STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_EXPERIMENT_METRICS ( METRIC_ID STRING PRIMARY KEY, EXP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_FEATURE_EXPERIMENTS ( EXP_ID STRING PRIMARY KEY, FEATURE_KEY STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, FLAG_KEY STRING, ENABLED BOOLEAN DEFAULT FALSE, SCOPE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_FEATURE_METRICS ( MET_ID STRING PRIMARY KEY, FEATURE_KEY STRING, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUNTIME_METRICS_LABELS ( LABEL_ID STRING PRIMARY KEY, METRIC_KEY STRING, LABEL JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.RUN_HISTORY_ARCHIVE ( ARCH_ID STRING PRIMARY KEY, RUN_REF STRING, PAYLOAD VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAFETY_EVENT_INDEX ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAFETY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, ITEM_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAFETY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SALESFORCE_SYNC_QUEUE ( Q_ID STRING PRIMARY KEY, OBJECT_NAME STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SALESFORCE_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESPONSE JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_ASSERTIONS ( ASSERTION_ID STRING PRIMARY KEY, SUBJECT STRING, ASSERTION_XML CLOB, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_AUDIT ( AUDIT_ID STRING PRIMARY KEY, IDP_ID STRING, ASSERTION VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_AUDIT_EVENTS ( EVENT_ID STRING PRIMARY KEY, SUBJECT STRING, ASSERTION VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_IDP_REGISTRY ( IDP_ID STRING PRIMARY KEY, TENANT_ID STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_MAPPINGS_05 ( MAPPING_ID STRING PRIMARY KEY, IDP_ID STRING, MAPPING_RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAML_SSO_EVENTS ( EVENT_ID STRING PRIMARY KEY, IDP_ID STRING, SUBJECT_REF STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAMPLING_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, SAMPLE_REF STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAMPLING_CONFIGS_07 ( CONFIG_ID STRING PRIMARY KEY, INDEX_ID STRING, STRATEGY VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAMPLING_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, QUERY STRING, SCHEDULE VARIANT, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SAMPLING_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, SAMPLE VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SANCTIONS_LISTS ( LIST_ID STRING PRIMARY KEY, NAME STRING, SOURCE STRING, LAST_UPDATED TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SANCTIONS_LIST_11 ( ENTRY_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SANCTIONS_LIST_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER STRING, ENTRIES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SANCTIONS_SCREENING ( SCREEN_ID STRING PRIMARY KEY, SIGNER_ID STRING, LIST_NAME STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SANCTION_CHECK_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SANCTION_LIST_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SOURCE STRING, SNAPSHOT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_REPORTS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCHES ( SEARCH_ID STRING PRIMARY KEY, NAME STRING, QUERY STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCH_CATALOG ( SEARCH_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, QUERY JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCH_INDEX ( SEARCH_ID STRING PRIMARY KEY, TENANT_ID STRING, QUERY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCH_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCH_RESULTS ( RES_ID STRING PRIMARY KEY, SEARCH_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SAVED_SEARCH_RUNS ( RUN_ID STRING PRIMARY KEY, SEARCH_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCALING_EVENTS ( EVENT_ID STRING PRIMARY KEY, SERVICE_REF STRING, ACTION STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_AUDITS_10 ( AUDIT_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE STRING, LAST_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_AUDIT_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_DATA_RETENTION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, COMPONENT STRING, SCHEDULE_CRON STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_JOBS_12 ( JOB_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, LAST_RUN TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_MAINTENANCE_09 ( MAINT_ID STRING PRIMARY KEY, DESCRIPTION STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_MAINTENANCE_HISTORY ( HIST_ID STRING PRIMARY KEY, MW_ID STRING, PERFORMED_BY STRING, STATUS STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, NAME STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, TARGET_SCOPE VARIANT, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, NOTE CLOB );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_NOTIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, SCHEDULE JSON, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_QA_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE JSON, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REMINDERS ( REMINDER_ID STRING PRIMARY KEY, REQUEST_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, CHANNEL STRING, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORTS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, CRON JSON, LAST_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORTS ( SCHEDULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORTS ( SCHED_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CRON_EXPR STRING, TARGETS VARIANT, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORTS ( SREP_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, SCHEDULE VARIANT, OWNER STRING, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORT_JOBS ( JOB_ID STRING PRIMARY KEY, REPORT_ID STRING, CRON_EXPR STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORT_REGISTRY ( REPORT_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, OWNER STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, OUTPUT_LOCATION STRING );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULED_TASK_ERRORS ( ERROR_ID STRING PRIMARY KEY, TASK_NAME STRING, ERROR_MSG STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), TRACE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULER_HEARTBEAT ( HB_ID STRING PRIMARY KEY, SCHEDULER_NAME STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULER_JOBS_02 ( JOB_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPRESSION STRING, LAST_RUN_AT TIMESTAMP_LTZ, NEXT_RUN_AT TIMESTAMP_LTZ, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULER_KV ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEDULING_BACKLOG ( BACKLOG_ID STRING PRIMARY KEY, TASK_REF STRING, PRIORITY INT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_APPROVALS ( APR_ID STRING PRIMARY KEY, CHANGE_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_REGISTRY ( CHANGE_ID STRING PRIMARY KEY, OBJECT_NAME STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_REQUESTS_11 ( REQUEST_ID STRING PRIMARY KEY, REQUESTOR STRING, REQUEST VARIANT, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_MIGRATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, MIGRATION_ID STRING, APPLIED_BY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_MIGRATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, APPLIED_BY STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, VER_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_REGISTRY_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, VER_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_ROLLBACK_INDEX ( ROLL_ID STRING PRIMARY KEY, VER_ID STRING, ROLLBACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_VERSIONS_11 ( VERSION_ID STRING PRIMARY KEY, NAME STRING, CHANGELOG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_VERSION_INDEX ( VERSION_ID STRING PRIMARY KEY, SCHEMA_NAME STRING, VERSION_NUMBER INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_VERSION_INDEX ( VER_ID STRING PRIMARY KEY, SCHEMA_NAME STRING, VERSION INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_VERSION_LOGS_6341 ( LOG_ID STRING PRIMARY KEY, SCHEMA_VERSION_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCHEMA_VERSION_REGISTRY ( VERSION_ID STRING PRIMARY KEY, OBJECT_NAME STRING, VERSION_NUMBER INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCORECARD_LOGS_6387 ( LOG_ID STRING PRIMARY KEY, SCORE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SCORE_HISTORY_LOGS_6393 ( LOG_ID STRING PRIMARY KEY, HIST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_CLIENT_REGISTRY ( CLIENT_ID STRING PRIMARY KEY, NAME STRING, OWNER_ACCOUNT STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_CLIENT_SECRETS ( SECRET_ID STRING PRIMARY KEY, CLIENT_ID STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_COMPATIBILITY_MATRIX ( MATRIX_ID STRING PRIMARY KEY, SDK_NAME STRING, TARGETS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_DEPRECATION_JOBS ( JOB_ID STRING PRIMARY KEY, SDK_NAME STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_ERROR_REPORTS ( REPORT_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, ERROR_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, CLIENT_ID STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_RATE_LIMIT_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, LIMIT_ID STRING, CLIENT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_RELEASE_REGISTRY ( RELEASE_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, RELEASE_NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_TELEMETRY_HEARTBEAT ( HB_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_UPDATE_ROLLOUTS ( ROLL_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, TARGETS VARIANT, STARTED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SDK_USAGE_EVENTS ( EVENT_ID STRING PRIMARY KEY, CLIENT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, SDK_CLIENT STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_USAGE_METRICS ( MET_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SDK_VERSION_REGISTRY ( REG_ID STRING PRIMARY KEY, SDK_NAME STRING, VERSION STRING, RELEASE_NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_BACKFILL_QUEUE ( BACKFILL_ID STRING PRIMARY KEY, INDEX_NAME STRING, RANGE VARIANT, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_FALLBACK_ROUTES_11 ( ROUTE_ID STRING PRIMARY KEY, NAME STRING, PRIMARY_METHOD STRING, FALLBACK_METHODS ARRAY, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_FEEDBACK ( FB_ID STRING PRIMARY KEY, QUERY_REF STRING, USER_REF STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_HISTORY ( HISTORY_ID STRING PRIMARY KEY, SEARCH_ID STRING, RAN_BY STRING, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT_COUNT INT );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_HEALTH ( INDEX_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_HEALTH ( SIH_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, LAST_REBUILT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_META_07 ( INDEX_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_REBUILDS ( RB_ID STRING PRIMARY KEY, INDEX_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, STATUS STRING, NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_ROTATION_JOBS_6056 ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_ROTATION_LOGS_6057 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_INDEX_STATS_07 ( STATS_ID STRING PRIMARY KEY, INDEX_ID STRING, METRICS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_METRICS ( METRIC_ID STRING PRIMARY KEY, QUERY STRING, RESULT_COUNT INT, LATENCY_MS FLOAT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_TEXT STRING, INDEX_REF STRING, RESULTS_COUNT INT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_TEXT STRING, SUBJECT_REF STRING, RESULTS_COUNT INT, QUERY_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_QUERY_LABELS ( LABEL_ID STRING PRIMARY KEY, QUERY_ID STRING, LABEL STRING, LABELED_BY STRING, LABELED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_QUERY_LOGS ( LOG_ID STRING PRIMARY KEY, QUERY_TEXT STRING, USER_REF STRING, RESULTS_COUNT INT, RUNTIME_MS INT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_QUERY_TELEMETRY ( TELE_ID STRING PRIMARY KEY, TENANT_ID STRING, QUERY_TEXT STRING, RESULT_COUNT INT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_RELEVANCE_EVENTS ( EVT_ID STRING PRIMARY KEY, QUERY_ID STRING, DOC_REF STRING, RATING INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_SUGGESTIONS ( SUGG_ID STRING PRIMARY KEY, TERM STRING, SCORE FLOAT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_SUGGEST_STATS ( STAT_ID STRING PRIMARY KEY, SUGGESTION STRING, SELECTED_COUNT INT, LAST_SELECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, QUERY STRING, RESULTS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_TELEMETRY ( TELE_ID STRING PRIMARY KEY, QUERY_TEXT STRING, USER_REF STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_TELEMETRY ( TELE_ID STRING PRIMARY KEY, SEARCH_ID STRING, LATENCY_MS INT, HIT_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_TELEMETRY_AGG ( AGG_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEARCH_TOKENS ( TOKEN_ID STRING PRIMARY KEY, TOKEN STRING, ENTITY_REF VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, SECRET_REF STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SECRET_REF STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ACCESS_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, SECRET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ROTATION_LOG ( ROT_ID STRING PRIMARY KEY, SECRET_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SECRET_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECTION_SEARCH_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECTION_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, SECTION_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECTION_UPDATE_JOBS ( JOB_ID STRING PRIMARY KEY, SECTION_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECTION_UPDATE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURE_CONFIG_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, KEY_NAME STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURE_CONFIG_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURE_ERASE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INC_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_ADVISORY_ACK ( ACK_ID STRING PRIMARY KEY, ADV_ID STRING, ACKED_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_ADVISORY_REGISTRY ( ADV_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS CLOB );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_CONTROL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTROL_REF STRING, RESULT VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_CONTROL_CHECKLIST ( ITEM_ID STRING PRIMARY KEY, DESCRIPTION STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_CONTROL_ISSUES ( ISSUE_ID STRING PRIMARY KEY, AUDIT_ID STRING, SEVERITY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, SEVERITY STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_EVENT_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, STREAM_ID STRING, EVENT_JSON VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_EVENT_INDEX ( EVENT_IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, SEVERITY STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_EVENT_STREAMS ( STREAM_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENTS ( INC_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION STRING, SEVERITY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_ANALYSIS ( ANAL_ID STRING PRIMARY KEY, TICKET_ID STRING, FINDINGS VARIANT, ANALYZED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_CLASSIFICATIONS ( CLASS_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_CLOSURE ( CLOSURE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, RESOLUTION JSON, CLOSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CLOSED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_FOLLOWUPS ( FOLLOWUP_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, DUE_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_INDEX ( INC_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_PLAYBACKS ( PLAY_ID STRING PRIMARY KEY, INCIDENT_ID STRING, PLAY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_QUEUE ( Q_ID STRING PRIMARY KEY, INCIDENT_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_REGISTRY ( INCIDENT_ID STRING PRIMARY KEY, SUMMARY CLOB, SEVERITY STRING, STATUS STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, DESCRIPTION CLOB, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_REPORTS ( INCIDENT_ID STRING PRIMARY KEY, TITLE STRING, SEVERITY STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_RESPONSE ( INCIDENT_ID STRING PRIMARY KEY, SEVERITY STRING, STEPS JSON, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_RESPONSE_PLANS ( PLAN_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_RUNS ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_TICKETS ( TICKET_ID STRING PRIMARY KEY, CLASS_ID STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_TIMELINE ( TL_ID STRING PRIMARY KEY, INC_ID STRING, EVENT JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_UPDATES ( UPDATE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, UPDATED_BY STRING, UPDATE_TEXT STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INCIDENT_WORKFLOW ( WF_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INVESTIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON CLOB, STATUS STRING DEFAULT 'OPEN', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_INVESTIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, FINDINGS VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGES VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POLICY_VIOLATION_INDEX ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POSTMORTEM_ARCHIVE ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, DOC_URL STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_POSTMORTEM_REGISTRY ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, REPORT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_QA_CHECKS ( CHECK_ID STRING PRIMARY KEY, SCOPE VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_REMEDIATION_PLANS ( PLAN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_REMEDIATION_RUNS ( RUN_ID STRING PRIMARY KEY, PLAN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_RUNBOOK_INDEX ( RUN_ID STRING PRIMARY KEY, PATH STRING, SUMMARY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_SCAN_ALERTS ( ALERT_ID STRING PRIMARY KEY, SCAN_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_SCAN_RESULTS ( RES_ID STRING PRIMARY KEY, SCAN_TYPE STRING, FINDINGS VARIANT, SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_SECRET_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, SECRET_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_TRAINING_COMPLETIONS ( COMP_ID STRING PRIMARY KEY, TRAIN_ID STRING, OP_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SCORE NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SECURITY_TRAINING_REGISTRY ( TRAIN_ID STRING PRIMARY KEY, TITLE STRING, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEC_INCIDENT_CORRELATIONS ( CORR_ID STRING PRIMARY KEY, INCIDENT_ID STRING, CORRELATED_WITH VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEGMENT_ASSIGNMENT_LOGS ( LOG_ID STRING PRIMARY KEY, SEG_ID STRING, SUBJECT_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_INDEX ( INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VECTOR VECTOR, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_INDEX_METADATA ( META_ID STRING PRIMARY KEY, SNAP_ID STRING, SHARD_ID STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_INDEX_METRICS ( MET_ID STRING PRIMARY KEY, INDEX_REF STRING, SIZE NUMBER, LAST_REFRESH TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_INDEX_SNAPSHOTS ( SNAPSHOT_ID STRING PRIMARY KEY, IDX_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_INDEX_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_METADATA ( META_ID STRING PRIMARY KEY, INDEX_ID STRING, KEY STRING, VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_RETRIEVAL_JOBS ( JOB_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, HITS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_HASH STRING, TENANT_ID STRING, RESULTS_META VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_TEXT STRING, TENANT_ID STRING, USER_REF STRING, RESULT_COUNT NUMBER, QUERY_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_CONSENT_LOG ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, USER_REF STRING, CONSENTED BOOLEAN, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_REQUESTS ( REQ_ID STRING PRIMARY KEY, QUERY_TEXT CLOB, TENANT_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, HIT_LIST VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, QUERY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_USAGE ( USG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEMANTIC_SEARCH_USAGE ( USG_ID STRING PRIMARY KEY, TENANT_ID STRING, QUERY TEXT, HIT_COUNT INT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_DATA_ACCESS_LOGS_13 ( LOG_ID STRING PRIMARY KEY, FIELD_REF STRING, ACCESSOR STRING, REASON STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_DATA_MASKING_RULES_6382 ( RULE_ID STRING PRIMARY KEY, FIELD_PATH STRING, MASK_PATTERN STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_DATA_REDACTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_DATA_REDACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, FIELD_REF STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PURPOSE STRING );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_CATALOG ( FIELD_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, SENSITIVITY_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_CHANGES ( CHANGE_ID STRING PRIMARY KEY, FIELD_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_DETECTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_INDEX ( IDX_ID STRING PRIMARY KEY, TABLE_NAME STRING, FIELD_NAME STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_INVENTORY ( FIELD_ID STRING PRIMARY KEY, TABLE_NAME STRING, COLUMN_NAME STRING, SENSITIVITY_LEVEL STRING, DISCOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_MASKING_JOBS ( JOB_ID STRING PRIMARY KEY, IDX_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVE_FIELD_MASKING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, MASKED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVITY_LOGS_6381 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVITY_TAGGING_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSITIVITY_TAGGING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TAGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SENSOR_DATA_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SESSION_ID STRING, AGG_JSON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SEQ_IDS ( SEQ_NAME STRING PRIMARY KEY, LAST_VAL NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCESS_CONTROL ( ACL_ID STRING PRIMARY KEY, SERVICE_ID STRING, SUBJECT STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_ACTIVITY ( ACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, ACTION STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SA_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACCT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SA_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SERVICE_ACCOUNT STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_KEYS ( KEY_ID STRING PRIMARY KEY, ACCT_ID STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_REGISTRY ( ACCOUNT_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_REGISTRY ( ACCT_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_REGISTRY ( SA_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ACCOUNT_REGISTRY ( SA_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_API_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, SERVICE_REF STRING, LIMIT_SPEC VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_API_RATE_USAGE ( USG_ID STRING PRIMARY KEY, LIMIT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, USAGE_COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SERVICE_REF STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, SERVICE_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, SERVICE_REF STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, SERVICE_REF STRING, PREDICTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_NAME STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, CAPACITY JSON, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, CAPACITY_JSON VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, CAPACITY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SERVICE_REF STRING, CAPACITY JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CATALOG ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CATALOG ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CATALOG ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CATALOG_INDEX_6077 ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CATALOG_LOGS_6078 ( LOG_ID STRING PRIMARY KEY, SERVICE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ, COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CHANGE_LOG_11 ( CHANGE_ID STRING PRIMARY KEY, SERVICE_ID STRING, CHANGE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, SERVICE_REF STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, OVERRIDE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONFIG_KEYS ( KEY_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, SCOPE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONFIG_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, SERVICE_REF STRING, TENANT_ID STRING, CONFIG JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONFIG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, CONFIG_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONTINUITY_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, STEPS VARIANT, LAST_TESTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONTINUITY_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, PLAN_ID STRING, OUTCOME VARIANT, TESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONTRACT_AMENDMENTS ( AMEND_ID STRING PRIMARY KEY, CONTRACT_ID STRING, AMEND_JSON VARIANT, AMENDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CONTRACT_INDEX ( CONTRACT_ID STRING PRIMARY KEY, SERVICE_REF STRING, CONTRACT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_COST_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, CC_ID STRING, PERIOD JSON, COSTS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_COST_CENTERS ( CC_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, SERVICE_ID STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, SERVICE_NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_CREDENTIAL_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, CRED_REF STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEBT_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, DEBT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEBT_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEBT_REGISTRY ( DEBT_ID STRING PRIMARY KEY, SERVICE_REF STRING, DESCRIPTION CLOB, PRIORITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEGRADATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SERVICE_REF STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEGRADATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SERVICE_REF STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEGRADATION_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, SERVICE_ID STRING, DESCRIPTION STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEGRADATION_LOGS ( LOG_ID STRING PRIMARY KEY, COMPONENT STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, NODE_ID STRING, INCIDENT_REF STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDENCY_REF STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_CHECKS ( CHECK_ID STRING PRIMARY KEY, NODE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_GRAPH ( NODE_ID STRING PRIMARY KEY, NODE_REF STRING, DEPENDS_ON ARRAY, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_HEALTH ( IDX_ID STRING PRIMARY KEY, EDGE_ID STRING, HEALTH_STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_INDEX ( DEP_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDENCY_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_INDEX ( IDX_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP ( EDGE_ID STRING PRIMARY KEY, FROM_SERVICE STRING, TO_SERVICE STRING, RELATION_TYPE STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP ( MAP_ID STRING PRIMARY KEY, SERVICE_ID STRING, DEPENDS_ON ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP ( MAP_ID STRING PRIMARY KEY, SERVICE_NAME STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP ( MAP_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDENCIES ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP ( MAP_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPENDENCY_MAP_6110 ( MAP_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPLOYMENT_METRICS ( MET_ID STRING PRIMARY KEY, DEP_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPLOYMENT_REGISTRY ( DEP_ID STRING PRIMARY KEY, SERVICE_NAME STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPRECATION_FLAGS ( FLAG_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SCHED_ID STRING, SENT_TO ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPRECATION_PLANS ( PLAN_ID STRING PRIMARY KEY, SERVICE_REF STRING, TIMELINE JSON, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPRECATION_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, SERVICE_NAME STRING, DEPRECATION_DATE TIMESTAMP_LTZ, NOTICE JSON );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEPRECATION_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, SERVICE_REF STRING, DEPRECATION_DATE DATE, NOTICE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DEP_GRAPH ( EDGE_ID STRING PRIMARY KEY, FROM_COMP STRING, TO_COMP STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_DISCOVERY_INDEX ( SERVICE_ID STRING PRIMARY KEY, METADATA VARIANT, DISCOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_FEATURE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, SERVICE_REF STRING, FEATURE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH ( SERVICE_HEALTH_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_07 ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_10 ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_ALERTS ( ALERT_ID STRING PRIMARY KEY, SERVICE_NAME STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, SERVICE_ID STRING, CHECK_NAME STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, SERVICE_NAME STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_CHECKS ( HC_ID STRING PRIMARY KEY, SERVICE_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_DASHBOARD ( DASH_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_EVENTS ( EVENT_ID STRING PRIMARY KEY, CHECK_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_EVENTS ( EVENT_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_EVENTS ( EVT_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, COMPONENT STRING, SEVERITY STRING, DESCRIPTION STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_METRICS ( METRIC_ID STRING PRIMARY KEY, SERVICE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_OVERVIEW_MV ( MV_ID STRING PRIMARY KEY, SERVICE_REF STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_REPORT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SERVICE_REF STRING, METRICS VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SCOPE VARIANT, METRICS VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_SUMMARIES ( SUM_ID STRING PRIMARY KEY, SERVICE_REF STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEALTH_SUMMARY ( SUMMARY_ID STRING PRIMARY KEY, SERVICE_REF STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_HEARTBEAT_HISTORY ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_INCIDENT_INDEX ( SII_ID STRING PRIMARY KEY, SERVICE_NAME STRING, INCIDENT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_INCIDENT_TAGS ( TAG_ID STRING PRIMARY KEY, INCIDENT_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_INTEGRATION_ERRORS ( ERR_ID STRING PRIMARY KEY, REG_ID STRING, ERROR_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_INTEGRATION_PENALTIES ( PENALTY_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, PENALTY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_INTEGRATION_REGISTRY ( REG_ID STRING PRIMARY KEY, SERVICE_NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_KEYS_12 ( KEY_ID STRING PRIMARY KEY, SERVICE_ID STRING, KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_KEY_ROTATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SERVICE_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_AGREEMENTS ( SLA_ID STRING PRIMARY KEY, NAME STRING, TERMS VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_BREACH_LOG ( LOG_ID STRING PRIMARY KEY, SCOPE STRING, BREACH_DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_CHARTS ( CHART_ID STRING PRIMARY KEY, SERVICE_REF STRING, CHART_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_CONFIG ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_OBJECTIVES ( SLO_ID STRING PRIMARY KEY, NAME STRING, METRIC JSON, TARGET VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_LEVEL_REPORTS ( RPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_NAME STRING, RPT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_MAINTENANCE_ACKS ( ACK_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, COMPONENT STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_MAINTENANCE_NOTES ( NOTE_ID STRING PRIMARY KEY, SERVICE_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, SERVICE_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, SERVICE_REF STRING, ITEM STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, SERVICE_REF STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ONBOARDING_STATUS ( STATUS_ID STRING PRIMARY KEY, SERVICE_REF STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_ONCALL_ROTATIONS ( ROT_ID STRING PRIMARY KEY, SERVICE_REF STRING, ROTATION JSON, EFFECTIVE_FROM DATE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OPERATIONAL_NOTES ( NOTE_ID STRING PRIMARY KEY, SERVICE_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OUTAGE_INDEX ( OUTAGE_ID STRING PRIMARY KEY, SERVICE_REF STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OUTAGE_INDEX ( OUTAGE_ID STRING PRIMARY KEY, SERVICE_REF STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, SUMMARY CLOB );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OUTAGE_POSTMORTEMS ( PM_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ROOT_CAUSE JSON, MITIGATIONS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OUTAGE_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, SERVICE_REF STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OWNERSHIP_INDEX ( OWN_ID STRING PRIMARY KEY, SERVICE_REF STRING, OWNER_REF STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_OWNERSHIP_REGISTRY ( OWN_ID STRING PRIMARY KEY, SERVICE_REF STRING, OWNERS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_PROVIDER_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, SERVICE_ID STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_QUOTA_CONSUMPTION ( ENTRY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUOTA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_QUOTA_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_REGISTRY ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_RUNBOOK_VERSIONS ( VERSION_ID STRING PRIMARY KEY, RUNBOOK_ID STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_RUN_CAPACITY ( CAP_ID STRING PRIMARY KEY, SERVICE_REF STRING, CAPACITY_METRICS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLA ( SLA_ID STRING PRIMARY KEY, SERVICE_REF STRING, SLO VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLA_CATALOG ( SLA_ID STRING PRIMARY KEY, SERVICE_REF STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLOWNESS_12 ( INCIDENT_ID STRING PRIMARY KEY, SERVICE_ID STRING, LATENCY_MS NUMBER, SAMPLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLO_DEFINITIONS ( SLO_ID STRING PRIMARY KEY, SERVICE_REF STRING, SLO_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLO_REGISTRY ( SLO_ID STRING PRIMARY KEY, SERVICE_NAME STRING, SLO_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLO_RUNS ( RUN_ID STRING PRIMARY KEY, SLO_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLO_TRACKER ( SLO_ID STRING PRIMARY KEY, SLO_JSON VARIANT, PERIOD JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_SLO_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SERVICE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_TOKENS_02 ( TOKEN_ID STRING PRIMARY KEY, SERVICE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_UPGRADE_NOTES ( NOTE_ID STRING PRIMARY KEY, SERVICE_REF STRING, NOTES CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_USAGE_FORECAST ( FCST_ID STRING PRIMARY KEY, TENANT_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, SERVICE_ID STRING, VERSION STRING, CHANGELOG CLOB, RELEASED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_VERSION_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, SERVICE_REF STRING, FROM_VERSION STRING, TO_VERSION STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SERVICE_VERSION_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ACTIVITY_STREAM ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTIVITY JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SESSION_ID STRING, ALERT_TYPE STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ANNOTATIONS ( ANNO_ID STRING PRIMARY KEY, SESSION_ID STRING, ANNOTATION STRING, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SESSION_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ANOMALY_INDEX ( ANOM_ID STRING PRIMARY KEY, SESSION_ID STRING, ANOMALY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ANOMALY_SCORES ( SCORE_ID STRING PRIMARY KEY, SESSION_ID STRING, SCORE FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ANOMALY_SCORES ( SCORE_ID STRING PRIMARY KEY, SESSION_ID STRING, SCORE NUMBER, META VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ARTIFACTS ( ARTIFACT_ID STRING PRIMARY KEY, SESSION_ID STRING, TYPE STRING, LOCATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT_04 ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT_05 ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PAYLOAD VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT_11 ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT_12 ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_AUDIT_13 ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_BLACKLIST_06 ( BL_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON STRING, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_CONCURRENCY_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTIVE_SESSIONS INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_BINDINGS ( BIND_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_CLAIMS ( CLAIM_ID STRING PRIMARY KEY, SESSION_ID STRING, CLAIMS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_EVENTS ( EVT_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_MAP ( MAP_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_MAPPING ( MAP_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_DEVICE_METRICS ( M_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_META VARIANT, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_ENRICHMENTS ( ENR_ID STRING PRIMARY KEY, SESSION_ID STRING, ENRICHMENT JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_EVENT_INDEX ( SEI_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_REF STRING, EVENT_TYPE STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_FINGERPRINT_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, FPR_ID STRING, OTHER_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_FINGERPRINT_INDEX ( FPR_ID STRING PRIMARY KEY, SESSION_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_FRAGMENT_INDEX ( FRAG_ID STRING PRIMARY KEY, SESSION_ID STRING, SEQ INT, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_FRAUD_FLAGS ( FLAG_ID STRING PRIMARY KEY, SESSION_ID STRING, FLAG_TYPE STRING, FLAG_DETAIL VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEOFENCES ( GF_ID STRING PRIMARY KEY, SESSION_ID STRING, GEOPOLYGON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEOLOCATION_INDEX ( GEO_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCATION VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEOLOCATION_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, GEO JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_AGG ( AGG_ID STRING PRIMARY KEY, SIGNER_ID STRING, COUNTRY STRING, SESSIONS INT, LAST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_CORRELATION ( CORR_ID STRING PRIMARY KEY, SESSION_ID STRING, GEO_MATCH BOOLEAN, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_DISTRIBUTION ( DIST_ID STRING PRIMARY KEY, SESSION_ID STRING, GEO_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_FENCE_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, LATITUDE NUMBER, LONGITUDE NUMBER, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_FENCE_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, SESSION_ID STRING, VIOLATION_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_FENCING_CONFIGS ( CFG_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_GEO_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, LAT NUMBER, LON NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_HARDENING_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_HARDENING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_HEARTBEATS ( HB_ID STRING PRIMARY KEY, SESSION_ID STRING, HB_PAYLOAD VARIANT, HB_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_HEARTBEATS ( HB_ID STRING PRIMARY KEY, SESSION_ID STRING, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_HISTORY ( HISTORY_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT STRING, PAYLOAD VARIANT, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_IDLE_TIMEOUT_JOBS ( JOB_ID STRING PRIMARY KEY, SESSION_ID STRING, STATUS STRING, SCHEDULED_AT TIMESTAMP_LTZ, EXECUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_KILL_QUEUE ( Q_ID STRING PRIMARY KEY, SESSION_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_KILL_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_LOCKS ( LOCK_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_LOCK_HISTORY ( H_ID STRING PRIMARY KEY, LOCK_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_MEDIA_STORE ( MEDIA_ID STRING PRIMARY KEY, SESSION_ID STRING, MEDIA_LOCATION STRING, MIME_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_META ( META_ID STRING PRIMARY KEY, SESSION_ID STRING, KEY_NAME STRING, VAL VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, DURATION_MS INT, EVENTS_COUNT INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, SESSION_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_POLICY_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, POLICY_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_POLICY_VIOLATIONS ( PV_ID STRING PRIMARY KEY, SESSION_ID STRING, POLICY_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_POLICY_VIOLATION_QUEUE ( Q_ID STRING PRIMARY KEY, SESSION_ID STRING, POLICY_ID STRING, DETAILS VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_POLICY_VIOLATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_PREF_LOGS_6401 ( LOG_ID STRING PRIMARY KEY, PREF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SESSION_ID STRING, SCORE NUMBER, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_QUALITY_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, ALERT_ID STRING, INVESTIGATOR STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, SESSION_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RECOVERY_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RECOVERY_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RECOVERY_USAGE ( USG_ID STRING PRIMARY KEY, TOKEN_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), USED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAYS ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAYS ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, REPLAY_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_AUDIT ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, REPLAYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_CONFIGS ( CFG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_EVENTS ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCATION STRING, EXPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, SNAPSHOT_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, REPLAY_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_INDEX ( RIDX_ID STRING PRIMARY KEY, SESSION_ID STRING, REPLAY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, REPLAYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, REPLAY_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_MANIFESTS ( MANIFEST_ID STRING PRIMARY KEY, SESSION_ID STRING, S3_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_MANIFESTS ( MAN_ID STRING PRIMARY KEY, SESSION_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_REQUESTS ( REQ_ID STRING PRIMARY KEY, REPLAY_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_REQUESTS ( REQ_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, MAN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_SEGMENTS ( SEG_ID STRING PRIMARY KEY, SESSION_ID STRING, SEQ INT, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SESSION_ID STRING, SNAPSHOT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_STORAGE ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_STORAGE ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, STORAGE_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REPLAY_STORAGE ( STORE_ID STRING PRIMARY KEY, REPLAY_REF STRING, STORAGE_URL STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RESOURCE_USAGE ( USAGE_ID STRING PRIMARY KEY, SESSION_ID STRING, CPU_MS NUMBER, MEM_BYTES NUMBER, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATIONS ( REV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATIONS ( REV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATIONS ( RV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_AT TIMESTAMP_LTZ, REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_REVOCATION_LOG ( REV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RISK_EVALS ( EVAL_ID STRING PRIMARY KEY, SESSION_ID STRING, RISK_SCORE NUMBER, DETAILS VARIANT, EVALUATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RISK_LOGS_6245 ( LOG_ID STRING PRIMARY KEY, SCORE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RISK_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_RISK_SCORES_6244 ( SCORE_ID STRING PRIMARY KEY, SESSION_ID STRING, RISK_SCORE NUMBER, FACTORS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_SECURITY_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_SECURITY_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_SNAPSHOT_INDEX ( IDX_ID STRING PRIMARY KEY, SNAP_ID STRING, SESSION_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_STATE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SESSION_ID STRING, STATE VARIANT, SNAP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TELEMETRY ( TELE_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TELEMETRY ( TELE_ID STRING PRIMARY KEY, SESSION_ID STRING, TELEMETRY VARIANT, COLLECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATIONS_06 ( TERM_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON STRING, TERMINATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATION_JOBS ( JOB_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATION_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON STRING, TERMINATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATION_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, TERMINATED_BY STRING, REASON STRING, TERMINATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATION_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TERMINATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_THREAT_SCORES ( SCORE_ID STRING PRIMARY KEY, SESSION_ID STRING, SCORE NUMBER, REASONS VARIANT, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TIMELINE_EVENTS ( TLE_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TIMEOUTS ( TIMEOUT_ID STRING PRIMARY KEY, SESSION_ID STRING, TIMEOUT_AT TIMESTAMP_LTZ, HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TIMEOUT_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, SESSION_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TIMEOUT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, TIMEOUT_SECONDS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS ( SESSION_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS ( ST_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_02 ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_03 ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_03 ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_07 ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_10 ( TOKEN_ID STRING PRIMARY KEY, SIGNER_ID STRING, TOKEN STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_12 ( SESS_TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_ID STRING, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_ARCHIVE ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, EXPIRED_AT TIMESTAMP_LTZ, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKENS_REVOKED ( REVOKE_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKEN_BLACKLIST ( BL_ID STRING PRIMARY KEY, TOKEN_HASH STRING, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKEN_BLACKLIST ( TOKEN_ID STRING PRIMARY KEY, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKEN_BLACKLIST ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SESSION_TOKEN_REVOCATIONS ( REV_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SETTLEMENT_BATCHES ( BATCH_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, CURRENCY STRING, STATUS STRING DEFAULT 'CREATED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SETTLEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, BATCH_ID STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHARD_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, SHARD_REF STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHARD_LOAD_HISTORY ( LOAD_ID STRING PRIMARY KEY, MANIFEST_ID STRING, SHARD_REF STRING, STATUS STRING, LOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_LOAD_JOBS_6050 ( JOB_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SHARD_LOAD_LOGS_6051 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_LIST VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_MANIFEST_12 ( SHARD_ID STRING PRIMARY KEY, S3_PREFIX STRING, VECTOR_COUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_MANIFEST_14 ( SHARD_ID STRING PRIMARY KEY, INDEX_NAME STRING, SHARD_URI STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_REBALANCE_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_REBALANCE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARD_RECONCILIATION_LOG ( LOG_ID STRING PRIMARY KEY, INDEX_ID STRING, SHARD_REF STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHARED_REPORTS ( SHARE_ID STRING PRIMARY KEY, REPORT_ID STRING, SHARED_WITH ARRAY, PERMISSIONS VARIANT, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARED_SECRET_REGISTRY ( SECRET_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARED_SECRET_ROTATION ( ROT_ID STRING PRIMARY KEY, SECRET_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHARED_VIEWS ( VIEW_ID STRING PRIMARY KEY, NAME STRING, OWNER STRING, DEF VARIANT, SHARED_WITH ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARE_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, SHARE_ID STRING, ACTION STRING, ACTION_BY STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHARE_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, RULES VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARE_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, SHARE_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SHARE_REVOCATION_QUEUE ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARE_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARING_AUDIT_TRAIL ( TRAIL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTION STRING, BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHARING_LINK_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, LINK_ID STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SOURCE_IP STRING );

CREATE OR REPLACE TABLE DOCGEN.SHARING_LINK_REVOCATIONS ( REV_ID STRING PRIMARY KEY, LINK_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SHARING_PERMISSION_GRANTS ( GRANT_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, GRANTED_TO STRING, PERMS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_COVERAGE ( COVER_ID STRING PRIMARY KEY, SHIFT_ID STRING, REQUIRED INT, ASSIGNED INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, SHIFT_ID STRING, OPERATOR STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_FEEDBACK ( FB_ID STRING PRIMARY KEY, SHIFT_ID STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_INCIDENT_LOG ( LOG_ID STRING PRIMARY KEY, SHIFT_ID STRING, INCIDENT_ID STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_OPTIMIZATIONS ( OPT_ID STRING PRIMARY KEY, RULES JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_PREDICTIONS ( PRED_ID STRING PRIMARY KEY, OPERATOR STRING, PRED_JSON VARIANT, PREDICTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, OPERATOR STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_ROSTERS ( ROSTER_ID STRING PRIMARY KEY, SHIFT_DATE DATE, OPERATOR_LIST ARRAY, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RULE_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_SWAP_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, FROM_OPERATOR STRING, TO_OPERATOR STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_SWAP_REQUESTS ( REQ_ID STRING PRIMARY KEY, SHIFT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_SWAP_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHIFT_SWAP_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SHORT_CODE_REGISTRY ( CODE_ID STRING PRIMARY KEY, PURPOSE STRING, ASSIGNED_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT STRING, ACTION STRING, RESOURCE STRING, SOURCE_IP STRING, USER_AGENT STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ACKNOWLEDGEMENTS_01 ( ACK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_REF STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METHOD STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ACTIVITY_FEED ( FEED_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ALERTS ( ALERT_ID STRING PRIMARY KEY, ALERT_TYPE STRING, ENTITY_REF STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ALERT_EVENTS ( EVENT_ID STRING PRIMARY KEY, ALERT_ID STRING, ENTITY_REF STRING, SEVERITY STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ALGORITHM_REGISTRY ( ALG_ID STRING PRIMARY KEY, NAME STRING, PROPERTIES VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, EVENT_COUNT NUMBER, FIRST_TS TIMESTAMP_LTZ, LAST_TS TIMESTAMP_LTZ, DURATION_SECONDS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ANCHOR_LINKS ( LINK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ANCHOR_TXID STRING, CHAIN_POS INT, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ANCHOR_TX ( ANCHOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHAIN STRING, TXID STRING, EXPLORER_URL STRING, ANCHORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ANOMALY_FLAGS ( FLAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON STRING, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ATTACHMENTS ( ATTACH_ID STRING PRIMARY KEY, REQUEST_ID STRING, FILENAME STRING, FILE_URL STRING, META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SIGNATURE_REQUEST_ID STRING, SIGNER_ID STRING, ATTEMPT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_INDEX ( SAI_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, BUNDLE_ID STRING, SIGNER_ID STRING, AUDIT_HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_INDEX_02 ( IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_INDEX_03 ( IDX_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTITY_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_LOG ( AUDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, USER_ID STRING, ACTION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_LOGS_6319 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, ENTITY_TYPE STRING, ENTITY_ID STRING, ACTION STRING, ACTOR STRING, METADATA VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAIL VARIANT, AUDIT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_AUDIT_TRAIL_6318 ( AUDIT_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, JOB_TYPE STRING, STATUS STRING, PROGRESS VARIANT, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BATCH_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, EXPORT_TYPE STRING, STATUS STRING, SCHEDULE CRON, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BATCH_JOBS ( JOB_ID STRING PRIMARY KEY, BUNDLE_IDS ARRAY, STATUS STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BATCH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SUCCEEDED INT, FAILED INT, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BIOMETRICS ( BIO_ID STRING PRIMARY KEY, SIGNER_ID STRING, BIOMETRIC_HASH STRING, TRUST_SCORE FLOAT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BIOMETRIC_INDEX ( BIO_ID STRING PRIMARY KEY, SIGNER_ID STRING, BIOMETRIC_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BLOCK_REGISTRY_13 ( BLOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FIELD_REF STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_BLOCK_USAGE_13 ( USAGE_ID STRING PRIMARY KEY, BLOCK_ID STRING, DOCUMENT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CERT_PEM CLOB, CERT_FINGERPRINT STRING, ISSUER VARIANT, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBJECT STRING, ISSUER STRING, SERIAL_NUMBER STRING, PEM CLOB, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, OCSP_URLS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CERT_CHAIN VARIANT, SERIAL_NUMBER STRING, ISSUER STRING, SUBJECT STRING, NOT_BEFORE TIMESTAMP_LTZ, NOT_AFTER TIMESTAMP_LTZ, OCSP_RESPONSE VARIANT, CRL_STATUS VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CERT_FINGERPRINT STRING, CERT_PEM CLOB, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CERT_PEM CLOB, FINGERPRINT STRING, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CHAIN_LOGS_6397 ( LOG_ID STRING PRIMARY KEY, CHAIN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CHAIN_VERIFICATION ( VER_ID STRING PRIMARY KEY, CHAIN_ID STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CHAIN_VERIFICATION_JOBS ( JOB_ID STRING PRIMARY KEY, CHAIN_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CHAIN_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CHANGE_REQUESTS ( CHANGE_ID STRING PRIMARY KEY, REQUEST_ID STRING, REQUESTED_BY STRING, CHANGE_PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, RESULT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CONFIDENCE_INDEX ( CONF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CONFIDENCE_SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CONSENTS ( CONSENT_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, CONSENT_TEXT CLOB, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CONSENTS ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_TYPE STRING, GIVEN_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_TEXT CLOB, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METHOD STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_TEXT STRING, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_COOKIE_JOURNAL ( COOKIE_ID STRING PRIMARY KEY, SESSION_ID STRING, COOKIE_PAYLOAD VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_COVERAGE_REPORTS ( REPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CREDENTIAL_CACHE ( CACHE_ID STRING PRIMARY KEY, CRED_REF STRING, CRED_META VARIANT, EXPIRES_AT TIMESTAMP_LTZ, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CREDENTIAL_ROLLOVER ( ROLLOVER_ID STRING PRIMARY KEY, KEY_REF STRING, ROTATED_BY STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_CROSS_TENANT_LINKS ( LINK_ID STRING PRIMARY KEY, SOURCE_ACCOUNT_ID STRING, TARGET_ACCOUNT_ID STRING, POLICY_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DENSITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, DENS_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DEVICE_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, DEVICE_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DISPUTES ( DISPUTE_ID STRING PRIMARY KEY, BILL_ID STRING, REASON STRING, CREATED_BY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DLQ ( DLQ_ID STRING PRIMARY KEY, EVENT_ID STRING, ERROR_DETAIL VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DOCUMENT_STORE ( DOCSTORE_ID STRING PRIMARY KEY, REQUEST_ID STRING, STORAGE_PATH STRING, CHECKSUM STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_DOWNLOAD_TOKENS ( TOKEN_ID STRING PRIMARY KEY, DOCSTORE_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EMAIL_SEND_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TO_ADDRESS STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EMAIL_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SUBJECT STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ERROR_RATE ( ER_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, ERROR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_ESCALATIONS ( ESCALATION_ID STRING PRIMARY KEY, REQUEST_ID STRING, REASON STRING, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, REQUEST_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, ACCOUNT_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, VIEWED, SIGNED, REJECTED, VERIFIED EVENT_TS TIMESTAMP_LTZ, DEVICE_INFO VARIANT, IP_ADDR STRING, USER_AGENT STRING, PAYLOAD VARIANT, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, EVENT_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_ARCHIVE_02 ( ARCHIVE_ID STRING PRIMARY KEY, EVENT_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_CLUSTERED CLUSTER BY (ACCOUNT_ID, EVENT_TS) AS SELECT * FROM DOCGEN.SIGNATURE_EVENTS LIMIT 0;

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_PARSED ( EVENT_ID STRING PRIMARY KEY, RAW_ID STRING, REQUEST_ID STRING, DOCUMENT_ID STRING, SIGNER_ID STRING, ACCOUNT_ID STRING, EVENT_TYPE STRING, EVENT_TS TIMESTAMP_LTZ, PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_RAW ( RAW_ID STRING PRIMARY KEY, PROVIDER STRING, RAW_PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_RAW ( RAW_ID STRING PRIMARY KEY, SOURCE_SYSTEM STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_RAW ( RAW_VARIANT VARIANT, FILE_NAME STRING, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_RAW ( RAW_JSON VARIANT, LOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_AGGREGATES_6142 ( AGG_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_ATTRIBUTES ( ATTR_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTR_KEY STRING, ATTR_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_AUDIT_INDEX_07 ( IDX_ID STRING PRIMARY KEY, EVENT_REF STRING, AUDIT_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_DLQ ( DLQ_ID STRING PRIMARY KEY, EVENT_ID STRING, ERROR_MSG STRING, PUSHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_HANDLERS ( HANDLER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_INDEX ( SEI_ID STRING PRIMARY KEY, EVENT_REF STRING, EVENT_TYPE STRING, SOURCE_SYSTEM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_INDEX_02 ( SEI_ID STRING PRIMARY KEY, EVENT_REF STRING, EVENT_TYPE STRING, SOURCE_SYSTEM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_INDEX_06 ( SEI_ID STRING PRIMARY KEY, EVENT_REF STRING, EVENT_TYPE STRING, SOURCE_SYSTEM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_INDEX_07 ( SEI_ID STRING PRIMARY KEY, EVENT_REF STRING, EVENT_TYPE STRING, SOURCE_SYSTEM STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_INDEX_SHARD ( SHARD_ID STRING PRIMARY KEY, SEI_ID STRING, SHARD_KEY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_LABELS ( LABEL_ID STRING PRIMARY KEY, EVENT_ID STRING, LABEL STRING, TAGGED_BY STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_METRICS ( METRIC_DATE DATE, ACCOUNT_ID STRING, EVENT_TYPE STRING, COUNT_EVENTS NUMBER, PRIMARY KEY (METRIC_DATE, ACCOUNT_ID, EVENT_TYPE) );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_QUEUE ( EVENT_ID STRING PRIMARY KEY, EVENT_TYPE STRING, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'NEW' );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_SCHEMA_V1 ( FIELD_NAME STRING, JSON_PATH STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_SEARCH ( SEARCH_ID STRING PRIMARY KEY, EVENT_REF STRING, TERMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENT_TYPES ( EVENT_TYPE STRING PRIMARY KEY, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACCOUNT_ID STRING, BUNDLE_URL STRING, BUNDLE_MANIFEST VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ARCHIVE_STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACCOUNT_ID STRING, BUNDLE_URL STRING, MANIFEST VARIANT, PROVENANCE_HASH STRING, CERT_CHAIN VARIANT, OCSP_SNAPSHOTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, REQUEST_ID STRING, ARCHIVE_URL STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_BUNDLE ( BUNDLE_ID STRING PRIMARY KEY, REQUEST_ID STRING, DOCUMENT_ID STRING, ACCOUNT_ID STRING, BUNDLE_URL STRING, MANIFEST VARIANT, PROVENANCE_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_BUNDLES ( BUNDLE_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, BUNDLE_URL STRING, BUNDLE_META VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_CHUNKS ( CHUNK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHUNK_INDEX INT, PAYLOAD VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_INDEX ( IDX_ID STRING PRIMARY KEY, EVIDENCE_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_INDEX_6210 ( EVID_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVID_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_LINKS ( LINK_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, BUNDLE_ID STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVIDENCE_TYPES ( TYPE_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EXPORT_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TARGET_LOCATION STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FAILURE_DLQ ( DLQ_ID STRING PRIMARY KEY, SOURCE_TABLE STRING, ROW_REF STRING, ERROR_JSON VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FAILURE_RETRIES ( RETRY_ID STRING PRIMARY KEY, REQUEST_ID STRING, FAILURE_REASON STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FORMAT_CATALOG ( FORMAT_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FORMAT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, FORMAT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FORMAT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FORMAT_USAGE ( USG_ID STRING PRIMARY KEY, FORMAT_ID STRING, TENANT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FORMAT_VALIDATION ( VAL_ID STRING PRIMARY KEY, PROFILE_ID STRING, DOCUMENT_ID STRING, RESULT JSON, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_GEO_FACTORS ( FACTOR_ID STRING PRIMARY KEY, REQUEST_ID STRING, IP_ADDR STRING, GEO JSON, RISK_SCORE NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_GEO_LOG ( GEO_ID STRING PRIMARY KEY, EVENT_ID STRING, REQUEST_ID STRING, IP_ADDRESS STRING, GEO_INFO VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASHES ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASHES ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIG_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASHES ( HASH_ID STRING PRIMARY KEY, REQUEST_ID STRING, DOCUMENT_HASH STRING, SIGNATURE_HASH STRING, PROVENANCE_HASH STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASHES ( HASH_ID STRING PRIMARY KEY, REQUEST_ID STRING, DOCUMENT_ID STRING, SIGNATURE_HASH STRING, ANCHOR_TXID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, SIG_HASH STRING, BUNDLE_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASH_INDEX_6248 ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_HASH_REGISTRY ( H_ID STRING PRIMARY KEY, SIGNATURE_HASH STRING, BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGES ( IMAGE_ID STRING PRIMARY KEY, BLOB_REF STRING, MIME_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGES ( IMAGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, IMAGE_URL STRING, MIME_TYPE STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGES ( IMAGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, IMAGE_REF STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGES ( IMAGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, IMAGE_REF STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGES_05 ( IMG_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, IMAGE_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGE_HASH_INDEX ( IDX_ID STRING PRIMARY KEY, IMAGE_ID STRING, HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGE_STORE ( IMAGE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIGNER_ID STRING, IMAGE_LOCATION STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_IMAGE_STORE ( IMG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, LOCATION STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_INTEGRATIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, PROVIDER STRING, ACTION STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_LATENCY_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_LIFECYCLE ( LIFECYCLE_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, STATE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_LOCKS ( LOCK_ID STRING PRIMARY KEY, RESOURCE_REF STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), TTL_SECONDS INT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_METADATA_INDEX ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_INDEX ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META_KEY STRING, META_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_INDEX_01 ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META_KEY STRING, META_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_INDEX_05 ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META_KEY STRING, META_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_INDEX_06 ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META_KEY STRING, META_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_INDEX_07 ( META_ID STRING PRIMARY KEY, BUNDLE_ID STRING, META_KEY STRING, META_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_TAGS ( TAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TAG STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_META_TAGS_07 ( TAG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TAG STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_METRICS_ROLLING ( METRIC_ID STRING PRIMARY KEY, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, ACCOUNT_ID STRING, SIGNATURE_COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_METRICS_SUMMARY ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_MODEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, ALERT_TYPE STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_MODEL_METRICS ( METRIC_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, MODEL_NAME STRING, VERSION STRING, DEPLOYED BOOLEAN, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTARY_RECORDS ( NOTARY_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, NOTARY_META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATIONS ( NOTIFICATION_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, CHANNEL STRING, STATUS STRING, ATTEMPT_COUNT INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATIONS_HISTORY ( NH_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATIONS_PREFS_02 ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATIONS_PREFS_03 ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, CHANNEL STRING, SUBJECT STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_NOTIF_QUEUE ( QUEUE_ID STRING PRIMARY KEY, NOTIF_PAYLOAD VARIANT, STATUS STRING DEFAULT 'ENQUEUED', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPERATOR_NOTES ( NOTE_ID STRING PRIMARY KEY, REQUEST_ID STRING, OPERATOR STRING, NOTE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2301 ( ID STRING PRIMARY KEY, KEY_NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2302 ( ID STRING PRIMARY KEY, REF STRING, PAYLOAD VARIANT, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2303 ( ID STRING PRIMARY KEY, NAME STRING, DETAILS CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2304 ( ID STRING PRIMARY KEY, OWNER STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2305 ( ID STRING PRIMARY KEY, TARGET_REF STRING, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2306 ( ID STRING PRIMARY KEY, TENANT_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2307 ( ID STRING PRIMARY KEY, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2308 ( ID STRING PRIMARY KEY, RESOURCE_REF STRING, ACTION STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2309 ( ID STRING PRIMARY KEY, METRIC_NAME STRING, METRIC_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2310 ( ID STRING PRIMARY KEY, ALERT_KEY STRING, CONTEXT VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2311 ( ID STRING PRIMARY KEY, JOB_REF STRING, ATTEMPT INT, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2312 ( ID STRING PRIMARY KEY, SESSION_REF STRING, USER_AGENT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2313 ( ID STRING PRIMARY KEY, DOC_REF STRING, VERSION INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2314 ( ID STRING PRIMARY KEY, MODULE STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2315 ( ID STRING PRIMARY KEY, KEY STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2316 ( ID STRING PRIMARY KEY, CATEGORY STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2317 ( ID STRING PRIMARY KEY, REF_TYPE STRING, REF_ID STRING, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2318 ( ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2319 ( ID STRING PRIMARY KEY, PARENT_REF STRING, PAYLOAD VARIANT, INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2320 ( ID STRING PRIMARY KEY, INDEX_KEY STRING, DATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2321 ( ID STRING PRIMARY KEY, RESOURCE_TYPE STRING, RESOURCE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2322 ( ID STRING PRIMARY KEY, TAGS ARRAY, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2323 ( ID STRING PRIMARY KEY, REFERENCE STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2324 ( ID STRING PRIMARY KEY, DESCRIPTION STRING, PROPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2325 ( ID STRING PRIMARY KEY, CONTEXT VARIANT, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2326 ( ID STRING PRIMARY KEY, CHECK_REF STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2327 ( ID STRING PRIMARY KEY, GROUP_REF STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2328 ( ID STRING PRIMARY KEY, RULESET VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2329 ( ID STRING PRIMARY KEY, SOURCE STRING, RAW_PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2330 ( ID STRING PRIMARY KEY, TARGET STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2331 ( ID STRING PRIMARY KEY, OPERATION STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2332 ( ID STRING PRIMARY KEY, OWNER_REF STRING, PERMS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2333 ( ID STRING PRIMARY KEY, LIMIT_KEY STRING, LIMIT_VALUE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2334 ( ID STRING PRIMARY KEY, CHECKPOINT_REF STRING, STATE VARIANT, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2335 ( ID STRING PRIMARY KEY, TRANSFORM_NAME STRING, SCRIPT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2336 ( ID STRING PRIMARY KEY, PLUGIN_REF STRING, CONFIG VARIANT, INSTALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2337 ( ID STRING PRIMARY KEY, TASK_NAME STRING, SCHEDULE STRING, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2338 ( ID STRING PRIMARY KEY, JOB_NAME STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2339 ( ID STRING PRIMARY KEY, DEPENDENCY_REF STRING, STATE STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2340 ( ID STRING PRIMARY KEY, ALERT_REF STRING, PRIORITY INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2341 ( ID STRING PRIMARY KEY, METRIC_REF STRING, AGG_JSON VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2342 ( ID STRING PRIMARY KEY, CONNECTION_REF STRING, CONFIG VARIANT, LAST_TESTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2343 ( ID STRING PRIMARY KEY, AUDIT_REF STRING, DIFF VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2344 ( ID STRING PRIMARY KEY, NOTIFICATION_REF STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2345 ( ID STRING PRIMARY KEY, AUDIT_NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2346 ( ID STRING PRIMARY KEY, GROUP_NAME STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2347 ( ID STRING PRIMARY KEY, POLICY_REF STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2348 ( ID STRING PRIMARY KEY, TAG STRING, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2349 ( ID STRING PRIMARY KEY, SIGNAL_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2350 ( ID STRING PRIMARY KEY, WORKER_REF STRING, LAST_HEARTBEAT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2351 ( ID STRING PRIMARY KEY, BACKOFF_COUNT INT, NEXT_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2352 ( ID STRING PRIMARY KEY, METRIC_KEY STRING, VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2353 ( ID STRING PRIMARY KEY, TRACE_ID STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2354 ( ID STRING PRIMARY KEY, CONTEXT_KEY STRING, CONTEXT_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2355 ( ID STRING PRIMARY KEY, DEPLOYMENT_REF STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2356 ( ID STRING PRIMARY KEY, RESOURCE_PATH STRING, CHECKSUM STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2357 ( ID STRING PRIMARY KEY, PRIORITY INT, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2358 ( ID STRING PRIMARY KEY, LOCK_REF STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2359 ( ID STRING PRIMARY KEY, LOCK_REF STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2360 ( ID STRING PRIMARY KEY, RESOURCE_HASH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2361 ( ID STRING PRIMARY KEY, VERSION STRING, RELEASE_NOTES CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2362 ( ID STRING PRIMARY KEY, CHECKSUM STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2363 ( ID STRING PRIMARY KEY, DEPLOY_ENV STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2364 ( ID STRING PRIMARY KEY, RESOURCE_TYPE STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2365 ( ID STRING PRIMARY KEY, TAG_GROUP STRING, TAGS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2366 ( ID STRING PRIMARY KEY, AUDIT_TRACK JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2367 ( ID STRING PRIMARY KEY, CONFIG_KEY STRING, CONFIG_VAL VARIANT, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2368 ( ID STRING PRIMARY KEY, QUEUE_NAME STRING, DEPTH INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2369 ( ID STRING PRIMARY KEY, CALLBACK_URL STRING, SECRET_HASH STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2370 ( ID STRING PRIMARY KEY, REGION STRING, ENDPOINT STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2371 ( ID STRING PRIMARY KEY, METHOD STRING, SAMPLE_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2372 ( ID STRING PRIMARY KEY, DOC_REF STRING, REVISION_NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2373 ( ID STRING PRIMARY KEY, METRIC_NAME STRING, WINDOW STRING, AGG_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2374 ( ID STRING PRIMARY KEY, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2542_signature_account_activity_index.sql USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_OPS_MISC_2374 ( ID STRING PRIMARY KEY, SUMMARY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2542_signature_account_activity_index.sql -- USE DATABASE AI_FEATURE_HUB;

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PDF_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PDF_URL STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICIES_01 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_APPLICATIONS ( APP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TENANT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_AUDIT_03 ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, ADMIN_USER STRING, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, SIGNATURE_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_BINDINGS_01 ( BINDING_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_TYPE STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, POLICY_ID STRING, DOCUMENT_ID STRING, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_COMPLIANCE_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, CHECK_ID STRING, SEVERITY STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_HISTORY ( H_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_MITIGATIONS ( MIT_ID STRING PRIMARY KEY, V_ID STRING, ACTION_JSON VARIANT, MITIGATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_REMEDIATIONS ( REM_ID STRING PRIMARY KEY, V_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_TEMPLATES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_VIOLATIONS ( V_ID STRING PRIMARY KEY, POLICY_ID STRING, BUNDLE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_POLICY_VIOLATIONS ( V_ID STRING PRIMARY KEY, POLICY_ID STRING, SIGNATURE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROOF_TOKENS ( TOKEN_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVENANCE ( PROV_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROV_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVENANCE ( PROV_ID STRING PRIMARY KEY, REQUEST_ID STRING, EVENT_IDS ARRAY, VERIFICATION_IDS ARRAY, EVIDENCE_BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVENANCE ( PROV_ID STRING PRIMARY KEY, REQUEST_ID STRING, VERIFICATION_ID STRING, PROV_HASH STRING, SOURCE_VARIANT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVIDER_CONFIG ( PROVIDER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PROVIDER_NAME STRING, CONFIG VARIANT, PRIORITY INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVIDER_CONFIGS_10 ( CONFIG_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVIDER_CREDENTIALS ( CRED_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, PROVIDER_TYPE STRING, CRED_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVIDER_STATUS ( PROVIDER_ID STRING PRIMARY KEY, LAST_HEALTH_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_PROVIDER_STATUS ( PROVIDER_ID STRING PRIMARY KEY, STATUS STRING, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_QUALITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ISSUE_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_QUALITY_METRICS ( METRIC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_QUALITY_RESOLUTION_QUEUE ( Q_ID STRING PRIMARY KEY, ISSUE_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_QUALITY_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_QUARANTINE_06 ( QUARANTINE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RATECARD_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_ID STRING, EVENT_TYPE STRING, EVENT_VALUE VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REMINDERS_01 ( REMINDER_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, SENT BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REMINDER_LOGS_01 ( LOG_ID STRING PRIMARY KEY, REMINDER_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REPLAY_LOGS ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACTIONS VARIANT, REPLAYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, DOCUMENT_ID STRING, TEMPLATE_ID STRING, STATUS STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), UPDATED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, CURRENT_SIGNER_INDEX NUMBER, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, TEMPLATE_ID STRING, STATUS STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS ( REQUEST_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, ACCOUNT_ID STRING, TEMPLATE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUEST_ATTACHMENTS ( ATTACH_ID STRING PRIMARY KEY, REQUEST_ID STRING, FILE_REF STRING, CONTENT_TYPE STRING, SIZE_BYTES NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUEST_HISTORY ( HIST_ID STRING PRIMARY KEY, REQUEST_ID STRING, OLD_STATUS STRING, NEW_STATUS STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUEST_METADATA ( META_ID STRING PRIMARY KEY, REQUEST_ID STRING, KEY STRING, VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RETAIN_LOGS_6167 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RETAIN_REQUESTS_6166 ( REQ_ID STRING PRIMARY KEY, BUNDLE_REF STRING, RETAIN_DAYS INT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPT INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RETRY_QUEUE ( RETRY_ID STRING PRIMARY KEY, TARGET_PROC STRING, PAYLOAD VARIANT, NEXT_RUN_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REVOCATION_INDEX ( REV_ID STRING PRIMARY KEY, CERT_ID STRING, SIGNATURE_ID STRING, REVOCATION_STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_SESSION_REPLAYS ( REPLAY_ID STRING PRIMARY KEY, SESSION_ID STRING, REPLAY_PAYLOAD VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_SETTINGS ( SETTING_KEY STRING PRIMARY KEY, SETTING_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_STATEMENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_STATE_HISTORY ( H_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, OLD_STATE STRING, NEW_STATE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, TEMPLATE_BODY CLOB, DEFAULT_POLICY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, TEMPLATE_NAME STRING, TEMPLATE_BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATE_ACL ( ACL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PRINCIPAL STRING, ROLE STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATE_CATALOG ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATE_METADATA ( TEMPLATE_ID STRING PRIMARY KEY, OWNER_ACCOUNT STRING, TAGS ARRAY, SCOPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATE_USAGE_LOG ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), IS_ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_THREAT_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOCUMENT_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_THREAT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, EVENT_ID STRING, NOTIFIED_TO STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TOKEN_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TRACE_BACKLINKS ( LINK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RELATED_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_UUID_INDEX ( UUID_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNATURE_UUID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION ( VALIDATION_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, VALIDATION_STATUS STRING, -- PENDING, SIGNED_BY_HSM, VERIFIED, FAILED VALIDATION_HASH STRING, SIGNATURE_BLOB_BASE64 STRING, SIGNER_CERT_FINGERPRINT STRING, VERIFIED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION_CACHE ( CACHE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VALID BOOLEAN, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION_QUEUE ( Q_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION_RESULTS ( RESULT_ID STRING PRIMARY KEY, REQUEST_ID STRING, RULE_ID STRING, PASSED BOOLEAN, DETAILS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, SIGNATURE_ID STRING, VALID BOOLEAN, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VECTOR_STORE ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EMBEDDING VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VECTOR_STORE ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EMBEDDING VARIANT, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VECTOR_STORE ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EMBEDDING VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VECTOR_STORE ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EMBEDDING VECTOR, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATIONS ( VERIFY_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METHOD STRING, RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATIONS ( VERIFY_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METHOD STRING, RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATIONS ( VERIFY_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METHOD STRING, RESULT STRING, DETAILS VARIANT, VERIFICATION_HASH STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATIONS ( VERIF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUEST_ID STRING, SIGNER_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATIONS_INDEX ( IDX_ID STRING PRIMARY KEY, VERIFY_ID STRING, INDEX_PAYLOAD VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, VERIFY_ID STRING, DOCUMENT_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_ERRORS ( ERR_ID STRING PRIMARY KEY, VERIFY_ID STRING, ERROR_CODE STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_LATENCY_BREAKDOWN ( MET_ID STRING PRIMARY KEY, VERIFY_PATH STRING, P50_MS NUMBER, P95_MS NUMBER, P99_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, VERIFY_ID STRING, STEP STRING, DETAIL VARIANT, LOG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_POLICY_METRICS ( MET_ID STRING PRIMARY KEY, POLICY_ID STRING, PASSED INT, FAILED INT, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, PRIORITY INT DEFAULT 100, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, VERIFY_ID STRING, NEXT_RETRY_AT TIMESTAMP_LTZ, ATTEMPT_COUNT INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERIFICATION_RETRY_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VERSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VER_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VISUAL_STORE ( VIS_ID STRING PRIMARY KEY, BUNDLE_ID STRING, IMAGE_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, DOC_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_DIGEST ( DIGEST_ID STRING PRIMARY KEY, DOC_ID STRING, DIGEST STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_INDEX ( DOC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_RECALL_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_RETENTION_INDEX ( INDEX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNED_DOCUMENT_STORE ( DOCSTORE_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNED_URL STRING, STORAGE_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SIGNER_NAME STRING, SIGNER_EMAIL STRING, SIGNER_ROLE STRING, PREFERRED_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACCOUNT_ID STRING, SIGNER_EMAIL STRING, SIGNER_NAME STRING, SIGNER_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, REQUEST_ID STRING, ACCOUNT_ID STRING, SIGNER_EMAIL STRING, SIGNER_NAME STRING, SIGNER_ORDER NUMBER, AUTH_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, REQUEST_ID STRING, EMAIL STRING, NAME STRING, ROLE STRING, AUTH_LEVEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, REQUEST_ID STRING, EMAIL STRING, NAME STRING, SIGNING_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS ( SIGNER_ID STRING PRIMARY KEY, REQUEST_ID STRING, EMAIL STRING, NAME STRING, SIGNING_METHOD STRING, DEVICE_FINGERPRINT STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNERS( SIGNER_ID STRING PRIMARY KEY, SIGNER_NAME STRING, EMAIL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_2FA_SETTINGS ( SETTING_ID STRING PRIMARY KEY, SIGNER_ID STRING, ENABLED BOOLEAN DEFAULT TRUE, METHODS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SIGNER_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_ANALYTICS ( ANAL_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_HEARTBEAT ( HB_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTIVITY_JSON VARIANT, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_HEATMAP ( HEATMAP_ID STRING PRIMARY KEY, TENANT_ID STRING, HEATMAP_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_HEATMAP ( HEAT_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUCKET JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_SEQS ( SEQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENTS VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_SEQUENCES ( SEQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTIVITY_ARRAY VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ACTIVITY_TIMELINE ( ATL_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTIVITY_TYPE STRING, PAYLOAD VARIANT, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AFFILIATION_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AFFILIATION_INDEX ( IDX_ID STRING PRIMARY KEY, SIGNER_ID STRING, AFFILIATION_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AFFINITY_METRICS ( METRIC_ID STRING PRIMARY KEY, AFF_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AGENT_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, AGENT_META VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ALIASES ( ALIAS_ID STRING PRIMARY KEY, SIGNER_ID STRING, ALIAS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AUTH_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AUTH_FAILURE_STATS ( STAT_ID STRING PRIMARY KEY, SIGNER_ID STRING, FAIL_COUNT NUMBER, LAST_FAILED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AUTH_METHOD_REGISTRY ( METHOD_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_AUTH_SESSIONS ( AUTH_ID STRING PRIMARY KEY, SIGNER_ID STRING, SESSION_ID STRING, AUTH_METHOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BADGE_REGISTRY ( BADGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BADGE JSON, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIORAL_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BEHAVIOR_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIORAL_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_ALERTS_11 ( ALERT_ID STRING PRIMARY KEY, PROFILE_ID STRING, ALERT_TYPE STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_FINGERPRINTS ( FPR_ID STRING PRIMARY KEY, SIGNER_ID STRING, FINGERPRINT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_INSIGHTS ( INSIGHT_ID STRING PRIMARY KEY, SIGNER_ID STRING, INSIGHT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BEHAVIOR_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BEHAVIOR_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE JSON, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_PROFILES_11 ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, BEHAVIOR_METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_RETRAINING_JOBS ( JOB_ID STRING PRIMARY KEY, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_RETRAINING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BEHAVIOR_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, SIGNER_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BIOMETRICS_REGISTRY ( BIO_ID STRING PRIMARY KEY, SIGNER_ID STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_BLOB BINARY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BIOMETRIC_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_HASH STRING, TEMPLATE_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST ( BLACK_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST ( BL_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST ( BL_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST ( BL_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST_6080 ( BL_ID STRING PRIMARY KEY, SIGNER_REF STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST_APPEALS ( APPEAL_ID STRING PRIMARY KEY, BL_ID STRING, APPELLANT STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BLACKLIST_REGISTRY ( ENTRY_ID STRING PRIMARY KEY, SIGNER_REF STRING, REASON CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_BREACH_INVESTIGATIONS ( INV_ID STRING PRIMARY KEY, SIGNER_ID STRING, INCIDENT_REF STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_COMM_PREFS ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENTS_12 ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, CONSENT_TEXT STRING, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_ACCEPTANCES ( ACCEPT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SIGNER_ID STRING, ACCEPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, SIGNER_ID STRING, POLICY_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_AUDITS ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, SIGNER_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_FORMS ( FORM_ID STRING PRIMARY KEY, SIGNER_ID STRING, FORM_CLOB CLOB, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_HISTORY ( CHG_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_HISTORY ( CH_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_LOG ( CONSENT_LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BODY VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, TEMPLATE_ID STRING, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SIGNER_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, ACCEPT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REVOCATIONS_12 ( REVOC_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REVOCATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_REVOKE_QUEUE ( Q_ID STRING PRIMARY KEY, CONSENT_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONSENT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, VERSIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CONTACT_INDEX ( IDX_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONTACT_INFO VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CREDENTIAL_EXPIRATION_INDEX ( IDX_ID STRING PRIMARY KEY, CRED_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CREDENTIAL_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, SIGNER_ID STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICES ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_FINGERPRINT VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICES ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_ACTIVITY ( ACT_ID STRING PRIMARY KEY, REG_ID STRING, ACTIVITY_TYPE STRING, ACTIVITY_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_ALERTS ( ALERT_ID STRING PRIMARY KEY, DEVICE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, DEVICE_ID STRING, ATTEST_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_ID STRING, ATTESTATION JSON, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DEVICE_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_AUTH_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNER_ID STRING, SUCCESS BOOLEAN, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_BINDINGS ( BIND_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_CERTS ( CERT_ID STRING PRIMARY KEY, DEVICE_ID STRING, CERT_PEM CLOB, ISSUED_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_EVENTS ( EVT_ID STRING PRIMARY KEY, DEVICE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, DEVICE_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_TYPE STRING, FINGERPRINT_HASH STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_FINGERPRINTS ( FP_ID STRING PRIMARY KEY, SIGNER_ID STRING, FP_HASH STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_GEO_INDEX ( IDX_ID STRING PRIMARY KEY, DEVICE_ID STRING, LAT NUMBER, LON NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_INDEX_6190 ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_METADATA ( META_ID STRING PRIMARY KEY, DEVICE_ID STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_PROFILES ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_REGISTRATIONS ( REG_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_ID STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_REGISTRATIONS ( REG_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_INFO VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_REGISTRY ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_ACTIVE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_SIGNAL_STORE ( SIGNAL_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNAL_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, DEVICE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_TOKENS ( TOKEN_ID STRING PRIMARY KEY, DEVICE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, DEVICE_ID STRING, SIGNER_ID STRING, SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DEVICE_UNBINDS ( UNBIND_ID STRING PRIMARY KEY, BIND_ID STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DISPOSITION_INDEX ( DISP_ID STRING PRIMARY KEY, SIGNER_ID STRING, DISPOSITION_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNER_ID STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_DISPUTE_RESULTS ( RES_ID STRING PRIMARY KEY, DISPUTE_ID STRING, OUTCOME JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_EMAIL_BOUNCE_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, EMAIL_ADDRESS STRING, BOUNCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_EMAIL_VERIFICATION ( VER_ID STRING PRIMARY KEY, SIGNER_ID STRING, EMAIL STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_FACTORS ( FACTOR_ID STRING PRIMARY KEY, SCORE_ID STRING, FACTOR_KEY STRING, FACTOR_VALUE NUMBER, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_METRICS ( METRIC_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_REPORT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TENANT_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, METRICS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_SEGMENTATION ( SEG_ID STRING PRIMARY KEY, TENANT_ID STRING, SEG_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ENGAGEMENT_TRENDS ( TREND_ID STRING PRIMARY KEY, SIGNER_ID STRING, TREND_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_FEEDBACK_INDEX ( FB_ID STRING PRIMARY KEY, SIGNER_ID STRING, FEEDBACK_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_FEEDBACK_QUEUE ( FBQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FBQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_FRAUD_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_GEOLOCATION_INDEX ( GEO_ID STRING PRIMARY KEY, SIGNER_ID STRING, LAT NUMBER, LON NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_GEO_EVENTS ( GEO_ID STRING PRIMARY KEY, SIGNER_ID STRING, SESSION_ID STRING, LATITUDE NUMBER, LONGITUDE NUMBER, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_GEO_INDEX ( GEO_ID STRING PRIMARY KEY, SIGNER_ID STRING, COUNTRY STRING, REGION STRING, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_ALIASES ( ALIAS_ID STRING PRIMARY KEY, SIGNER_ID STRING, ALIAS_TYPE STRING, ALIAS_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_ALIASES_02 ( ALIAS_ID STRING PRIMARY KEY, SIGNER_ID STRING, ALIAS_TYPE STRING, ALIAS_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_ALIASES_03 ( ALIAS_ID STRING PRIMARY KEY, SIGNER_ID STRING, ALIAS_TYPE STRING, ALIAS_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_INDEX ( SIGNER_ID STRING PRIMARY KEY, IDENTIFIERS ARRAY, LAST_VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_LINKS ( LINK_ID STRING PRIMARY KEY, SIGNER_ID STRING, IDP STRING, ID_REF STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_REQUESTS ( REQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_VALIDATION_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, VALIDATOR STRING, OUTCOME JSON, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, LOG_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IDENTITY_VERIFICATIONS ( VER_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD STRING, RESULT STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_IP_HISTORY ( ENTRY_ID STRING PRIMARY KEY, SIGNER_ID STRING, IP_ADDR STRING, SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_KYC_RECORDS ( KYC_ID STRING PRIMARY KEY, SIGNER_ID STRING, KYC_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_KYC_RECORDS ( KYC_ID STRING PRIMARY KEY, SIGNER_ID STRING, KYC_JSON VARIANT, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_KYC_RECORDS ( KYC_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROVIDER STRING, KYC_PAYLOAD VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, PREF_ID STRING, NOTIF_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_HISTORY ( NOTIF_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_METRICS ( MET_ID STRING PRIMARY KEY, SIGNER_ID STRING, NOTIF_COUNT INT, LAST_NOTIF_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_PREFS ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_PREFS_6322 ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, CHANNEL STRING, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NUDGE_CONFIGURATIONS ( CONFIG_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_NUDGE_HISTORY ( HISTORY_ID STRING PRIMARY KEY, CONFIG_ID STRING, SIGNER_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_OPT_OUTS ( OPT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANNEL STRING, OPTED_OUT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PARTICIPATION_METRICS ( MET_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PERCENT_METRICS ( PM_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PHONE_VERIFICATION ( VER_ID STRING PRIMARY KEY, SIGNER_ID STRING, PHONE STRING, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_POLICY_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, SIGNER_ID STRING, POLICY_ID STRING, OVERRIDE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PREF_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, PREFS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILES_01 ( SIGNER_REF STRING PRIMARY KEY, NAME STRING, EMAIL STRING, PHONE STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILES_10 ( SIGNER_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CHANGE_ID STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILE_ENRICH_Q ( Q_ID STRING PRIMARY KEY, SIGNER_ID STRING, SOURCE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_PROFILE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE_JSON VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REINTEGRATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, SIGNER_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REMINDER_SCHEDULE ( SCH_ID STRING PRIMARY KEY, REQUEST_ID STRING, SCHEDULE_AT TIMESTAMP_LTZ, CHANNEL STRING, STATUS STRING DEFAULT 'SCHEDULED' );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, REPUTATION_SCORE NUMBER, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_HISTORY ( RH_ID STRING PRIMARY KEY, SIGNER_ID STRING, CHANGED_BY STRING, CHANGE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_HISTORY ( RH_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_INDEX ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, REPUTATION_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_INDEX ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_INDEX ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REPUTATION_INDEX_6078 ( REP_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RESPONSE_LATENCY ( LAT_ID STRING PRIMARY KEY, SIGNER_ID STRING, LAT_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REVALIDATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_REVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, REASON VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_CONFIGS_11 ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_EVALS_11 ( EVAL_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONFIG_ID STRING, SCORE NUMBER, DETAIL VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_REF STRING, EVENT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, DETAILS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_PROFILE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_PROFILE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_SCORES ( RISK_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, FACTORS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, MODEL_REF STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, FACTORS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_ROLE_MAPPINGS ( MAP_ID STRING PRIMARY KEY, SIGNER_ID STRING, ROLE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SATISFACTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SATISFACTION_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SATISFACTION_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SATISFACTION_OUTCOMES ( OUT_ID STRING PRIMARY KEY, ACTION_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEGMENT_ACTION_QUEUE ( Q_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEGMENT_ACTION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEGMENT_ALERTS ( ALERT_ID STRING PRIMARY KEY, SEG_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEGMENT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, SEG_ID STRING, SIGNER_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEGMENT_PERFORMANCE ( PERF_ID STRING PRIMARY KEY, SEG_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SEQUENCE_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, SEQ_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, REQUEST_ID STRING, SIGNER_ID STRING, IP_ADDRESS STRING, USER_AGENT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_ACTIVITY_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, ACCOUNT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, DEVICE_FINGERPRINT VARIANT, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, SESSION_TOKEN STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, CLIENT_IP STRING, USER_AGENT STRING, DEVICE_FINGERPRINT_HASH STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, REQUEST_ID STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, IP_ADDRESS STRING, USER_AGENT STRING, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS_14 ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, IP_ADDRESS STRING, USER_AGENT STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_SEEN_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, DETAIL VARIANT, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ACTION_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, META VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_CONSENT_BINDINGS ( BIND_ID STRING PRIMARY KEY, SESSION_ID STRING, CONSENT_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_DEVICE_CHECKS ( CHECK_ID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ERRORS ( ERROR_ID STRING PRIMARY KEY, SESSION_ID STRING, ERROR_CODE STRING, ERROR_MSG STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_ERRORS ( ERROR_ID STRING PRIMARY KEY, SESSION_ID STRING, ERROR_CODE STRING, ERROR_MSG STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_GEO ( GEO_ID STRING PRIMARY KEY, SESSION_ID STRING, LAT NUMBER, LON NUMBER, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_GEO_CHECKS ( CHECK_ID STRING PRIMARY KEY, SESSION_ID STRING, GEO_JSON VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_HISTORY ( HISTORY_ID STRING PRIMARY KEY, SESSION_ID STRING, OLD_STATUS STRING, NEW_STATUS STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_METRICS ( MET_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_REVOCATIONS ( REV_ID STRING PRIMARY KEY, SESSION_ID STRING, REVOKED_BY STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_RISK_DECISIONS ( DEC_ID STRING PRIMARY KEY, SESSION_ID STRING, DECISION_JSON VARIANT, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_SIGNING_STATES ( STATE_ID STRING PRIMARY KEY, SESSION_ID STRING, SIGNER_ID STRING, STATE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_TELEMETRY_HLL ( HLL_ID STRING PRIMARY KEY, SESSION_ID STRING, HLL BINARY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, SIGNER_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_SMS_DELIVERY_LOGS ( LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, PHONE STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_THREAT_INTEL ( INTEL_ID STRING PRIMARY KEY, SIGNER_ID STRING, SOURCE STRING, RISK_LEVEL STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TIMEZONE_INDEX ( TZ_ID STRING PRIMARY KEY, SIGNER_ID STRING, TIMEZONE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_BAND_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, BAND_ID STRING, SIGNER_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_BAND_DEFINITIONS ( BAND_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_HISTORY ( TH_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_SCORE ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, TRUST_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, FACTORS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_SCORES ( SCORE_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_SCORES ( TS_ID STRING PRIMARY KEY, SIGNER_ID STRING, TRUST_SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_TRUST_TRANSITIONS ( TRANS_ID STRING PRIMARY KEY, SIGNER_ID STRING, FROM_SCORE NUMBER, TO_SCORE NUMBER, TRANSITIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD STRING, STATUS STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD_ID STRING, RESULT STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, RUN_ID STRING, AUDIT_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_CACHE ( CACHE_ID STRING PRIMARY KEY, SIGNER_ID STRING, VERIF_META VARIANT, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, SIGNER_ID STRING, POLICY_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROFILE_ID STRING, RESULT VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_INDEX_6246 ( V_ID STRING PRIMARY KEY, SIGNER_ID STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_METHODS ( METHOD_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD_TYPE STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_METRICS ( MET_ID STRING PRIMARY KEY, SIGNER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_OUTCOMES ( OUT_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, SIGNER_ID STRING, VERIF_METHOD STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_REPORT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, RUN_ID STRING, REPORT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOCUMENT_ID STRING, STATUS STRING DEFAULT 'NEW', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, SESSION_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_VERIFICATION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SIGNER_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_WATCHLIST ( WATCH_ID STRING PRIMARY KEY, TENANT_ID STRING, SIGNER_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_WHITELIST ( WL_ID STRING PRIMARY KEY, SIGNER_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_WHITELIST ( WL_ID STRING PRIMARY KEY, SIGNER_ID STRING, NOTE CLOB, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNER_WHITELIST ( WL_ID STRING PRIMARY KEY, SIGNER_ID STRING, NOTES STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_A11Y_FIX_JOBS ( JOB_ID STRING PRIMARY KEY, ISSUE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_A11Y_ISSUES ( ISSUE_ID STRING PRIMARY KEY, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_AGENT_HEALTH ( HEALTH_ID STRING PRIMARY KEY, AGENT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_AGENT_LOGS ( LOG_ID STRING PRIMARY KEY, AGENT_ID STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_AGENT_REGISTRY ( AGENT_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_ALGORITHM_REGISTRY ( ALG_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CALLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, REG_ID STRING, PAYLOAD VARIANT, STATUS STRING, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CALLBACK_REGISTRY ( REG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CALLBACK_URL STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CAPACITY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CERTIFICATE_BINDING ( BIND_ID STRING PRIMARY KEY, SIGNER_REF STRING, CERT_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CHALLENGES_01 ( CHALLENGE_ID STRING PRIMARY KEY, SESSION_ID STRING, CHALLENGE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'ACTIVE' );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CONTEXT_INDEX_6192 ( CTX_ID STRING PRIMARY KEY, SESSION_ID STRING, CONTEXT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CONTEXT_LOGS_6193 ( LOG_ID STRING PRIMARY KEY, CTX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CONTEXT_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_CONTEXT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SESSION_ID STRING, CONTEXT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_ATTESTATIONS ( ATTEST_ID STRING PRIMARY KEY, DEVICE_ID STRING, ATTEST_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_ATTESTATION_6196 ( ATTEST_ID STRING PRIMARY KEY, DEVICE_ID STRING, ATTEST_JSON VARIANT, ATTESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, DEVICE_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_INVENTORY ( DEVICE_ID STRING PRIMARY KEY, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_METADATA ( DEVICE_ID STRING PRIMARY KEY, TENANT_ID STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_REGISTRY ( DEVICE_ID STRING PRIMARY KEY, OWNER_REF STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_DEVICE_REGISTRY ( DEVICE_ID STRING PRIMARY KEY, SIGNER_ID STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_ERROR_CLASSIFICATION ( CLS_ID STRING PRIMARY KEY, ERROR_CODE STRING, CATEGORY STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_FLOW_ANALYTICS ( ANAL_ID STRING PRIMARY KEY, FLOW_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_FLOW_BLUEPRINT_6084 ( FLOW_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_FLOW_FUNNELS ( FUNNEL_ID STRING PRIMARY KEY, FLOW_ID STRING, STEPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_HELP_ARTICLES ( ARTICLE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_HELP_FEEDBACK ( FB_ID STRING PRIMARY KEY, ARTICLE_ID STRING, USER_REF STRING, RATING INT, COMMENT CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_INSTANCE_TOKENS ( TOKEN_ID STRING PRIMARY KEY, INSTANCE_ID STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_INSTANCE_TOKEN_USAGE ( USG_ID STRING PRIMARY KEY, TOKEN_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), USED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNING_METHOD STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, SIGNATURE_REF STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEYS_HISTORY ( KEY_ID STRING PRIMARY KEY, KEY_PEM CLOB, KEY_CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), KEY_EXPIRES_AT TIMESTAMP_LTZ, ROTATED_AT TIMESTAMP_LTZ, REVOKED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_BACKUPS ( BACKUP_ID STRING PRIMARY KEY, KEY_ID STRING, BACKUP_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_METADATA ( META_ID STRING PRIMARY KEY, KEY_ID STRING, PURPOSE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, KEY_ID STRING, SUBJECT_REF STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION ( ROT_ID STRING PRIMARY KEY, KEY_ID STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PREVIOUS_KEY_ID STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION_JOBS ( JOB_ID STRING PRIMARY KEY, KEY_REF STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OLD_KEY_ID STRING, NEW_KEY_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT ) ;

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_ROTATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OLD_KEY_ID STRING, NEW_KEY_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_KEY_USAGE ( USG_ID STRING PRIMARY KEY, KEY_ID STRING, BUNDLE_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_LATENCY_INDEX_6224 ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, P50_MS NUMBER, P95_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_LATENCY_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, P50_MS NUMBER, P95_MS NUMBER, P99_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_CATALOG ( METHOD_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_PERFORMANCE ( PERF_ID STRING PRIMARY KEY, METHOD_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_REGISTRY ( METHOD_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_STATS ( STAT_ID STRING PRIMARY KEY, METHOD STRING, USE_COUNT INT, LAST_USED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_USAGE ( USAGE_ID STRING PRIMARY KEY, METHOD_ID STRING, ACCOUNT_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METHOD_USAGE ( USG_ID STRING PRIMARY KEY, METHOD_ID STRING, TENANT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_METRICS_03 ( METRIC_ID STRING PRIMARY KEY, BUNDLE_ID STRING, METRIC_KEY STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_MODE_LOGS_6233 ( LOG_ID STRING PRIMARY KEY, MODE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_MODE_REGISTRY_6232 ( MODE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_OPERATION_METRICS ( METRIC_ID STRING PRIMARY KEY, KEY_REF STRING, OPERATION STRING, COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_PIN_ATTEMPTS_01 ( ATTEMPT_ID STRING PRIMARY KEY, SESSION_ID STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SUCCESS BOOLEAN, SOURCE_IP STRING );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICIES ( POLICY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUIRED_AUTH_LEVEL STRING, ALLOWED_METHODS ARRAY, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, SCOPE VARIANT, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, CHANGED_BY STRING, CHANGE_PAYLOAD VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_AUDIT_TRIGGERS ( TRIG_ID STRING PRIMARY KEY, POLICY_ID STRING, TRIGGER_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_BINDINGS_6234 ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, RESULT JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, POLICY_ID STRING, REASON CLOB, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_EXEMPTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXEMPT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ACTIONS VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_TEMPLATES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_VERSIONS ( VERSION_ID STRING PRIMARY KEY, POLICY_ID STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTIVE BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, BUNDLE_ID STRING, POLICY_ID STRING, REASON CLOB, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, EVAL_ID STRING, ACTIONS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_PROVIDER_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_PROVIDER_SLA_STATS ( STAT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WINDOW JSON, STATS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_PROVIDER_SWITCHES ( SWITCH_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, FROM_PROVIDER STRING, TO_PROVIDER STRING, SWITCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_QUARANTINE_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, REASON STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'QUARANTINED' );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_QUARANTINE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_QUEUE_BACKPRESSURE ( BP_ID STRING PRIMARY KEY, QUEUE_NAME STRING, BACKPRESSURE_LEVEL STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_QUOTA_PROFILES_6390 ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_REQUEST_PREEMPTION_LOG ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, PREEMPTED_BY STRING, REASON STRING, PREEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_REQUEST_PRIORITY_QUEUE ( Q_ID STRING PRIMARY KEY, REQUEST_ID STRING, PRIORITY INT, STATUS STRING DEFAULT 'QUEUED', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_RETRY_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, ATTEMPT_NO INT, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, SIGN_REF STRING, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSIONS_01 ( SESSION_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SIGNATORY_REF STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_ANNOTATIONS ( ANNO_ID STRING PRIMARY KEY, SESSION_ID STRING, ANNOTATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_BIOMETRIC_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, BIOMETRIC_JSON VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_CHECKPOINT ( CP_ID STRING PRIMARY KEY, SESSION_ID STRING, CHECKPOINT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_COMPENSATION_6118 ( COMP_ID STRING PRIMARY KEY, SESSION_ID STRING, COMP_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_E2E_CHECKS ( CHECK_ID STRING PRIMARY KEY, SESSION_ID STRING, CHECKS_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_ENTROPY ( ENT_ID STRING PRIMARY KEY, SESSION_ID STRING, ENTROPY_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_ERRORS ( ERR_ID STRING PRIMARY KEY, SESSION_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_EVENTS ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_INDEX ( SESSION_ID STRING PRIMARY KEY, REQUEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_KPIS ( KPI_ID STRING PRIMARY KEY, SESSION_ID STRING, KPI JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_MEDIA_REFS ( REF_ID STRING PRIMARY KEY, SESSION_ID STRING, MEDIA_REF STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_METADATA ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, DOCUMENT_ID STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, METRIC_NAME STRING, METRIC_VALUE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_METRICS ( MET_ID STRING PRIMARY KEY, SESSION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_METRICS_6222 ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_METRIC_LOGS_6223 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_MITIGATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, SESSION_ID STRING, POLICY_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_POLICY_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, EVAL_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_SENSOR_DATA ( DATA_ID STRING PRIMARY KEY, SESSION_ID STRING, SENSOR_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SESSION_ID STRING, SNAPSHOT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_STATE_HISTORY ( HIST_ID STRING PRIMARY KEY, SESSION_ID STRING, STATE_FROM STRING, STATE_TO STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_TELEMETRY_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_TERMINATION_LOGS ( LOG_ID STRING PRIMARY KEY, SESSION_ID STRING, REASON STRING, TERMINATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_TRACES ( TRACE_ID STRING PRIMARY KEY, SESSION_ID STRING, TRACE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_TRANSCRIPTS ( TRANSCRIPT_ID STRING PRIMARY KEY, SESSION_ID STRING, ROLE STRING, MESSAGE TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SESSION_VIDEO_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, VIDEO_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_STEPS ( STEP_ID STRING PRIMARY KEY, WORKFLOW_ID STRING, SEQ INT, STEP_TYPE STRING, STEP_CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_STEP_HISTORY ( H_ID STRING PRIMARY KEY, STEP_ID STRING, INSTANCE_ID STRING, STATUS STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_STEP_RESULTS ( RES_ID STRING PRIMARY KEY, SEQ_ID STRING, SIGNED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_SUCCESS_RATES ( RATE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUCCESS_RATE NUMBER, PERIOD JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_THROTTLE_EVENTS ( EVT_ID STRING PRIMARY KEY, QUEUE_NAME STRING, THROTTLE_REASON STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_THROTTLE_EVENTS ( EVT_ID STRING PRIMARY KEY, WINDOW_ID STRING, METRICS VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_THROTTLE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_TOOLTIP_REGISTRY ( TOOLTIP_ID STRING PRIMARY KEY, KEY STRING, TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_UI_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOWS ( WORKFLOW_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, CONFIG VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RUN_ID STRING, ACTOR STRING, ACTION JSON, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_REF STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, FLOW JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNING_WORKFLOW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, WORKFLOW_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ACTION_EXECUTION_LOGS_13 ( LOG_ID STRING PRIMARY KEY, ACTION_ID STRING, STATUS STRING, OUTPUT VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS_02 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS_06 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS_13 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS_14 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ADMIN_ANNOUNCEMENTS_15 ( ANN_ID STRING PRIMARY KEY, TITLE STRING, BODY STRING, LEVEL STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_ANALYTICS_EVENTS_13 ( EVENT_ID STRING PRIMARY KEY, NAME STRING, METADATA VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_API_RATE_LIMITS_13 ( LIMIT_ID STRING PRIMARY KEY, KEY_ID STRING, WINDOW_SECONDS NUMBER, MAX_REQUESTS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SIG_API_USAGE_13 ( USAGE_ID STRING PRIMARY KEY, KEY_ID STRING, ENDPOINT STRING, METHOD STRING, RESPONSE_CODE NUMBER, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_CALLBACK_ENDPOINTS_13 ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, METHOD STRING, HEADERS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_CALLBACK_HISTORY_13 ( CALLBACK_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, PAYLOAD VARIANT, RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_CERTIFICATE_REVOCATIONS_13 ( REVOC_ID STRING PRIMARY KEY, CERT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SIG_COMPLIANCE_CERTIFICATES_13 ( CERT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CERT_PEM CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_CRL_UPDATES_13 ( UPDATE_ID STRING PRIMARY KEY, SOURCE STRING, DETAILS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_DELIVERY_PROVIDERS_13 ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SIG_DELIVERY_PROVIDER_CONFIGS_13 ( CONFIG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_DELIVERY_PROVIDER_METRICS_13 ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_DLQ_EVENTS_13 ( DLQ_ID STRING PRIMARY KEY, ORIG_EVENT_ID STRING, REASON STRING, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_INCIDENT_UPDATES_13 ( UPDATE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, NOTE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_INTEGRATION_EVENTS_13 ( EVENT_ID STRING PRIMARY KEY, INTEGRATION STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_OCSP_CHECKS_13 ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_OPERATOR_NOTES_13 ( NOTE_ID STRING PRIMARY KEY, OPERATOR STRING, CONTEXT VARIANT, NOTE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_PLAYBOOK_RUNS_13 ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, LOGS VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIG_PLAYBOOK_TEMPLATES_13 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_POLICY_EVAL_LOGS_13 ( LOG_ID STRING PRIMARY KEY, INSTANCE_ID STRING, INPUT VARIANT, OUTPUT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_POLICY_INSTANCES_13 ( INSTANCE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, ACTIVE BOOLEAN DEFAULT TRUE, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_POLICY_TEMPLATES_13 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_PROVIDER_HEALTH_13 ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_PROVIDER_NOTIFICATIONS_13 ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TYPE STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_RATE_LIMIT_VIOLATIONS_13 ( VIOLATION_ID STRING PRIMARY KEY, KEY_ID STRING, WINDOW_START TIMESTAMP_LTZ, REQUESTS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_RETRY_POLICIES_13 ( POLICY_ID STRING PRIMARY KEY, NAME STRING, MAX_ATTEMPTS NUMBER, BASE_BACKOFF_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SIG_SCHEDULED_ACTIONS_13 ( ACTION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NEXT_RUN TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SIG_SCHEDULE_TEMPLATES_13 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CRON_EXPR STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_SERVICE_INCIDENTS_13 ( INCIDENT_ID STRING PRIMARY KEY, SERVICE STRING, SEVERITY STRING, DESCRIPTION STRING, STATUS STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIG_SERVICE_MAINTENANCES_13 ( MAINT_ID STRING PRIMARY KEY, SERVICE STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.SIG_WEBHOOK_BACKOFF_13 ( BACKOFF_ID STRING PRIMARY KEY, EVENT_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, BACKOFF_MS NUMBER );

CREATE OR REPLACE TABLE DOCGEN.SIG_WEBHOOK_RETRIES_13 ( RETRY_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPTS NUMBER DEFAULT 0, LAST_ATTEMPT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_ADMIN_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULT_JSON VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE ( CACHE_KEY STRING PRIMARY KEY, QUERY_HASH STRING, RESULT_JSON VARIANT, EXPIRES_AT TIMESTAMP_LTZ, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE_11 ( CACHE_KEY STRING PRIMARY KEY, QUERY VARIANT, RESULTS VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE_EVICTION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE_EVICTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE_INDEX ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULTS VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_CACHE_TTL_11 ( TTL_ID STRING PRIMARY KEY, CACHE_KEY STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_DEDUP_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_DEDUP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_EXPORT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EXPORT_ID STRING, TRIGGERED_BY STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FALLBACKS ( FB_ID STRING PRIMARY KEY, REQUEST_ID STRING, METHOD_ORDER ARRAY, TRIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FALLBACK_CONFIG ( CFG_ID STRING PRIMARY KEY, PREFERRED_METHOD STRING, FALLBACK_METHOD STRING );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FALLBACK_METRICS ( MET_ID STRING PRIMARY KEY, QUERY_REF STRING, PATH_USED STRING, LATENCY_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FALLBACK_METRICS ( MET_ID STRING PRIMARY KEY, QUERY_REF STRING, USED_FAISS BOOLEAN, RESPONSE_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FALLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, FB_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_FEEDBACK ( FB_ID STRING PRIMARY KEY, QUERY_ID STRING, USER_REF STRING, RATING INT, COMMENTS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_INDEX_LOGS_6135 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_INDEX_REFRESH_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_INDEX_REFRESH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, UPDATED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_INDEX_VERSIONING ( VERSION_ID STRING PRIMARY KEY, INDEX_NAME STRING, VERSION_NUMBER INT, SNAPSHOT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_METRIC_HISTORY ( METRIC_ID STRING PRIMARY KEY, SHARD_REF STRING, LATENCY_MS NUMBER, QPS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_MODEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, MODEL_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_MODEL_PERFORMANCE ( PERF_ID STRING PRIMARY KEY, MODEL_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY TEXT, SNAP_ID STRING, RESULTS_COUNT INT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_HASH STRING, USER_REF STRING, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_ID STRING, USER_REF STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT_META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, RESP_JSON VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_AUDIT ( Q_ID STRING PRIMARY KEY, QUERY_TEXT STRING, INDEX_REF STRING, RESPONSE_SIZE INT, LAT_MS NUMBER, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_CACHE ( CACHE_ID STRING PRIMARY KEY, QUERY_HASH STRING, RESULTS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_LOGS ( LOG_ID STRING PRIMARY KEY, QUERY_TEXT STRING, RESULT_COUNT INT, LATENCY_MS NUMBER, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_LOGS ( QLOG_ID STRING PRIMARY KEY, QUERY_REF STRING, INPUT_VECTOR VARIANT, RESULTS VARIANT, QUERY_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_LOGS_6055 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_QUERY_METRICS_6054 ( METRIC_ID STRING PRIMARY KEY, QUERY_TEXT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_REQUESTS_12 ( REQ_ID STRING PRIMARY KEY, QUERY_VARIANT VARIANT, SHARD_PREF STRING, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_REQUEST_LOGS ( REQ_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, RESP_JSON VARIANT, SERVED_BY STRING, SERVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_REQUEST_LOG_14 ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, QUERY VARIANT, RESULT_COUNT NUMBER, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, HITS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIMILARITY_RESULTS_14 ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, ITEM_REF STRING, SCORE NUMBER, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIM_FEEDBACK_AGG ( AGG_ID STRING PRIMARY KEY, MODEL_ID STRING, AVG_RATING NUMBER, TOTAL_FEEDBACK INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_INDEX_RECONCILE ( RECON_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, EXPECTED_COUNT INT, ACTUAL_COUNT INT, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_INDEX_SHARDS ( SHARD_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, LOCATION STRING, SHARD_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_INDEX_VERSIONS ( VERS_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, VERSION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_MODEL_DEPLOYMENTS ( DEP_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_MODEL_STATS ( STAT_ID STRING PRIMARY KEY, MODEL_ID STRING, QPS NUMBER, LATENCY_MS NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_MODEL_TELEMETRY ( TEL_ID STRING PRIMARY KEY, MODEL_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_MODEL_VERSIONS ( MV_ID STRING PRIMARY KEY, MODEL_ID STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_QUERY_HISTORY ( QH_ID STRING PRIMARY KEY, QUERY_VEC VECTOR, RESULTS VARIANT, RUNTIME_MS NUMBER, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_QUERY_MISS_LOG ( MISS_ID STRING PRIMARY KEY, QUERY_TEXT STRING, USER_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_QUERY_STATS ( STAT_ID STRING PRIMARY KEY, USER_REF STRING, QPS NUMBER, AVG_LATENCY_MS NUMBER, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIM_SHARD_HEALTH ( SH_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SKILL_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, OPERATOR STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SKILL_GAP_ANALYSIS ( ANALYSIS_ID STRING PRIMARY KEY, OPERATOR STRING, GAPS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SKILL_PROFILES ( PROFILE_ID STRING PRIMARY KEY, OPERATOR STRING, SKILLS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLACK_ALERTS ( ALERT_ID STRING PRIMARY KEY, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLACK_INTEGRATIONS ( INTEG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, WEBHOOK_URL STRING, CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLACK_INTEGRATION_LOG ( LOG_ID STRING PRIMARY KEY, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLACK_NOTIFICATIONS_07 ( NOTIF_ID STRING PRIMARY KEY, CHANNEL STRING, PAYLOAD VARIANT, STATUS STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLACK_PROVIDER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROVIDER_ID STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, ADJUSTMENT VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_AGGREGATION_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SLA_ID STRING, SNAPSHOT JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, REPORT_ID STRING, LEVEL STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLA_ID STRING, DESCRIPTION STRING, SEVERITY STRING, FIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLA_ID STRING, METRIC_NAME STRING, THRESHOLD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERTS_12 ( ALERT_ID STRING PRIMARY KEY, SLA_ID STRING, METRIC STRING, VALUE VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERT_CONFIG ( CONFIG_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD VARIANT, NOTIFY_CHANNEL STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, METRIC STRING, OPERATOR STRING, THRESHOLD VARIANT, ACTION VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SLA_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, SLO_ID STRING, CONDITION VARIANT, TARGET_CHANNEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_AUTO_REMEDIATION_EXECUTIONS ( EXEC_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_AUTO_REMEDIATION_RULES ( RULE_ID STRING PRIMARY KEY, SLO_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BENCHMARKS_07 ( BENCH_ID STRING PRIMARY KEY, NAME STRING, METRIC STRING, THRESHOLD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BILLING_EXCEPTIONS ( EXC_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, INVOICE_REF STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACHES ( BREACH_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACHES ( BREACH_ID STRING PRIMARY KEY, SLA_ID STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ESCALATED_TO STRING, STATUS STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, NOTIF_ID STRING, RESOLVED BOOLEAN DEFAULT FALSE, RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_INDEX ( BREACH_ID STRING PRIMARY KEY, SCOPE STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, LOG_ID STRING, ACTIONS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTICES ( NOTICE_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, BREACH_DETAILS VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PROFILE_ID STRING, TENANT_ID STRING, BREACH_JSON VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, TENANT_ID STRING, DETAILS VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, TENANT_ID STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLO_REF STRING, TENANT_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_NAME STRING, DETAILS VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_RECONCILIATIONS ( RECON_ID STRING PRIMARY KEY, NOTIF_ID STRING, STATUS STRING, RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_RESOLUTION ( RES_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACTIONS VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_RESOLUTION_LOGS ( LOG_ID STRING PRIMARY KEY, NOTIF_ID STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREACH_RESPONSES ( RESP_ID STRING PRIMARY KEY, LOG_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_BREAKDOWN ( SLA_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_CAPACITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLO_ID STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_COMPLIANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, STATUS STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_CONFIGURATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SLA_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_CONTRACTS ( SLA_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_COST_IMPACT_REPORTS ( REPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, ESTIMATED_COST VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_CREDIT_LEDGER ( ENTRY_ID STRING PRIMARY KEY, CREDIT_ID STRING, TENANT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_DASHBOARD_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, METRICS VARIANT, SNAPSHOT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_DEFINITIONS ( SLA_ID STRING PRIMARY KEY, NAME STRING, METRICS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_DEFINITIONS ( SLA_ID STRING PRIMARY KEY, NAME STRING, OBJECTIVES VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SLA_DEFINITIONS ( SLA_ID STRING PRIMARY KEY, NAME STRING, SLO JSON, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_DEFINITIONS ( SLA_ID STRING PRIMARY KEY, NAME STRING, TERMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, SLA_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_REF STRING, REASON CLOB, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), GRANTED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXCEPTION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, EXC_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXCEPTION_REGISTER ( EXC_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_NAME STRING, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.SLA_EXEMPTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, REQUESTOR STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_NAME STRING, HEALTH_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_HISTORY ( HISTORY_ID STRING PRIMARY KEY, SLA_ID STRING, SNAPSHOT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_HISTORY ( HIST_ID STRING PRIMARY KEY, SLA_ID STRING, SNAPSHOT VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, METRIC_NAME STRING, SEVERITY STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_INCIDENTS_10 ( SLA_INC_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SLA_METRIC STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_INCIDENT_INDEX ( INCIDENT_ID STRING PRIMARY KEY, SERVICE_REF STRING, SLA_REF STRING, INCIDENT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_INCIDENT_INDEX ( INC_ID STRING PRIMARY KEY, SLA_ID STRING, INCIDENT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_INCIDENT_LOGS ( INCIDENT_ID STRING PRIMARY KEY, SLA_ID STRING, DESCRIPTION CLOB, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_KPI_DEFS ( KPI_ID STRING PRIMARY KEY, NAME STRING, DEFINITION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MAINTENANCE_IMPACT ( IMP_ID STRING PRIMARY KEY, WINDOW_ID STRING, SLA_IMPACT VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MAP ( MAP_ID STRING PRIMARY KEY, METRIC STRING, SLA_DEF VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MEASUREMENTS ( MEAS_ID STRING PRIMARY KEY, SLA_ID STRING, METRIC VARIANT, MEASURED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, SLA_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_METRICS_10 ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_MONITORING_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, MESSAGE STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLA_ID STRING, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, THRESHOLD_ID STRING, SENT_TO STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, CHANNEL STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION ( REC_ID STRING PRIMARY KEY, SLA_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, STARTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PASS BOOLEAN, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECORDS_04 ( SLA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_RECORDS_12 ( SLA_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SLA_METRICS VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_REMEDIATION_JOBS ( JOB_ID STRING PRIMARY KEY, BREACH_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_REMEDIATION_QUEUE ( Q_ID STRING PRIMARY KEY, VIOLATION_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REMEDIATION_RUNS ( RUN_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTIONS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORTING_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, SLA_ID STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORTING_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORTS_14 ( REPORT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORT_DETAILS ( DETAIL_ID STRING PRIMARY KEY, REPORT_ID STRING, ENTRY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORT_RUNS ( RUN_ID STRING PRIMARY KEY, SLO_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_REPORT_SUMMARIES ( REPORT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_REVIEW_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_ROLLBACK_LOGS ( LOG_ID STRING PRIMARY KEY, SLO_REF STRING, REVERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_TARGETS ( TARGET_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_THRESHOLDS ( THRESHOLD_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD_VALUE VARIANT, ACTION VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_VALIDATION_JOBS ( JOB_ID STRING PRIMARY KEY, SLO_REF STRING, TENANT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLA_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, METRIC STRING, VALUE VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRIC_NAME STRING, VALUE VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_NAME STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS_04 ( VIOLATION_ID STRING PRIMARY KEY, SLA_ID STRING, BUNDLE_ID STRING, DESCRIPTION STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATIONS_07 ( VIOLATION_ID STRING PRIMARY KEY, BENCH_ID STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, SLA_ID STRING, ACCOUNT_ID STRING, VIOLATION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATION_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, NOTIF_PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATION_REPORTS ( REPORT_ID STRING PRIMARY KEY, SLA_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLA_VIOLATION_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, REPORT_ID STRING, RESOLUTION VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLO_ID STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACHES ( BREACH_ID STRING PRIMARY KEY, SLO_ID STRING, METRIC VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACHES ( BREACH_ID STRING PRIMARY KEY, SLO_ID STRING, METRIC VARIANT, DETECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_ALERTS ( ALERT_ID STRING PRIMARY KEY, SLO_REF STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_EVENTS ( EVENT_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_EVENTS ( EVENT_ID STRING PRIMARY KEY, SLO_ID STRING, SERVICE_REF STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_LOGS ( BREACH_ID STRING PRIMARY KEY, SLO_NAME STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, EVENT_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_BREACH_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SLO_ID STRING, METRIC JSON, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SLO_BURN_RATE ( SLO_ID STRING PRIMARY KEY, SCOPE STRING, WINDOW VARIANT, BURN_RATE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_COMPLIANCE_07 ( SLO_ID STRING PRIMARY KEY, SLO_NAME STRING, METRICS VARIANT, WINDOW VARIANT, COMPLIANT BOOLEAN, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_COMPLIANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SLO_ID STRING, TENANT_ID STRING, STATUS STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, SERVICE_REF STRING, SLO_SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, AUDIT_ID STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_CONFIGS ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGET JSON, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_CONFIGS ( SLO_ID STRING PRIMARY KEY, NAME STRING, THRESHOLD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_DEFINITIONS ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGET VARIANT, OWNER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_DEFINITIONS ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGETS VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.SLO_DEFINITIONS_05 ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGET VARIANT, WINDOW STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_DEFINITION_REGISTRY ( SLO_ID STRING PRIMARY KEY, NAME STRING, TARGET JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_EVALUATIONS_05 ( EVAL_ID STRING PRIMARY KEY, SLO_ID STRING, METRICS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SLO_EVALUATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_EVALUATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_EVALUATION_RUNS ( RUN_ID STRING PRIMARY KEY, SLO_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_EVALUATION_RUNS ( RUN_ID STRING PRIMARY KEY, SLO_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_HISTORY ( HISTORY_ID STRING PRIMARY KEY, SLO_ID STRING, METRIC_PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_HISTORY ( H_ID STRING PRIMARY KEY, SLO_ID STRING, METRICS JSON, RECORDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_INCIDENT_REGISTRY ( INCIDENT_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_MITIGATION_QUEUE ( Q_ID STRING PRIMARY KEY, EVENT_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_POSTMORTEM_REPORTS ( REPORT_ID STRING PRIMARY KEY, INCIDENT_ID STRING, SUMMARY CLOB, PUBLISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_REMEDIATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, SLO_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_REVIEW_HISTORY ( RH_ID STRING PRIMARY KEY, SLO_ID STRING, REVIEW_OUTCOME JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, SLO_ID STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SLO_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, SLO_ID STRING, PROVIDER_NAME STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SLO_VIOLATIONS ( V_ID STRING PRIMARY KEY, SLO_ID STRING, DETAILS VARIANT, VIOLATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SLO_VIOLATION_LOGS_6115 ( LOG_ID STRING PRIMARY KEY, VIOL_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMOKE_RESULTS ( RESULT_ID STRING PRIMARY KEY, TEST_ID STRING, STATUS STRING, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMOKE_RUNS ( RUN_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SMOKE_TESTS ( TEST_ID STRING PRIMARY KEY, NAME STRING, SCRIPT CLOB, LAST_RUN TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERIES_04 ( DELIVERY_ID STRING PRIMARY KEY, NOTIFY_ID STRING, PHONE STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ, RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERIES_07 ( DELIVERY_ID STRING PRIMARY KEY, SMS_ID STRING, STATUS STRING, RESPONSE VARIANT, DELIVERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_INDEX ( DELIV_ID STRING PRIMARY KEY, PHONE STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_INDEX ( DELIV_ID STRING PRIMARY KEY, PHONE STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_LOG ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, PROVIDER_RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_QUEUE_10 ( QUEUE_ID STRING PRIMARY KEY, MSISDN STRING, MESSAGE STRING, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_RESULTS ( RES_ID STRING PRIMARY KEY, SHORT_CODE_ID STRING, TO_NUMBER STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SMS_DELIVERY_STATS ( STATS_ID STRING PRIMARY KEY, PROVIDER STRING, SUCCESS INT, FAIL INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_LOG ( LOG_ID STRING PRIMARY KEY, TO_NUMBER STRING, BODY STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_PROVIDER_INDEX ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_PROVIDER_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_PROVIDER_QUOTA ( QUOTA_ID STRING PRIMARY KEY, PROVIDER_REF STRING, LIMITS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PHONE_NUMBER STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_QUEUE_07 ( SMS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENT STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'QUEUED', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SMS_SHORT_CODE_METRICS ( METRIC_ID STRING PRIMARY KEY, SHORT_CODE_ID STRING, SENT_COUNT INT, FAILED_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_TEMPLATES_07 ( TEMPLATE_ID STRING PRIMARY KEY, BODY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMS_TEMPLATES_12 ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SMTP_PROVIDER_INDEX ( PROVIDER_ID STRING PRIMARY KEY, HOST STRING, PORT INT, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_INTEGRITY_RESULTS ( RES_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_PRUNE_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_PURGE_QUEUE ( Q_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RECON_QUEUE ( Q_ID STRING PRIMARY KEY, SNAP_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RECON_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_REFERENCES ( REF_ID STRING PRIMARY KEY, SNAP_ID STRING, REF_TYPE STRING, REF_VALUE STRING );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_REFERENCES_12 ( REF_ID STRING PRIMARY KEY, SNAP_ID STRING, REF_TYPE STRING, REF_PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RESTORE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SNAP_ID STRING, RESTORED_BY STRING, RESTORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETAIN_LOGS_6139 ( LOG_ID STRING PRIMARY KEY, SNAP_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETENTION_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETRIEVAL_LOGS ( LOG_ID STRING PRIMARY KEY, SNAP_ID STRING, REQUESTOR STRING, RETRIEVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETRIEVAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, SNAP_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_RETRIEVAL_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNAPSHOT_WEEKLY_ROLLUPS ( ROLL_ID STRING PRIMARY KEY, SNAP_ID STRING, WEEK_START DATE, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SNOWFLAKE_USAGE_COSTS ( RECORD_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, COST_CENTER STRING, COST NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_INCIDENT_KPIS ( KPI_ID STRING PRIMARY KEY, INCIDENT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_INCIDENT_PLAYBOOKS ( PLAYBOOK_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_ONCALL_HANDOFF_LOGS ( LOG_ID STRING PRIMARY KEY, FROM_OP STRING, TO_OP STRING, HANDOFF_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_ONCALL_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_PAGERDUTY_INTEGRATIONS ( INT_ID STRING PRIMARY KEY, SERVICE_KEY STRING, CONFIG JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_QA_CHECKS ( CHECK_ID STRING PRIMARY KEY, NAME STRING, QUERY_CLOB CLOB, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SRE_QA_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, RESULT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SRE_RUNBOOK_INDEX ( RUNBOOK_ID STRING PRIMARY KEY, NAME STRING, PATH STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EVENT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SSO_PROVIDER STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, USER_REF STRING, PROVIDER STRING, EVENT STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, IDP_ID STRING, EVENT_JSON VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT_LOG ( LOG_ID STRING PRIMARY KEY, USER_REF STRING, IDP STRING, ACTION STRING, TIMESTAMP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SSO_AUTH_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUBJECT_REF STRING, RESULT STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_CONFIG ( CONFIG_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SUBJECT_REF STRING, EVENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, IDP_ID STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SSO_PROVIDERS_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SSO_SESSIONS_06 ( SESSION_ID STRING PRIMARY KEY, USER_REF STRING, IDP_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STABILITY_INDEX ( INDEX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STABLE_ARCHIVE_INDEX_6263 ( ARCH_ID STRING PRIMARY KEY, LOCATION STRING, CHECKSUM STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STABLE_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, BUNDLE_ID STRING, HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STAKEHOLDER_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, EMAIL STRING, ROLE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, LOCATION STRING, METRICS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_COST_ALLOCATION ( ALLOC_ID STRING PRIMARY KEY, LOCATION STRING, COST_JSON VARIANT, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_COST_ESTIMATES ( EST_ID STRING PRIMARY KEY, TENANT_ID STRING, EST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_COST_REPORTS ( REPORT_ID STRING PRIMARY KEY, SCOPE VARIANT, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_ENCRYPTION_KEYS ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_ENCRYPTION_KEYS_06 ( KEY_ID STRING PRIMARY KEY, KEY_META VARIANT, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_INTEGRITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, CHECK_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TARGET_LOCATION STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CURRENT_USAGE NUMBER, QUOTA NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STORAGE_TIER_MAPPINGS ( MAP_ID STRING PRIMARY KEY, TIER_NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.STREAMING_INGEST_LAG ( LAG_ID STRING PRIMARY KEY, STREAM_NAME STRING, LAG_SECONDS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STREAMING_INGEST_OFFSETS ( OFFSET_ID STRING PRIMARY KEY, STREAM_NAME STRING, OFFSET_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STREAM_PROCESSING_METRICS ( METRIC_ID STRING PRIMARY KEY, STREAM_NAME STRING, LAG_MS NUMBER, THROUGHPUT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STREAM_REPLAY_REQUESTS ( REQ_ID STRING PRIMARY KEY, STREAM_NAME STRING, START_OFFSET STRING, END_OFFSET STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STREAM_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PROCESSED_COUNT NUMBER, ERRORS NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.STYLE_GUIDE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, GUIDE_ID STRING, TEMPLATE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_ACCESS_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUEST_ID STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_DATA_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_EXPORT_ARTIFACTS ( ART_ID STRING PRIMARY KEY, REQ_ID STRING, PATH STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_EXPORT_DELIVERY ( DEL_ID STRING PRIMARY KEY, ART_ID STRING, METHOD STRING, STATUS STRING, DELIVERED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_REQUEST_METRICS ( MET_ID STRING PRIMARY KEY, REQ_ID STRING, LATENCY_MS NUMBER, STEPS JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_REQUEST_PROCESSING ( PROC_ID STRING PRIMARY KEY, REQ_ID STRING, STEP STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_REQUEST_RECONCILE ( RECON_ID STRING PRIMARY KEY, REQ_ID STRING, EXPECTED_ITEMS INT, PROVIDED_ITEMS INT, STATUS STRING, RECON_DATE TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBJECT_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SUBPOENA_AUDIT_LOGS ( AUDIT_ID STRING PRIMARY KEY, Q_ID STRING, ACTION JSON, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBPOENA_RESPONSE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESPONSE JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIBER_NOTIFICATION_HISTORY ( HIST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, NOTIF_ID STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIBER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_BENEFIT_LOGS ( LOG_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, BENEFIT JSON, LOGGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_BILLING_CYCLES ( CYCLE_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_BILLING_EVENTS ( EVENT_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_BILLING_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CANCELLATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, REQUESTOR STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CANCELLATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_EVENTS ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANGE_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_LOGS_6125 ( LOG_ID STRING PRIMARY KEY, CHANGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_QUEUE_6124 ( CHANGE_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, EVENT_ID STRING, STATUS STRING, DETAILS VARIANT, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CHANGE_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_CREDITS ( CREDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_GRACE_PERIODS ( GP_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, GRACE_DAYS INT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_GRACE_PERIODS ( GRACE_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_REACTIVATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_REACTIVATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_STATUS_HISTORY ( H_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, OLD_STATUS STRING, NEW_STATUS STRING, CHANGED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_SUSPEND_JOBS ( JOB_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, REASON STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_SUSPEND_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_TERM_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUBSCRIPTION_USAGE_TIERS ( TIER_ID STRING PRIMARY KEY, SUBSCRIPTION_ID STRING, TIER_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPLIER_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, SUPPLIER_REF STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPLIER_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, SUPPLIER_REF STRING, COMPLIANCE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPLIER_ONBOARDING_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, SUPPLIER_REF STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_CASE_INDEX ( CASE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUMMARY CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_CASE_TIMELINES ( TL_ID STRING PRIMARY KEY, CASE_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_CONTACT_REGISTRY ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTACT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, TICKET_ID STRING, LEVEL STRING, ESCALATED_TO STRING, ESCALATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_HISTORY ( H_ID STRING PRIMARY KEY, TICKET_ID STRING, RULE_ID STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_PATHS ( PATH_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, POLICY_ID STRING, INCIDENT_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, TICKET_ID STRING, LEVEL STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_ESCALATION_RUNS ( RUN_ID STRING PRIMARY KEY, TICKET_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_KB_ARTICLES ( ARTICLE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_KB_INDEX ( KB_ID STRING PRIMARY KEY, TITLE STRING, CONTENT VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_RESPONSE_TIME_INDEX ( IDX_ID STRING PRIMARY KEY, CASE_ID STRING, RESPONSE_MS NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_SLA_METRICS ( METRIC_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, AVG_RESPONSE_TIME_MS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_SLA_METRICS ( MET_ID STRING PRIMARY KEY, TICKET_ID STRING, SLA_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_SLA_METRICS ( MET_ID STRING PRIMARY KEY, TICKET_ID STRING, SLA_METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_SLA_VIOLATIONS ( VIOLATION_ID STRING PRIMARY KEY, CASE_ID STRING, SLA_REF STRING, VIOLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUBJECT STRING, DESCRIPTION STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKETS_05 ( TICKET_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBJECT STRING, BODY CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKETS_12 ( TICKET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, SUBJECT STRING, BODY VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTION_JSON VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_ATTACHMENTS ( ATT_ID STRING PRIMARY KEY, TICKET_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_EVENTS ( EVENT_ID STRING PRIMARY KEY, TICKET_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_HISTORY ( H_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_INDEX ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_INDEX ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_LOGS ( LOG_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTION STRING, BY_USER STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_MESSAGES ( MSG_ID STRING PRIMARY KEY, TICKET_ID STRING, SENDER STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_METRICS ( METRIC_ID STRING PRIMARY KEY, TICKET_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_METRICS ( METRIC_ID STRING PRIMARY KEY, TICKET_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_METRICS ( MET_ID STRING PRIMARY KEY, TICKET_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_QUEUE ( TICKET_ID STRING PRIMARY KEY, SUBJECT STRING, DETAILS VARIANT, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_QUEUE ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_REGISTRY ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_RESPONSES ( RESP_ID STRING PRIMARY KEY, TICKET_ID STRING, RESPONDER STRING, MESSAGE CLOB, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_UPDATES ( UPDATE_ID STRING PRIMARY KEY, TICKET_ID STRING, UPDATED_BY STRING, UPDATE_TEXT STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_UPDATES_12 ( UPDATE_ID STRING PRIMARY KEY, TICKET_ID STRING, NOTE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUPPORT_TICKET_WORKFLOW_LOGS ( LOG_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SURVEY_RESPONSE_ITEMS ( ITEM_ID STRING PRIMARY KEY, SURVEY_ID STRING, QUESTION_REF STRING, ANSWER VARIANT, RESPONDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUSPECT_ACTIVITY ( SUSPECT_ID STRING PRIMARY KEY, REQUEST_ID STRING, REASON STRING, DETAILS VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUSPECT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SUSPECT_ID STRING, NOTIF_PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUSPICIOUS_ACTIVITY_06 ( SA_ID STRING PRIMARY KEY, TARGET_REF STRING, DESCRIPTION STRING, SCORE FLOAT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUSPICIOUS_ACTIVITY_FLAGS ( FLAG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REASON STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SUSPICIOUS_ACTIVITY_FLAGS_02 ( FLAG_ID STRING PRIMARY KEY, TARGET_REF STRING, REASON STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESOLVED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.SUSPICIOUS_ACTIVITY_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTIVITY_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_AUDIT_QUEUE ( QUEUE_ID STRING PRIMARY KEY, OBJECT_REF STRING, ACTION STRING, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_AUDIT_QUEUE_V2 ( QUEUE_ID STRING PRIMARY KEY, OBJECT_REF STRING, ACTION STRING, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RETRY_COUNT INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.SYNC_AUDIT_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, OBJECT_REF STRING, STATUS STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAILS VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, CHANGE_TYPE STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_ERROR_DLQ ( DLQ_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, RECORD_REF STRING, ERROR_JSON VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, OBJECT_NAME STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SYNC_JOBS_02 ( JOB_ID STRING PRIMARY KEY, OBJECT_NAME STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SYNC_JOBS_HISTORY ( HISTORY_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SYNC_JOBS_V2 ( JOB_ID STRING PRIMARY KEY, OBJECT_NAME STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT, LAST_ERROR VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SYNC_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, EVENT STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_QUEUE ( SYNC_ID STRING PRIMARY KEY, ENTITY_TYPE STRING, ENTITY_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNC_TELEMETRY_INDEX ( IDX_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_DATA_CATALOG ( CATALOG_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_DATA_GENERATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_DATA_GENERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_DATA_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_DATA_USAGE ( USAGE_ID STRING PRIMARY KEY, CATALOG_ID STRING, TENANT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_LOAD_RESULTS ( RES_ID STRING PRIMARY KEY, TEST_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_LOAD_TESTS ( TEST_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_PAYLOADS ( PAYLOAD_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, PAYLOAD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SYNTHETIC_TEST_RUNS ( RUN_ID STRING PRIMARY KEY, TEST_SUITE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_BACKUPS ( BACKUP_ID STRING PRIMARY KEY, TARGET STRING, LOCATION STRING, CHECKSUM STRING, BACKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CAPACITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CAPACITY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CATALOG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, CHANGE_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIG ( CONF_KEY STRING PRIMARY KEY, CONF_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIGURATION_CHANGES ( CHANGE_ID STRING PRIMARY KEY, KEY_NAME STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, KEY_NAME STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIG_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, CONFIG_KEY STRING, OLD_VALUE VARIANT, NEW_VALUE VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_CONFIG_HISTORY ( H_ID STRING PRIMARY KEY, CONFIG_KEY STRING, OLD JSON, NEW JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_DEPENDENCY_GRAPH ( NODE_ID STRING PRIMARY KEY, NODE_REF STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_EVENT_HANDLERS ( HANDLER_ID STRING PRIMARY KEY, EVENT_TYPE STRING, HANDLER_CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_EVENT_STREAM ( EVENT_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH ( HEALTH_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH_CHECKS ( HC_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH_CHECK_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, CHECK JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH_CHECK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH_CHECK_RUNS ( RUN_ID STRING PRIMARY KEY, CFG_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEALTH_SUMMARY ( SUM_ID STRING PRIMARY KEY, SCOPE STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_HEARTBEAT ( HB_ID STRING PRIMARY KEY, COMPONENT STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, MAINTENANCE_REF STRING, DETAILS CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_MAINTENANCE_LOGS ( LOG_ID STRING PRIMARY KEY, WINDOW_ID STRING, ACTION STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_MAINTENANCE_NOTES ( NOTE_ID STRING PRIMARY KEY, TITLE STRING, BODY CLOB, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_MAINTENANCE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, WINDOW_ID STRING, CHANNELS ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_MAINTENANCE_WINDOWS ( WINDOW_ID STRING PRIMARY KEY, START_AT TIMESTAMP_LTZ, END_AT TIMESTAMP_LTZ, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_SETTINGS ( SETTING_ID STRING PRIMARY KEY, NAME STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYSTEM_TELEMETRY_INDEXES ( IDX_ID STRING PRIMARY KEY, METRIC_NAME STRING, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SYS_CONFIG_04 ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYS_CONFIG_08 ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYS_CONFIG_09 ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYS_CONFIG_10 ( KEY STRING PRIMARY KEY, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SYS_MAINT_EVENTS ( EVT_ID STRING PRIMARY KEY, COMPONENT STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAGGING_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITIONS VARIANT, ACTIONS VARIANT, ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.TAGGING_RULE_LOGS_6403 ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_ANALYTICS_07 ( ANALYTIC_ID STRING PRIMARY KEY, TAG STRING, METRICS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_AUDIT_LOGS_6133 ( LOG_ID STRING PRIMARY KEY, TAG_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_CLOUD_METRICS ( MET_ID STRING PRIMARY KEY, TAG STRING, COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_INDEX ( IDX_ID STRING PRIMARY KEY, TAG STRING, TEMPLATE_IDS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_USAGE_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, TAG_KEY STRING, TAG_VALUE STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAG_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, TAG STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAMPER_CHECKS_05 ( CHECK_ID STRING PRIMARY KEY, BUNDLE_ID STRING, CHECK_TYPE STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_CONCURRENCY_LOCKS ( LOCK_ID STRING PRIMARY KEY, TASK_NAME STRING, HOLDER STRING, ACQUIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_DEADLETTER_QUEUE ( DLQ_ID STRING PRIMARY KEY, TASK_ID STRING, PAYLOAD VARIANT, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TASK_DEAD_LETTER ( DLQ_ID STRING PRIMARY KEY, ORIG_QUEUE_ID STRING, ERROR_MSG STRING, PAYLOAD VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_EXECUTION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TASK_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TASK_FAILURE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TASK_NAME STRING, FAILURE_JSON VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_FAILURE_RETRIES ( RETRY_ID STRING PRIMARY KEY, TASK_ID STRING, FAILURE_JSON VARIANT, RETRY_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ATTEMPT INT );

CREATE OR REPLACE TABLE DOCGEN.TASK_LOCK_07 ( LOCK_ID STRING PRIMARY KEY, TASK_NAME STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_LOCK_HISTORY_07 ( HISTORY_ID STRING PRIMARY KEY, LOCK_ID STRING, ACTION STRING, ACTED_BY STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_LOGS ( LOG_ID STRING PRIMARY KEY, WF_ID STRING, STEP_NAME STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_RECONCILIATION_INDEX ( RECON_ID STRING PRIMARY KEY, TASK_NAME STRING, EXPECTED_RUNS INT, ACTUAL_RUNS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_RETRY_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TASK_NAME STRING, PAYLOAD VARIANT, NEXT_RUN_AT TIMESTAMP_LTZ, ATTEMPT INT DEFAULT 0, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TASK_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, TASK_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TASK_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAXONOMY_TERM_REGISTRY ( TERM_ID STRING PRIMARY KEY, PARENT_ID STRING, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, ACCOUNT_ID STRING, ADJUSTMENT_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_ADJUSTMENT_REQUESTS ( REQ_ID STRING PRIMARY KEY, INVOICE_ID STRING, TENANT_ID STRING, ADJUSTMENT_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_ADJUSTMENT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TAX_APPLICATION_LOG ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, JUR_ID STRING, TAX_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_APPLICATION_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, TAX_BREAKDOWN VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_AUDIT ( AUDIT_ID STRING PRIMARY KEY, INVOICE_ID STRING, TAX_DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_CALCULATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, LINE_ITEMS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_CALCULATION_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TAX_CALC_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_REF STRING, TAX_BREAKDOWN JSON, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_COMPUTATION_LOGS ( LOG_ID STRING PRIMARY KEY, INVOICE_ID STRING, TAX_JSON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_DISPUTE_QUEUE ( DISPUTE_ID STRING PRIMARY KEY, INVOICE_REF STRING, TENANT_ID STRING, STATUS STRING DEFAULT 'OPEN', SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_JURISDICTIONS ( JURIS_ID STRING PRIMARY KEY, COUNTRY STRING, REGION STRING, TAX_RATE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_JURISDICTION_INDEX ( IDX_ID STRING PRIMARY KEY, JURISDICTION_CODE STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_JURISDICTION_INDEX ( JURIS_ID STRING PRIMARY KEY, COUNTRY_CODE STRING, REGION_CODE STRING, TAX_META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_JURISDICTION_INDEX ( JUR_ID STRING PRIMARY KEY, COUNTRY STRING, REGION STRING, RULES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_JURISDICTION_INDEX ( JUR_ID STRING PRIMARY KEY, NAME STRING, COUNTRY STRING, REGION STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_RATE_LOOKUP ( LOOKUP_ID STRING PRIMARY KEY, JURISDICTION STRING, RATE NUMBER, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_RATE_REGISTRY ( TAX_ID STRING PRIMARY KEY, REGION STRING, RATE NUMBER, EFFECTIVE_FROM TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_RECON_RESULTS ( R_ID STRING PRIMARY KEY, INVOICE_REF STRING, RESULTS JSON, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_REPORTING_JOBS ( JOB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_REPORTING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_RULES ( RULE_ID STRING PRIMARY KEY, JURIS_ID STRING, RULE_JSON VARIANT, EFFECTIVE_FROM TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TAX_RULE_REGISTRY ( RULE_ID STRING PRIMARY KEY, NAME STRING, JURISDICTION STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEAM_ROSTER_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TEAM_REF STRING, ROSTER_JSON VARIANT, SNAP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TECH_DEBT_REGISTER ( TD_ID STRING PRIMARY KEY, AREA STRING, DESCRIPTION CLOB, PRIORITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TECH_DEBT_WORK_ITEMS ( ITEM_ID STRING PRIMARY KEY, TD_ID STRING, OWNER STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, AGG_KEY STRING, PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, METRIC_NAME STRING, AGG_VALUE NUMBER, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SCOPE VARIANT, METRICS VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_EVENTS ( EVENT_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_EVENTS ( EVT_ID STRING PRIMARY KEY, PROFILE_ID STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, TRIGGERED_ENTITIES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_ALERT_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_COST_ALLOCATION ( ALLOC_ID STRING PRIMARY KEY, TENANT_ID STRING, COST_BREAKDOWN VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_DERIVED_METRICS ( METRIC_ID STRING PRIMARY KEY, NAME STRING, VALUE NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENTS ( EVENT_ID STRING PRIMARY KEY, SOURCE STRING, METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENTS ( TELE_ID STRING PRIMARY KEY, CONTEXT VARIANT, METRIC STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENTS ( TELE_ID STRING PRIMARY KEY, SOURCE STRING, EVENT_NAME STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENTS_12 ( TELE_ID STRING PRIMARY KEY, TYPE STRING, CONTEXT VARIANT, EMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENTS_RAW ( EVENT_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENT_INDEX ( IDX_ID STRING PRIMARY KEY, EVENT_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENT_INGEST ( EVENT_ID STRING PRIMARY KEY, SCHEMA_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENT_SCHEMA ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_EVENT_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, SCHEMA_JSON VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_INGEST ( TLM_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_INGEST_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_INGEST_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RECORD_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_INGEST_STREAM ( EVENT_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_PIPELINE_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_PIPELINE_RUNS ( RUN_ID STRING PRIMARY KEY, PIPELINE_NAME STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_SAMPLING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_SAMPLING_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TELEMETRY_SKETCHES ( SK_ID STRING PRIMARY KEY, METRIC_NAME STRING, SKETCH BINARY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_NAME STRING, TEMPLATE_BODY STRING, TEMPLATE_METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AB_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EXP_ID STRING, VARIANT STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESSIBILITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ISSUES VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_ANALYTICS_6104 ( ANALYTIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ANALYTICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ, NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_APPROVALS ( APP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_APPROVALS ( APRV_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ACL_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, GRANT_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ROLE_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCESS_SUMMARY VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_BREACH_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CHANGE_LOGS_6345 ( LOG_ID STRING PRIMARY KEY, HIST_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROL ( ACL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS ARRAY, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROL ( TAC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ROLE STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROLS ( CONTROL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_CONTROLS ( TAC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ROLE_OR_USER STRING, PERMISSIONS VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_GRANTS ( GRANT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, GRANTED_TO STRING, GRANTED_BY STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_HISTORY_6344 ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( ACCESS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_ID STRING, ACCESS_TYPE STRING, ACCESS_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCESSED_BY STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTION STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ACTION STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ACTION STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_METRICS ( M_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, VIEWS INT, LAST_VIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_OVERRIDE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_OVERRIDE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_POLICIES ( POLICY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_POLICY_INDEX_6230 ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_POLICY_LOGS_6231 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REMEDIATION_JOBS ( JOB_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, REASON CLOB, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REVIEW_LOGS_6129 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_REVIEW_METRICS_6128 ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_ROLES ( ROLE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ROLE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACCESS_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACL ( ACL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PRINCIPAL STRING, PERMISSIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ACL ( ACL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS ARRAY, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ADOPTION_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AI_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AI_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, AI_SUMMARY CLOB, SCORE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AI_TRAINING_DATASET ( DS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTRIES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRIC VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ANCHORS ( ANCHOR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ANCHOR_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENT STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED BOOLEAN, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_HISTORY ( APPROVAL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_INSTANCES ( INST_ID STRING PRIMARY KEY, WF_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, MATRIX_ID STRING, ACTION JSON, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, DECISION STRING, NOTES CLOB, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_BY STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVAL_STATUS STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVER STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_APPROVAL_WORKFLOWS ( WF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FLOW JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ARCHIVE_CONTENT VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ARCHIVE_INDEX ( ARCHIVE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ARCHIVE_LOCATION STRING, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUDIT_12 ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUDIT_TRAIL ( TA_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTHOR_REGISTRY ( AUTHOR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, AUTHOR_REF STRING, ATC_DT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOFIX_QUEUE ( Q_ID STRING PRIMARY KEY, RULE_ID STRING, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOFIX_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOFIX_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOREPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REPAIR_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOREPAIR_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOREPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOREPAIR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOSAVES ( SAVE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SAVED_BY STRING, SAVE_CONTENT VARIANT, SAVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOSAVE_INDEX_6398 ( SAVE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SAVE_JSON VARIANT, SAVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOSAVE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BODY CLOB, SAVED_BY STRING, SAVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOTEST_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ASSERTS JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOTEST_RUNS ( RUN_ID STRING PRIMARY KEY, SCRIPT_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTOTEST_SCRIPTS ( SCRIPT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCRIPT_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_AUTO_ARCHIVE_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_FILTER VARIANT, ARCHIVE_AFTER_DAYS INT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_BACKUP_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCATION STRING, CHECKSUM STRING, BACKED_UP_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_BACKUP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_BACKUP_RETENTION ( RET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_BLACKLIST ( BL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CACHE_HITS ( HIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CACHE_INVALIDATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CACHE_INVALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CANARY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CANARY_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_IDS ARRAY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CATALOG_SEARCH_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TOKENS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CERT_REQUIREMENTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUIREMENT VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVER_REF STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, STATUS STRING, ACTIONED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVER STRING, STATUS STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVAL_INDEX_6283 ( IDX_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVAL_JSON VARIANT, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVAL_LOGS_6284 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_APPROVAL_RESULTS ( RES_ID STRING PRIMARY KEY, APPROVAL_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_AUDIT_6184 ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_AUDIT_LOGS_6185 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_CONFLICTS ( CONFLICT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_HISTORY ( CHG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGE JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGED_BY STRING, CHANGE JSON, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_LOGS_6037 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGE_JSON VARIANT, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANNEL STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_NOTIFICATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EVENT JSON, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SENT_TO ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( CR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( CR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTED_BY STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, CHANGES VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, DETAILS CLOB, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUESTS_6036 ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHANGE_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUEST_QUEUE ( Q_ID STRING PRIMARY KEY, REQ_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DIFF VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_ROLLBACK ( ROLLBACK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ROLLBACK_TO_VER INT, INITIATED_BY STRING, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBSCRIBER STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_TELEMETRY ( TEL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHANGE_TREND_REPORTS ( REPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CHECKSUMS ( CHK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHECKSUM STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CLAUSES ( CLAUSE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CLAUSE_TEXT CLOB, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CLONE_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_TEMPLATE_ID STRING, TARGET_TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CLONE_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CLONE_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_TENANT STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CLONE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, THREAD_ID STRING, AUTHOR_REF STRING, BODY CLOB, POSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMMENT_MODERATION_QUEUE ( Q_ID STRING PRIMARY KEY, COMMENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMMENT_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMMENT_THREADS ( THREAD_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPATIBILITY ( COMPAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COMPAT_RULES VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPATIBILITY ( COMPAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COMPAT_VERSION STRING, NOTES STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPATIBILITY_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PLATFORM STRING, COMPAT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPAT_MATRIX ( MATRIX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PLATFORM STRING, SUPPORTED BOOLEAN, NOTES STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHECK_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, RESULT STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COMPLIANCE_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, DETAILS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_TAGS ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_TAGS ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG_KEY STRING, TAG_VALUE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPLIANCE_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VIOLATION_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_COMPRESSION_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SNAP_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONCORDANCE_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONCORDANCE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFIDENCE_SCORES ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, DETAILS VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFIDENCE_TRENDS ( TREND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TREND_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFIDENTIALITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, FLAG_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFIDENTIALITY_FLAGS ( FLAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FLAG_REASON STRING, SET_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFLICT_LOG ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONFLICT_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFLICT_RESOLUTIONS ( RES_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONFLICT_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFLICT_RESOLUTION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONFLICT_RESOLUTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, RESOLUTION JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONSTRAINT_INDEX ( CON_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONSTRAINT_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONSTRAINT_VIOLATIONS ( V_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VIOLATION_JSON VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONSUMPTION_METERING ( METER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_NUMBER NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTENT_SIGNATURES ( SIG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SIGNATURE_HASH STRING, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTENT_SIGNATURE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIG_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRACT_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONTRACT_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRACT_BINDING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, BIND_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRIBUTORS ( CONTRIB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, ROLE STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRIBUTOR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRIB_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRIBUTOR_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, CONTRIB_ID STRING, PERMISSIONS ARRAY, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CONTRIBUTOR_REGISTRY ( CONTRIB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONTRIBUTOR_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CR_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CR_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CR_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, CR_ID STRING, AUTHOR STRING, BODY CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CR_WORKFLOWS ( WF_ID STRING PRIMARY KEY, CR_ID STRING, STEP INT, OWNER STRING, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_CURATIONS ( CURATION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CURATOR STRING, NOTES CLOB, CURATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DATA_CLASSIFICATION ( CLASS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CLASS_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DELEGATION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DELEGATIONS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DELETION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DELETION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCIES ( DEP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, NODE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDENCY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ISSUE JSON, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_CYCLES ( CYCLE_ID STRING PRIMARY KEY, TEMPLATES ARRAY, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_CYCLES ( CYCLE_ID STRING PRIMARY KEY, TEMPLATE_IDS ARRAY, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( EDGE_ID STRING PRIMARY KEY, FROM_TEMPLATE STRING, TO_TEMPLATE STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( EDGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( EDGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( EDGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON_TEMPLATE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( GRAPH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ADJ_LIST VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH ( NODE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_GRAPH_6114 ( EDGE_ID STRING PRIMARY KEY, FROM_TEMPLATE STRING, TO_TEMPLATE STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_HEALTH ( HEALTH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_INDEX ( DEP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_INDEX_6404 ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDENCIES ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_LICENSES ( LIC_ID STRING PRIMARY KEY, DEP_NAME STRING, LICENSE_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_LICENSE_VIOLATIONS ( V_ID STRING PRIMARY KEY, DEP_NAME STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_LOGS_6115 ( LOG_ID STRING PRIMARY KEY, EDGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPTH INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPENDENCY_NOTIFS_6307 ( NOTIF_ID STRING PRIMARY KEY, EDGE_ID STRING, MESSAGE CLOB, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOYMENT_HISTORY ( DEPLOY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VERSION NUMBER );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOYMENT_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_ENV STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOYMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOY_HISTORY ( DEPLOY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPLOYED_BY STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOY_HISTORY ( DEP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENVIRONMENT STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DEPLOYED_BY STRING, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPLOY_LOGS ( LOG_ID STRING PRIMARY KEY, DEPLOY_ID STRING, STATUS STRING, LOG CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATIONS ( DEPRECATION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATE_AT TIMESTAMP_LTZ, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATIONS ( DEPREC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATED_BY STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATIONS ( DEP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REPLACEMENT_TEMPLATE STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MESSAGE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_HISTORY ( H_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION_JSON VARIANT, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_LOG ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATED_BY STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATED_BY STRING, REASON STRING, DEPRECATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, SCHED_ID STRING, SENT_TO ARRAY, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_Q ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NOTIFY_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'SCHEDULED', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_QUEUE ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_QUEUE_6303 ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, REASON CLOB, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED BOOLEAN, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, RESULT_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEPRECATION_SCHEDULE ( SCHED_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPRECATE_AT TIMESTAMP_LTZ, NOTICE CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_AUDIT ( AUD_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_CYCLES ( CYCLE_ID STRING PRIMARY KEY, TEMPLATE_IDS ARRAY, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_GRAPH ( EDGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_GRAPH_08 ( EDGE_ID STRING PRIMARY KEY, PARENT_TEMPLATE STRING, CHILD_TEMPLATE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DEPENDS_ON ARRAY, COMPUTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_RESOLVE_Q ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DEP_RESOLVE_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION JSON, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIFFS ( DIFF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_VERSION INT, TO_VERSION INT, DIFF TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIFF_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DIFF_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIFF_HISTORY_08 ( DIFF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DIFF VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIFF_INDEX ( DIFF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BASE_VERSION STRING, DIFF_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIFF_INDEX ( DIFF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_VER INT, TO_VER INT, DIFF_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DISTRIBUTION_LIST ( DL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECIPIENTS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DISTRIBUTION_LISTS ( LIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MEMBERS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DISTRIBUTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, DETAIL_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DISTRIBUTION_RUNS ( RUN_ID STRING PRIMARY KEY, DL_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DIVERSITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DOCUMENTATION ( DOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DOC_CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_DUPLICATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DUPLICATE_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_ACTIVITY ( ACT_ID STRING PRIMARY KEY, SESSION_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_CHANGES ( CHANGE_ID STRING PRIMARY KEY, SES_ID STRING, CHANGE JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_CONFLICT_LOGS ( LOG_ID STRING PRIMARY KEY, CHANGE_ID STRING, CONFLICT JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_RESOLUTION_Q ( Q_ID STRING PRIMARY KEY, LOG_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_SESSIONS ( SESSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EDITOR STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_ACTIVE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDITOR_SESSIONS ( SES_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EDITOR STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDIT_AUDIT_6034 ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EDITOR STRING, CHANGES VARIANT, EDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDIT_HISTORY ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EDITOR_REF STRING, DIFF VARIANT, EDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDIT_LOCKS ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EDIT_PROPOSALS ( PROP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PROPOSER STRING, PROPOSAL JSON, STATUS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EMBEDDING_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EMBEDDING VECTOR, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ENTITLEMENT_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ENTROPY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTROPY_SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ENTROPY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTROPY_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EVICTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EVICTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, AFFECTED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EVICTION_RUNS ( RUN_ID STRING PRIMARY KEY, POLICY_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FALLBACKS ( FALLBACK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FALLBACK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FEEDBACK_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FEEDBACK_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FEEDBACK JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FINGERPRINT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FINGERPRINT_INDEX ( FP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FINGERPRINT_HASH STRING, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FONT_REGISTRY ( FONT_ID STRING PRIMARY KEY, NAME STRING, LICENSE JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FONT_REQUESTS ( REQ_ID STRING PRIMARY KEY, FONT_NAME STRING, LICENSE_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FONT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, FONT_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FONT_USAGE ( USG_ID STRING PRIMARY KEY, FONT_ID STRING, TEMPLATE_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FORK_LOGS_6335 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_FORK_REQUESTS_6334 ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FORK_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GATE_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, RULE_ID STRING, TEMPLATE_ID STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GATING_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GOVERNANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LABEL_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GOVERNANCE_LABELS ( LABEL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LABEL JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GRAPH_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_NODE STRING, TO_NODE STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_GRAPH_NODES ( NODE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NODE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, HASH_VALUE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HEALTH_CHECKS ( HC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HEALTH_INDEX ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, METADATA VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HEALTH_SCORE_HISTORY ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_HEATMAP_LOGS_6077 ( LOG_ID STRING PRIMARY KEY, HEAT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_I18N_INDEX_6050 ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, TRANSLATED BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_I18N_LOGS_6051 ( LOG_ID STRING PRIMARY KEY, IDX_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMAGE_ASSETS ( ASSET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PATH STRING, METADATA VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMAGE_ASSET_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSET_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMAGE_ASSET_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMPORTS ( IMPORT_ID STRING PRIMARY KEY, SOURCE STRING, TEMPLATE_REF STRING, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMPORTS ( IMPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SOURCE_REF STRING, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_IMPORT_ERRORS ( ERROR_ID STRING PRIMARY KEY, IMPORT_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INDEX ( TIDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, KEY STRING, VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INDEX_02 ( TIDX2_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, KEY STRING, VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INDEX_MAINTENANCE ( MAINT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, SCHEDULED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INDEX_MAINTENANCE_RESULTS ( RES_ID STRING PRIMARY KEY, MAINT_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INHERITANCE_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PARENT_TEMPLATE_ID STRING, RELATION_TYPE STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INHERITANCE_MAP ( MAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PARENT_TEMPLATE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INTEGRATION_HEALTH ( HEALTH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, MAPPING_ID STRING, EVENT STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INTEGRATION_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INTEGRATION_REF STRING, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INTEGRITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHECK_TYPE STRING, RESULT STRING, DETAILS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_INTERNAL_NOTES ( NOTE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NOTE_CLOB CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ISSUES ( ISSUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ISSUE_JSON VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REPORTER STRING, SEVERITY STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_JURISDICTIONS ( JURIS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COUNTRY_CODE STRING, RULES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_KEYWORDS_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, KEYWORDS ARRAY, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LABELING_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LABELING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LABELS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LEGAL_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LEGAL_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LIBRARY ( TEMPLATE_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, NAME STRING, DESCRIPTION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LIBRARY ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, SCHEMA VARIANT, DEFAULT_LOCALE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LICENSE_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LICENSE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_RECORDS ( LICENSE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LICENSE_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_REGISTRY ( LICENSE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LICENSE_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_REGISTRY ( LIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LICENSE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_REGISTRY ( LIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LICENSE_JSON VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_USAGE ( USG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LICENSE_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LICENSE_VIOLATIONS ( V_ID STRING PRIMARY KEY, LIC_ID STRING, DOCUMENT_ID STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LIFECYCLE ( LC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LIFECYCLE ( LIFECYCLE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATE STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINEAGE_EDGES ( EDGE_ID STRING PRIMARY KEY, FROM_TEMPLATE STRING, TO_TEMPLATE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINEAGE_GRAPH ( NODE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LINEAGE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINEAGE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LINEAGE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINKED_RESOURCES ( LR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RESOURCE_REF STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINT_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LINT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ISSUES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALES ( LOCALE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION ( LOCALE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATIONS ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LANG STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATIONS ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, IDX_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LOC_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LOC_ID STRING, CHANGED_BY STRING, CHANGES VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_CATALOG ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_CHANGE_LOGS ( LOG_ID STRING PRIMARY KEY, LOC_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_HISTORY ( HIST_ID STRING PRIMARY KEY, LOCALE_ID STRING, CHANGE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT_CLOB CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_INDEX ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_INDEX ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_REGISTRY ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LANG STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_REGISTRY ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, BODY CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_REGISTRY ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, BODY_CLOB CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_REGISTRY ( LOC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCALIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSLATED_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCKS ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP());

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCKS ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCKS_08 ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCK_HISTORY ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ, UNLOCKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCK_HISTORY ( H_ID STRING PRIMARY KEY, LOCK_ID STRING, ACTION STRING, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCK_INDEX_6332 ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCK_LOGS_6333 ( LOG_ID STRING PRIMARY KEY, LOCK_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOCK_RELEASES_08 ( RELEASE_ID STRING PRIMARY KEY, LOCK_ID STRING, RELEASED_BY STRING, RELEASED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOC_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_LOC_RESULTS ( R_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MERGE_PAYLOAD VARIANT, MERGED_BY STRING, MERGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_CONFLICT_IDX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONFLICT_REF STRING, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_CONFLICT_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CONFLICT_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_CONFLICT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, RESOLUTION_JSON VARIANT, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_HISTORY ( MH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MERGED_BY STRING, MERGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_JOBS_6336 ( JOB_ID STRING PRIMARY KEY, BASE_TEMPLATE_ID STRING, MERGE_META VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_LOGS_6337 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MERGE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MERGE_TIME_MS NUMBER, RENDER_SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_METADATA_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METADATA VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_METADATA_INDEX_6394 ( META_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METADATA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_METADATA_LOGS_6395 ( LOG_ID STRING PRIMARY KEY, META_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MIGRATIONS ( MIG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_VERSION INT, TO_VERSION INT, MIGRATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MIGRATION_ERRORS ( ERR_ID STRING PRIMARY KEY, MIG_ID STRING, TEMPLATE_ID STRING, ERROR_DETAIL VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MIGRATION_LOG ( MIG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, MIGRATION_JSON VARIANT, MIGRATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MODERATION_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_MODERATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_NOTIFICATION_EVENTS ( EVT_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_NOTIFICATION_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBSCRIBER STRING, CHANNELS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OBSOLESCENCE ( OBS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OBSOLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OBSOLETION_NOTICES ( NOTICE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NOTICE_TEXT CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OCR_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OCR_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OCR_TEXT CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OPTIN_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OPTIN_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OPT_OUT_REGISTRY ( OPT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, OPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ORIGIN_REGISTRY ( ORIGIN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SOURCE STRING, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNERSHIP_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREV_OWNER STRING, NEW_OWNER STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNERSHIP_TRANSFER_6118 ( TRANSFER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_OWNER STRING, TO_OWNER STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNERSHIP_TRANSFER_6126 ( TRANSFER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OLD_OWNER STRING, NEW_OWNER STRING, TRANSFERRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNERSHIP_TRANSFER_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_OWNER STRING, TO_OWNER STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNERSHIP_TRANSFER_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNER_HISTORY ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OWNER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNER_HISTORY ( OH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREV_OWNER STRING, NEW_OWNER STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, OWNER_REF STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_OWNER_NOTIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, NOTIF_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERF_LOGS_6141 ( LOG_ID STRING PRIMARY KEY, PERF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ENTITY_REF STRING, PERMISSIONS ARRAY, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, GRANTEE STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSIONS ( PERM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS ARRAY, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSIONS ( TP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PRINCIPAL STRING, PERM STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSIONS_07 ( PERM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERM_LEVEL STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_GRANTS ( GRANT_ID STRING PRIMARY KEY, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_GRANTS ( GRANT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQ_ID STRING, GRANTED_TO STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, PERMISSIONS VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, PURPOSE STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PERMISSIONS JSON, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERMISSION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PERSONALIZATION_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_AUDIT ( TPA_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_ID STRING, AUDIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, POLICY_ID STRING, ACTION JSON, ACTIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_ENFORCEMENT_QUEUE ( Q_ID STRING PRIMARY KEY, POLICY_KEY STRING, TARGET_REF STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_ENFORCEMENT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_LINKS ( LINK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, POLICY_REF STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_VERSION_HISTORY ( VER_ID STRING PRIMARY KEY, POLICY_ID STRING, VERSION_NUMBER INT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POLICY_VIOLATIONS_SUMMARY ( SUM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COUNTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_POPULARITY_11 ( TEMPLATE_ID STRING PRIMARY KEY, TOTAL_USES NUMBER, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEWS ( PREVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, PREVIEW_PAYLOAD VARIANT, RENDER_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_ACCESS ( PA_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PAYLOAD VARIANT, PREVIEW_URL STRING, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREVIEW_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREVIEW_URL STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREVIEW_URL STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE ( PREVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RENDERED_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), TTL_SECONDS INT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_CACHE_6035 ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREVIEW_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_HISTORY ( PREVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUBJECT_REF STRING, PREVIEW_HASH STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, PREVIEW_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_LOGS_08 ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USER_REF STRING, ACTION STRING, LOG_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_METRICS ( MET_ID STRING PRIMARY KEY, CACHE_ID STRING, LATENCY_MS INT, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_STATS_08 ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VIEW_COUNT INT, LAST_VIEWED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_TELEMETRY_6100 ( TELE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREVIEW_TELEMETRY_LOGS_6101 ( LOG_ID STRING PRIMARY KEY, TELE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PREV_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PRIVACY_ANNOTATIONS ( ANNOT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ANNOTATION JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PRIVACY_SHIELD_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PRIVACY_SHIELD_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PROPOSAL_REVIEWS ( REV_ID STRING PRIMARY KEY, PROP_ID STRING, REVIEWER STRING, OUTCOME STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PROVENANCE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EVENT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PROVENANCE_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SOURCE_REF STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PROVENANCE_INDEX ( PROV_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SOURCE_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PROVENANCE_QUERIES ( QUERY_ID STRING PRIMARY KEY, QUERY_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLICATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLICATION_LOGS_6187 ( LOG_ID STRING PRIMARY KEY, PUB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLICATION_REGISTRY_6186 ( PUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION STRING, PUBLISHED_BY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLICATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISHER_REGISTRY ( PUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PUBLISHER_REF STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, APPROVER STRING, STATUS STRING DEFAULT 'PENDING', COMMENTS STRING, APPROVED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_DENIALS ( DENIAL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DENIED_BY STRING, REASON STRING, DENIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_HISTORY ( PH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PUBLISHED_BY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VERSION INT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_HISTORY ( PUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PUBLISHED_BY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_HISTORY ( PUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PUBLISHED_BY STRING, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PUBLISH_ATTEMPTS INT, LAST_ATTEMPT_AT TIMESTAMP_LTZ, SUCCESS_RATE FLOAT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_ENV STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PUBLISH_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_PURGE_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_06 ( TQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, COMMENT STRING, SCORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TH_ID STRING, TEMPLATE_ID STRING, SCORE NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_BASELINES ( BASE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BASELINE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_INDEX_6293 ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, QUALITY_SCORE NUMBER, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_ISSUES ( ISSUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ISSUE VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_REPORTS ( REPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_REVIEWERS ( REVIEWER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, SCORE NUMBER, COMMENTS CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, SCORE NUMBER, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, REVIEWER_ID STRING, COMMENTS CLOB, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_RULES ( TQR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, EVAL_META VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_SCORES_08 ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUALITY_THRESHOLDS ( TH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, THRESHOLDS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUOTA_BREACH_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CURRENT_USAGE INT, LIMIT INT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUOTA_BREACH_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ACTION_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_QUOTA_VIOLATIONS ( V_ID STRING PRIMARY KEY, TENANT_ID STRING, TEMPLATE_ID STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_READABILITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATIONS ( RECO_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE FLOAT, REASON VARIANT, GENERATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATIONS_08 ( REC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RECOMMENDED_FOR VARIANT, SCORE FLOAT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATIONS_11 ( RECO_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, TEMPLATE_ID STRING, SCORE NUMBER, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATION_CACHE ( CACHE_ID STRING PRIMARY KEY, TENANT_ID STRING, RECOMMENDATIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATION_INDEX_6106 ( IDX_ID STRING PRIMARY KEY, TENANT_ID STRING, RECOMMENDATIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTEXT VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RECOMMENDATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, SUGGESTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REGRESSION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REGRESSION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RELEASE_PIPELINE_6406 ( PIPE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STAGE STRING, STATUS STRING DEFAULT 'PENDING', UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDERERS ( RENDERER_ID STRING PRIMARY KEY, NAME STRING, IMAGE_REF STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RENDER_ENGINE STRING, LATENCY_MS NUMBER, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_BACKUPS ( BACKUP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SNAPSHOT_LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_CACHE ( CACHE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RENDERED_URL STRING, CACHE_TTL TIMESTAMP_LTZ, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_LOCALES ( R_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, RENDER_URL STRING, RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_LOGS ( RENDER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ASSEMBLY_ID STRING, RENDERED_URL STRING, STATUS STRING, LOG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RENDER_COUNT NUMBER, LAST_RENDERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RENDER_TIMEOUTS ( TIMEOUT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TIMEOUT_MS NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REPLACEMENT_MAP ( MAP_ID STRING PRIMARY KEY, OLD_TEMPLATE_ID STRING, NEW_TEMPLATE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REPLACEMENT_SUGGESTIONS ( SUG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUGGESTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REPLACEMENT_SUGGESTIONS ( SUG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUGGESTION_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, ARCHIVE_ID STRING, TARGET_TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RESTORE_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETARGETING_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETENTION_EXEMPTIONS ( EXEMPT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETENTION_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON STRING, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETENTION_EXEMPTIONS_AUDIT ( AUDIT_ID STRING PRIMARY KEY, EX_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENTS_08 ( RETIRE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETIRED_BY STRING, RETIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_HISTORY ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETIRED_BY STRING, RETIRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, PLAN_ID STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SENT_TO ARRAY );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_PLANS ( PLAN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETIRE_AT TIMESTAMP_LTZ, NOTICE_CLOB CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_Q ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_RESULTS ( RES_ID STRING PRIMARY KEY, SCHEDULE_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_SCHEDULE ( SCHEDULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETIRE_AT TIMESTAMP_LTZ, REASON CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETIREMENT_SCHEDULE_6299 ( SCHEDULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RETIRE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETURN_TO_DRAFT_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RETURN_TO_DRAFT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REUSE_INDEX_6309 ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REUSE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REUSE_SUGGESTIONS ( SUG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SUGGESTIONS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVERT_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVERTED_TO_VERSION INT, REVERTED_BY STRING, REVERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEWERS ( REVIEWER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, SCORE FLOAT, COMMENTS STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_ASSIGNMENTS ( A_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_ASSIGNMENT_LOGS ( LOG_ID STRING PRIMARY KEY, RULE_ID STRING, ASSIGNED_TO STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_ASSIGNMENT_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_COMMENTS ( C_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COMMENTER STRING, COMMENT TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_FEEDBACK ( FB_ID STRING PRIMARY KEY, ASSIGN_ID STRING, FEEDBACK_CLOB CLOB, RATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_HISTORY ( HIST_ID STRING PRIMARY KEY, Q_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_LOGS ( LOG_ID STRING PRIMARY KEY, QUEUE_ID STRING, REVIEWER STRING, OUTCOME STRING, NOTES CLOB, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_LOGS_6035 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_METRICS_6068 ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_METRIC_LOGS_6069 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE ( QUEUE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', ASSIGNED_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_QUEUE_6034 ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, Q_ID STRING, TEMPLATE_ID STRING, REVIEWER STRING, OUTCOME VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_RESULTS ( RESULT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVIEWER STRING, RESULT STRING, COMMENTS STRING, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, REVIEWER STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, SCORE NUMBER, COMMENTS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_SCORECARD_6386 ( SCORE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_WORKFLOWS ( WF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_WORKFLOW_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVIEW_WORKFLOW_RUNS ( RUN_ID STRING PRIMARY KEY, WF_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_APPROVALS ( APP_ID STRING PRIMARY KEY, REVISION_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), COMMENTS CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, REVISION_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, AUTHOR STRING, COMMENT_CLOB CLOB, POSTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_INDEX_6301 ( REV_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REV_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_NOTES ( NOTE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NOTES CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_REVISION_PENDING ( PEND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REVISION_JSON VARIANT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_RISK_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RISK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_EVENTS ( EVENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_VERSION INT, TO_VERSION INT, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PERFORMED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_HISTORY ( H_ID STRING PRIMARY KEY, RB_ID STRING, ROLLED_BY STRING, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_VERSION INT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_POINTS ( RB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SNAPSHOT_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TO_VERSION INT, REQUESTED_BY STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_ROLLBACK_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SAFETY_CHECKS ( CHECK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, CHECK_JSON VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SAFETY_RESULTS ( RES_ID STRING PRIMARY KEY, CHECK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SCHEMA_COMMENTS ( COMMENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, COMMENT TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SCHEMA_VERSIONS ( SCHEMA_VER_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCHEMA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SCHEMA_VERSIONS_6340 ( SCHEMA_VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, SCHEMA_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SCORE_HISTORY_6392 ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEARCH_ALIASES ( ALIAS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ALIAS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEARCH_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, INDEX_META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEARCH_QUERIES ( QUERY_ID STRING PRIMARY KEY, TENANT_ID STRING, QUERY_TEXT STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEARCH_RESULTS ( RES_ID STRING PRIMARY KEY, QUERY_ID STRING, TEMPLATE_IDS ARRAY, SCORES ARRAY, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECTIONS_06 ( SECTION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SECTION_KEY STRING, SECTION_CONTENT CLOB, ORDERING INT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECURITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, LABEL_ID STRING, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECURITY_LABELS ( LABEL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LABEL STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECURITY_LABELS ( LABEL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LABEL_KEY STRING, LABEL_VALUE STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECURITY_SCAN_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SECURITY_SCAN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEED_REGISTRY ( SEED_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SOURCE STRING, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SENSITIVITY_INDEX_6380 ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SENSITIVITY_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SEVERITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SEVERITY_COUNTS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SHARED_WITH_ACCOUNTS ( SHARE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SHARES ( SHARE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SHARED_TO STRING, PERMISSIONS VARIANT, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SHARING_LINKS ( LINK_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LINK_TOKEN STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SIMILAR_TO ARRAY, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SIMILAR_TO STRING, SCORE NUMBER, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_AUDIT ( AUDIT_ID STRING PRIMARY KEY, ALERT_ID STRING, REVIEWER STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EMBEDDING VECTOR, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EMBEDDING VECTOR, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EMBEDDING VECTOR, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, NEIGHBORS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_MAP ( MAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SIMILAR_TO STRING, SCORE NUMBER, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_METRICS_6108 ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_METRIC_LOGS_6109 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_RESULTS ( RES_ID STRING PRIMARY KEY, IDX_ID STRING, NEIGHBORS ARRAY, SCORES ARRAY, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_SNAPSHOT ( SNAP_ID STRING PRIMARY KEY, IDX_REF STRING, S3_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SIMILARITY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SLO_ACKNOWLEDGEMENTS ( ACK_ID STRING PRIMARY KEY, EVT_ID STRING, ACK_BY STRING, ACK_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SLO_BREACH_EVENTS ( EVT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BREACH_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SNAPSHOTS_12 ( SNAPSHOT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER NUMBER, SNAPSHOT_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STALENESS_WARNINGS ( WARN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, WARNING_TEXT CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STORAGE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PROFILE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STORAGE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STYLE_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PROFILE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STYLE_GUIDES ( GUIDE_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_STYLE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, STYLE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SUBSCRIPTION_METRICS ( METRIC_ID STRING PRIMARY KEY, SUB_ID STRING, METRIC_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SUBSCRIPTION_REGISTRY ( SUB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, SUBSCRIBED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SUPPRESSION_LIST ( SUP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SYNC_LOG ( SYNC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SYNC_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_SYNONYMS ( SYN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, SYNONYM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAGGING_RULES_6402 ( RULE_ID STRING PRIMARY KEY, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAGGING_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG_COUNTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAGS ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAGS ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAGS ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG STRING, TAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAG_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAG_CATALOG ( TAG_ID STRING PRIMARY KEY, TAG_NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAG_INDEX ( INDEX_ID STRING PRIMARY KEY, TAG STRING, COUNT INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAG_INDEX ( TAG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TAG STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TAG_USAGE ( USG_ID STRING PRIMARY KEY, TAG STRING, USAGE_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TELEMETRY_LOGS_6117 ( LOG_ID STRING PRIMARY KEY, STREAM_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TELEMETRY_STREAM_6116 ( STREAM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_THIRD_PARTY_CALL_LOGS ( LOG_ID STRING PRIMARY KEY, INT_ID STRING, REQUEST JSON, RESPONSE JSON, CALLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_THIRD_PARTY_INTEGRATIONS ( INT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PROVIDER STRING, CONFIG VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_THUMBNAILS ( THUMB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, IMAGE_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_APPROVALS ( APPROVAL_ID STRING PRIMARY KEY, RES_ID STRING, APPROVER STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, REVIEWER STRING, APPROVED BOOLEAN, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TRANS_ID STRING, USER_REF STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, PROVIDER STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LOCALE STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LOCALE STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_LOGS_6045 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_QUEUE_6044 ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_REGISTRY ( TRANS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LOCALE STRING, BODY CLOB, TRANSLATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LOCALE STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_LOCALE STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_CLOB CLOB, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTPUT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSLATED_TEXT STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE ( USAGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE ( USAGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_04 ( USAGE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, THRESHOLD INT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, THRESHOLD_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, THRESHOLD INT, NOTIFIED BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ALERT_HISTORY ( HIST_ID STRING PRIMARY KEY, ALERT_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ANALYTICS ( ANALYTICS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_DAILY ( REC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, DAY DATE, USES NUMBER DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_ENTITLEMENTS ( ENT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, ENT_JSON VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_EXPORT_LOGS ( LOG_ID STRING PRIMARY KEY, EXPORT_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_FORECAST ( FORECAST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, FORECAST JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PREDICTED_USAGE INT, FORECAST_WINDOW VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_FORECAST_6305 ( FORECAST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_FORECAST_ALERTS ( ALERT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, FORECAST JSON, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_FORECAST_HISTORY ( FH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_HEATMAP ( HEAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, BUCKETS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_HEATMAP ( HM_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, LAST_USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_HEATMAP_6076 ( HEAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, HEATMAP JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_HISTORIES ( HIST_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_HISTORY ( HISTORY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CONTEXT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_LOGS ( LOG_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USAGE INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_METRICS ( MET_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_METRICS_11 ( METRIC_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, USAGE_COUNT NUMBER, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, EVENT STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_PREDICTIONS ( PRED_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PRED_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_QUOTA ( QUOTA_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, LIMIT INT, PERIOD STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( STATS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_DATE DATE, USAGE_COUNT INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_COUNT INT, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS ( TUS_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_COUNT INT DEFAULT 0, LAST_USED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_STATS_08 ( STAT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, USAGE_COUNT INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_USAGE_TRENDS ( TREND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VALIDATION_REPORTS ( REPORT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ISSUES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VALIDATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VALIDATION_RULES ( RULE_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VALIDATION_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, VAR_ID STRING, ACCOUNT_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_CATALOG ( VAR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VARIANT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_INDEX ( IDX_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VARIANT_KEY STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_INDEX ( VAR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VARIANT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_INDEX_6086 ( VAR_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VARIANT_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_LOGS_6087 ( LOG_ID STRING PRIMARY KEY, VAR_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_METRICS ( MET_ID STRING PRIMARY KEY, VAR_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_ROLLOUT_QUEUE ( Q_ID STRING PRIMARY KEY, VAR_ID STRING, TARGET_ACCOUNTS ARRAY, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_USAGE ( USAGE_ID STRING PRIMARY KEY, VAR_ID STRING, TENANT_ID STRING, USAGE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_USAGE ( USG_ID STRING PRIMARY KEY, VAR_ID STRING, TENANT_ID STRING, COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_USAGE ( USG_ID STRING PRIMARY KEY, VAR_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VARIANT_USAGE_6346 ( USAGE_ID STRING PRIMARY KEY, VARIANT_ID STRING, TENANT_ID STRING, USAGE_COUNT INT DEFAULT 0, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VENDOR_CREDENTIAL_STORE ( CRED_ID STRING PRIMARY KEY, VENDOR_REF STRING, CRED_META VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VENDOR_MAPPINGS ( MAP_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VENDOR_REF STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSIONS ( TEMPLATE_VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, CONTENT_CLOB STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), IS_ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSIONS ( TEMPLATE_VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER NUMBER, CONTENT_CLOB STRING, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), IS_ACTIVE BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSIONS_HISTORY ( TVH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, BODY CLOB, UPDATED_BY STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSIONS_HISTORY ( TVH_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, VERSION_NUMBER INT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DIFF VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_VERSION_ID STRING, CHANGES VARIANT, AUDITED_BY STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSION_LOCKS ( LOCK_ID STRING PRIMARY KEY, TEMPLATE_VERSION_ID STRING, LOCKED_BY STRING, LOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSION_NOTES ( NOTE_ID STRING PRIMARY KEY, TEMPLATE_VERSION_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_VERSION_ROLLBACK_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, FROM_VERSION INT, TO_VERSION INT, ROLLED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_WARNINGS ( WARN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, WARNING TEXT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPLATE_WHITELIST ( WL_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TENANT_ID STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPORAL_ARCHIVES ( ARCH_ID STRING PRIMARY KEY, ORIGINAL_REF STRING, ARCHIVE_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEMPORAL_ARCHIVES_02 ( ARCH_ID STRING PRIMARY KEY, ORIGINAL_REF STRING, PAYLOAD VARIANT, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMPORAL_SESSION_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SESSION_ID STRING, SNAP_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_ACCESS_TOKENS ( TAT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_ASSEMBLY_STORE ( STORE_ID STRING PRIMARY KEY, ASSEMBLY_ID STRING, PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_FILES ( TEMP_ID STRING PRIMARY KEY, PATH STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_PROCESSING_08 ( TEMP_ID STRING PRIMARY KEY, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_PROCESSING_ARTIFACTS ( ART_ID STRING PRIMARY KEY, JOB_REF STRING, PATH STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_RENDER_FILES ( FILE_ID STRING PRIMARY KEY, PATH STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_STAGING_CLEANUP_JOBS ( JOB_ID STRING PRIMARY KEY, STAGE_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_STAGING_CLEANUP_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, CLEANED OBJECT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEMP_TOKEN_USAGE ( USG_ID STRING PRIMARY KEY, TAT_ID STRING, USED_BY STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_API_CLIENT_REGISTRY ( CLIENT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_LOGS_10 ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, PAYLOAD VARIANT, LOG_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_OVERVIEW ( OVERVIEW_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_PREF_HISTORY ( HIST_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, THRESHOLD NUMBER, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONFIG_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_CONFIG ( CONFIG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_HISTORY ( BILL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, TOTAL_AMOUNT NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_HOLD_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, REASON CLOB, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_HOLD_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_METADATA ( META_ID STRING PRIMARY KEY, TENANT_ID STRING, BILLING_CYCLE STRING, BILLING_ACCOUNT STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_BILLING_PROFILE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, TENANT_ID STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, PROFILE_ID STRING, CHECK_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_DASHBOARD ( DASH_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_LOGS_6276 ( LOG_ID STRING PRIMARY KEY, PROFILE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_PROFILE ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUIREMENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COMPLIANCE_PROFILE_6275 ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIGS_07 ( CONFIG_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIG_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), CHANGED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIG_CHANGE_HISTORY ( CH_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGE JSON, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIG_CHANGE_LOG ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIG_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG JSON, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONFIG_VERSIONS ( VERSION_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_CONTACT_DIRECTORY ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COST_ALLOCATIONS ( ALLOC_ID STRING PRIMARY KEY, CC_ID STRING, PERIOD_START DATE, PERIOD_END DATE, AMOUNTS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_COST_CENTERS ( CC_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_EXPORT_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_LOCATION_PREFS ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, REGION STRING, STORAGE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_RESIDENCY_CONFIGS ( CFG_ID STRING PRIMARY KEY, TENANT_ID STRING, REGION STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_SHARING_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DATA_SUBJECT_REQUESTS ( DSR_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT_REF STRING, REQUEST_TYPE STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_DPO_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, EMAIL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANGED_BY STRING, CHANGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, VIOL_ID STRING, ACTIONS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, TENANT_ID STRING, ENTITLEMENT_JSON VARIANT, TAKEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_SYNC_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, STATUS STRING DEFAULT 'PENDING', SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_SYNC_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ENTITLEMENT_VIOLATIONS ( VIOL_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ESCALATION_CONTACTS ( EC_ID STRING PRIMARY KEY, TENANT_ID STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ACTION STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, OVERRIDE_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_QUOTA_CHANGES ( CHANGE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, OLD_QUOTA VARIANT, NEW_QUOTA VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_ROLLOUTS ( ROLLOUT_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, CONFIG VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_TELEMETRY ( TELE_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_USAGE ( ACCOUNT_ID STRING, FEATURE_KEY STRING, USAGE_DATE DATE, USAGE_QTY NUMBER, PROVENANCE VARIANT, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEATURE_USAGE_SUMMARY ( SUM_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD_START DATE, PERIOD_END DATE, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEEDBACK_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FEEDBACK_REGISTRY ( FEEDBACK_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, COMMENTS CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_FINANCIAL_PROFILE_6120 ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_GEO_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_HEALTH_INDEX ( HEALTH_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_INCIDENT_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, INCIDENT_ID STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_INCIDENT_RESPONSE_PLANS ( PLAN_ID STRING PRIMARY KEY, TENANT_ID STRING, PLAN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_INTEGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, INTEGRATION_NAME STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_KEYS ( KEY_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_KEY_HISTORY ( HISTORY_ID STRING PRIMARY KEY, KEY_ID STRING, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_LICENSE_REGISTRY ( LICENSE_ID STRING PRIMARY KEY, TENANT_ID STRING, LICENSE_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, TENANT_ID STRING, EXTERNAL_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_TENANT STRING, DEST_TENANT STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_MIGRATION_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STEP STRING, LOG_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_NOTIFICATION_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, NOTIF JSON, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_NOTIFICATION_RULES ( RULE_ID STRING PRIMARY KEY, TENANT_ID STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_NOTIFICATION_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, TENANT_ID STRING, CHANNEL STRING, TEMPLATE_CLOB CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_CHECKLISTS ( CHECKLIST_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEMS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC_NAME STRING, METRIC_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_PROGRESS ( PROG_ID STRING PRIMARY KEY, TENANT_ID STRING, STAGE STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_PROGRESS ( PROG_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_READINESS ( READ_ID STRING PRIMARY KEY, TENANT_ID STRING, SCORE NUMBER, COMPONENTS VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_READINESS_ACTIONS ( ACTION_ID STRING PRIMARY KEY, READ_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_STEPS ( STEP_ID STRING PRIMARY KEY, TENANT_ID STRING, STEP_NAME STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, TENANT_ID STRING, TASK JSON, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARDING_TASKS ( TASK_ID STRING PRIMARY KEY, TENANT_ID STRING, TASK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARD_AUDIT ( AUDIT_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION STRING, DETAILS VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARD_CHECKLIST ( CHECK_ID STRING PRIMARY KEY, TENANT_ID STRING, ITEM STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_ONBOARD_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, JOB_JSON VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_OPERATIONAL_NOTES ( NOTE_ID STRING PRIMARY KEY, TENANT_ID STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_POLICY_ENFORCEMENTS ( ENF_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, STATUS STRING, ENFORCED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_POLICY_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, REASON CLOB, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_POLICY_VIOLATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, LOG_ID STRING, ACTION_JSON VARIANT, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_POLICY_VIOLATION_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREF_KEY STRING, PREF_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PRIVACY_PREFS ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PRIVACY_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUESTOR STRING, REQUEST_JSON VARIANT, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PRIVACY_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PRIVACY_SETTINGS ( SETTING_ID STRING PRIMARY KEY, TENANT_ID STRING, SETTING_KEY STRING, SETTING_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PROVISIONING_RESULTS ( RES_ID STRING PRIMARY KEY, TASK_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_PROVISIONING_TASKS ( TASK_ID STRING PRIMARY KEY, TENANT_ID STRING, TASK_JSON VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTAS ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, RESOURCE STRING, LIMIT NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_KEY STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_DEFINITIONS ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_ENFORCEMENT_LOGS ( LOG_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, ACTION JSON, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_ESCALATIONS ( ESC_ID STRING PRIMARY KEY, NOTIF_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_ESCALATION_QUEUE ( Q_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_KEY STRING, CHANGE NUMBER, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_REF STRING, MESSAGE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_RECONCILIATION ( RECON_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, STATUS STRING, DETAILS VARIANT, RECONCILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_USAGE ( USAGE_ID STRING PRIMARY KEY, QUOTA_ID STRING, USAGE_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_QUOTA_VIOLATIONS ( V_ID STRING PRIMARY KEY, TENANT_ID STRING, QUOTA_KEY STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_RATE_LIMITS ( LIMIT_ID STRING PRIMARY KEY, TENANT_ID STRING, LIMIT_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_RATE_USAGE ( USAGE_ID STRING PRIMARY KEY, TENANT_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, COUNT NUMBER );

CREATE OR REPLACE TABLE DOCGEN.TENANT_REMEDIATION_ACTIONS ( ACTION_ID STRING PRIMARY KEY, TENANT_ID STRING, ACTION_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_REMEDIATION_RUNS ( RUN_ID STRING PRIMARY KEY, ACTION_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_REPORTING_PREFERENCES ( PREF_ID STRING PRIMARY KEY, TENANT_ID STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECRETS_10 ( SECRET_ID STRING PRIMARY KEY, TENANT_ID STRING, SECRET_REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECRETS_REFS ( REF_ID STRING PRIMARY KEY, TENANT_ID STRING, SECRET_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_EVENTS ( EVT_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_EVENTS ( EVT_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY CLOB, STATUS STRING, OPENED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_INCIDENT_NOTES ( NOTE_ID STRING PRIMARY KEY, INCIDENT_ID STRING, AUTHOR STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_LOGS_6163 ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_POLICY_6162 ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_PROFILE ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, POLICY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, CFG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SECURITY_SETTINGS ( SETTING_ID STRING PRIMARY KEY, TENANT_ID STRING, SETTINGS JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SERVICE_CATALOG ( CATALOG_ID STRING PRIMARY KEY, TENANT_ID STRING, SERVICES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SERVICE_HEALTH ( HEALTH_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SERVICE_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, TENANT_ID STRING, SERVICE_JSON VARIANT, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SERVICE_SUBSCRIPTION_EVENTS ( EVT_ID STRING PRIMARY KEY, TENANT_ID STRING, SERVICE_REF STRING, EVENT JSON, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SETTINGS ( SETTING_ID STRING PRIMARY KEY, TENANT_ID STRING, KEY STRING, VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SETTINGS ( SETTING_ID STRING PRIMARY KEY, TENANT_ID STRING, SETTING_KEY STRING, SETTING_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_BREACH_HISTORY ( H_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_ID STRING, DETAILS VARIANT, BREACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_COMPLIANCE ( RECORD_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_CONFIGURATIONS ( SLA_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_EVENTS ( EVT_ID STRING PRIMARY KEY, SLA_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_EXEMPTIONS ( EX_ID STRING PRIMARY KEY, TENANT_ID STRING, SLA_ID STRING, REASON CLOB, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, SLO_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROFILE_ID STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUBSCRIPTION_EVENTS ( EVT_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUBSCRIPTION_NOTIFS ( NOTIF_ID STRING PRIMARY KEY, SUB_ID STRING, TENANT_ID STRING, CHANNEL STRING, STATUS STRING, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUPPORT_CONTACTS ( CONTACT_ID STRING PRIMARY KEY, TENANT_ID STRING, NAME STRING, CONTACT JSON, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUPPORT_TICKETS ( TICKET_ID STRING PRIMARY KEY, TENANT_ID STRING, SUBJECT STRING, STATUS STRING DEFAULT 'OPEN', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUPPORT_TICKET_EVENTS ( EVT_ID STRING PRIMARY KEY, TICKET_ID STRING, EVENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SUPPORT_TIERS ( TIER_ID STRING PRIMARY KEY, TENANT_ID STRING, TIER_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_SYNC_HISTORY ( HIST_ID STRING PRIMARY KEY, MAPPING_ID STRING, SYNC_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TENANT_TRIAL_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, METRIC JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_USAGE_ANOMALIES ( ANOMALY_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_USAGE_CAPS_07 ( CAP_ID STRING PRIMARY KEY, TENANT_ID STRING, CAPS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TENANT_USAGE_ROLLUPS ( ROLLUP_ID STRING PRIMARY KEY, TENANT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, USAGE_SUMMARY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TERMS_AND_CONDITIONS_VERSIONS ( TC_ID STRING PRIMARY KEY, JURISDICTION STRING, BODY CLOB, VERSION_NUMBER INT, EFFECTIVE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_DATA_CATALOG ( CATALOG_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_DATA_INSTANCES ( INSTANCE_ID STRING PRIMARY KEY, CATALOG_ID STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_FIXTURES ( FIX_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_FIXTURE_INDEX ( FIXTURE_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_INJECTIONS ( INJ_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_JOBS ( JOB_ID STRING PRIMARY KEY, NAME STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'CREATED', CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_REGISTRY ( HARNESS_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_RESULTS ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, OUTPUT VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_RUNS ( RUN_ID STRING PRIMARY KEY, HARNESS_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEST_HARNESS_RUNS ( RUN_ID STRING PRIMARY KEY, INJ_ID STRING, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEST_RUN_HISTORY ( RUN_ID STRING PRIMARY KEY, FIXTURE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEST_VECTORS ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EMBEDDING VECTOR, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TEXT_EXTRACTIONS ( EXTRACTION_ID STRING PRIMARY KEY, PDF_ID STRING, EXTRACTED_TEXT CLOB, LANGUAGE STRING, EXTRACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEXT_EXTRACTION_INDEX ( IDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, EXTRACTED_TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEXT_EXTRACTION_JOBS ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TEXT_EXTRACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, EXTRACTED_FIELDS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEXT_NORM_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TEXT_NORM_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, INPUT_REF STRING, OUTPUT_REF STRING, STATUS STRING, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THEME_SETTINGS ( THEME_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_PEM CLOB, IMPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_INTEGRATIONS ( INTEGRATION_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_INTEGRATION_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_POLICY_DISCLOSURES ( DISC_ID STRING PRIMARY KEY, TENANT_ID STRING, DISCLOSURE_JSON VARIANT, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_SHARING_AGREEMENTS ( AGR_ID STRING PRIMARY KEY, PARTY_NAME STRING, AGREEMENT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_SYNC_LOGS ( LOG_ID STRING PRIMARY KEY, SYNC_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRDPARTY_SYNC_QUEUE ( SYNC_ID STRING PRIMARY KEY, PARTNER_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, PARTNER_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER STRING, ACTION STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, PROVIDER STRING, RESULTS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ASSURANCE_AUDITS ( AUDIT_ID STRING PRIMARY KEY, DOC_ID STRING, RESULT JSON, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ASSURANCE_DOCS ( DOC_ID STRING PRIMARY KEY, PARTNER_ID STRING, DOC_META VARIANT, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_FINDINGS ( FINDING_ID STRING PRIMARY KEY, RUN_ID STRING, SEVERITY STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, PARTY_REF STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_INDEX ( AUDIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AUDIT_PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_INDEX_6269 ( AUDIT_ID STRING PRIMARY KEY, PARTY_REF STRING, AUDIT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_LOGS ( LOG_ID STRING PRIMARY KEY, PROVIDER_ID STRING, AUDIT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_LOGS_6270 ( LOG_ID STRING PRIMARY KEY, AUDIT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_REQUESTS ( REQ_ID STRING PRIMARY KEY, PARTY_REF STRING, SCOPE VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, REPORT_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_AUDIT_RUNS ( RUN_ID STRING PRIMARY KEY, PARTY_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, PARTY_REF STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CERTIFICATIONS ( CERT_ID STRING PRIMARY KEY, PROVIDER STRING, CERT_JSON VARIANT, ISSUED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CERTIFICATION_INDEX ( IDX_ID STRING PRIMARY KEY, PROVIDER STRING, CERTIFICATIONS VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CERT_REVIEW_LOG ( LOG_ID STRING PRIMARY KEY, CERT_ID STRING, REVIEWER STRING, RESULT VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CHECKS ( CHECK_ID STRING PRIMARY KEY, SIGNER_ID STRING, PROVIDER STRING, RESULT VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_COMPLIANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, CERT_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_COMPLIANCE_DOCS ( DOC_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LOCATION STRING, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONNECTOR_CONFIGS ( CONFIG_ID STRING PRIMARY KEY, PROVIDER STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONSENT_INDEX ( IDX_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENTS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, PARTNER_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PROVIDER STRING, CONSENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PARTNER_ID STRING, BODY CLOB, EFFECTIVE_FROM TIMESTAMP_LTZ, EFFECTIVE_TO TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONTRACTS ( CONTRACT_ID STRING PRIMARY KEY, PROVIDER STRING, CONTRACT_JSON VARIANT, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONTRACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CONTRACT_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REVIEWER STRING, RESULT JSON, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_REVOKE_QUEUE ( Q_ID STRING PRIMARY KEY, CONSENT_ID STRING, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_REVOKE_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_SHARING ( SHARING_ID STRING PRIMARY KEY, TENANT_ID STRING, PROVIDER STRING, SCOPE VARIANT, AGREED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_SHARING_LOGS ( LOG_ID STRING PRIMARY KEY, CONSENT_ID STRING, TARGET_PROVIDER STRING, SHARED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, REQUEST_JSON VARIANT, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_SHARING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_TRANSFERS ( TRANSFER_ID STRING PRIMARY KEY, SOURCE_REF STRING, DESTINATION_REF STRING, META VARIANT, INITIATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_DATA_TRANSFERS ( TRANS_ID STRING PRIMARY KEY, TENANT_ID STRING, DESTINATION JSON, DATA_SCOPE VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_EVENTS_03 ( EVENT_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_EVIDENCE ( EVID_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER STRING, LOCATION STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_EXPORTS_06 ( EXPORT_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, PAYLOAD VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_FOLLOWUPS ( FOLLOW_ID STRING PRIMARY KEY, ASSESS_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, STATUS STRING, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INCIDENTS ( INCIDENT_ID STRING PRIMARY KEY, VEND_ID STRING, DESCRIPTION CLOB, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INCIDENT_RESPONSES ( RESP_ID STRING PRIMARY KEY, INCIDENT_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATIONS ( INTEGRATION_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATIONS_03 ( INTEGRATION_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATION_ERRORS ( ERR_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, ERROR_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATION_EVENTS ( EVT_ID STRING PRIMARY KEY, INTEGRATION_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATION_HEALTH ( HEALTH_ID STRING PRIMARY KEY, INTEGRATION_REF STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATION_INDEX ( IDX_ID STRING PRIMARY KEY, INTEGRATION_NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_INTEGRATION_REGISTRY ( INTEGRATION_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ISSUE_TRACKER ( ISSUE_ID STRING PRIMARY KEY, PROVIDER STRING, DESCRIPTION CLOB, STATUS STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_LEGAL_NOTICES ( NOTICE_ID STRING PRIMARY KEY, PROVIDER STRING, NOTICE_TEXT CLOB, PUBLISHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_MONITORING_ALERTS ( ALERT_ID STRING PRIMARY KEY, PARTY_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, WF_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_ONBOARDING_WORKFLOW ( WF_ID STRING PRIMARY KEY, PROVIDER STRING, STEPS VARIANT, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_PRIVACY_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RESULTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_PROVIDER_CATALOG ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, TYPE STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REMEDIATION_JOBS ( JOB_ID STRING PRIMARY KEY, RISK_ID STRING, ACTIONS VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REMEDIATION_QUEUE ( Q_ID STRING PRIMARY KEY, TP_ID STRING, ACTION_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REMEDIATION_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REVIEW_QUEUE ( Q_ID STRING PRIMARY KEY, PROVIDER STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_REVIEW_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ACTIONS ( ACTION_ID STRING PRIMARY KEY, RISK_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ALERTS ( ALERT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SEVERITY STRING, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, PARTY_REF STRING, SCORE NUMBER, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, RISK_ID STRING, OUTCOME JSON, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, RISK_ID STRING, REPORT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, RISK_ID STRING, RESULTS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, TP_ID STRING, FINDINGS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_MITIGATIONS ( MIT_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ACTION_JSON VARIANT, SCHEDULED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_REGISTER ( RISK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RISK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_REGISTRY ( RISK_ID STRING PRIMARY KEY, PARTNER_ID STRING, RISK_JSON VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_REGISTRY ( RISK_ID STRING PRIMARY KEY, PARTY_REF STRING, RISK_JSON VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_REGISTRY ( RISK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RISK_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_REGISTRY ( TP_ID STRING PRIMARY KEY, NAME STRING, RISK_PROFILE VARIANT, LAST_ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, PARTY_REF STRING, SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, PROVIDER STRING, RISK_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RISK_SCORE NUMBER, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_SHARING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, PROVIDER STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_SLA_REPORTS ( REPORT_ID STRING PRIMARY KEY, PROVIDER STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_TOKEN_REGISTRY ( TOKEN_ID STRING PRIMARY KEY, PROVIDER STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_VERIFICATIONS_07 ( VERIF_ID STRING PRIMARY KEY, BUNDLE_ID STRING, PROVIDER STRING, RESULT VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_WEBHOOK_REGISTRY ( WEBHOOK_ID STRING PRIMARY KEY, PROVIDER_ID STRING, ENDPOINT STRING, SECRET_HASH STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_ACTIONS ( TA_ID STRING PRIMARY KEY, SCORE_ID STRING, ACTION STRING, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THREAT_ALERTS ( ALERT_ID STRING PRIMARY KEY, THREAT_ID STRING, STATUS STRING DEFAULT 'OPEN', RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THREAT_ALERTS_14 ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, TYPE STRING, DETAILS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_BLACKLIST ( BL_ID STRING PRIMARY KEY, SUBJECT STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_DETECTION_ACKS ( ACK_ID STRING PRIMARY KEY, ALERT_ID STRING, ACKED_BY STRING, ACKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES CLOB );

CREATE OR REPLACE TABLE DOCGEN.THREAT_DETECTION_ALERTS ( ALERT_ID STRING PRIMARY KEY, SOURCE STRING, SEVERITY STRING, PAYLOAD VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_DETECTION_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, FINDINGS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_DETECTION_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_EVENTS ( EVENT_ID STRING PRIMARY KEY, FEED_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_FEED ( THREAT_ID STRING PRIMARY KEY, SOURCE STRING, DETAILS VARIANT, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE_URI STRING, LAST_FETCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_FEED_11 ( FEED_ID STRING PRIMARY KEY, SOURCE STRING, DETAILS VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_FEED_EVENTS ( TFE_ID STRING PRIMARY KEY, FEED_ID STRING, EVENT_JSON VARIANT, INGESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_HUNTING_FINDINGS ( FIND_ID STRING PRIMARY KEY, RUN_ID STRING, DETAILS VARIANT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_HUNTING_RUNS ( RUN_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_ALERTS ( ALERT_ID STRING PRIMARY KEY, FEED_ID STRING, TARGET_REF STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_ALERT_RESULTS ( RES_ID STRING PRIMARY KEY, RULE_ID STRING, MATCHES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, FEED_ID STRING, INDICATOR STRING, DETAILS VARIANT, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_ENTRIES ( ENTRY_ID STRING PRIMARY KEY, FEED_ID STRING, IOC VARIANT, SEVERITY STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, LAST_FETCHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, LAST_PULLED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, FEED_JSON VARIANT, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, LAST_POLL TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, LAST_POLLED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, LAST_UPDATED TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, LAST_UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS ( FEED_ID STRING PRIMARY KEY, NAME STRING, SOURCE VARIANT, LAST_SYNC TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_FEEDS_06 ( FEED_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_HITS ( HIT_ID STRING PRIMARY KEY, FEED_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_HITS ( HIT_ID STRING PRIMARY KEY, FEED_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_HITS ( HIT_ID STRING PRIMARY KEY, FEED_ID STRING, SUBJECT_REF STRING, HIT_JSON VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_HITS ( HIT_ID STRING PRIMARY KEY, FEED_ID STRING, TARGET_REF STRING, DETAILS VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_HITS_06 ( HIT_ID STRING PRIMARY KEY, FEED_ID STRING, TARGET_REF STRING, DETAILS VARIANT, HIT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_INDICATORS ( IND_ID STRING PRIMARY KEY, FEED_ID STRING, INDICATOR JSON, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_MATCHES ( MATCH_ID STRING PRIMARY KEY, FEED_ID STRING, SUBJECT_REF STRING, MATCH_JSON VARIANT, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_SCORES ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, ASSESSED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_SIGNER_BLACKLIST ( BL_ID STRING PRIMARY KEY, SIGNER_ID STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_SIGNER_FLAGS ( FLG_ID STRING PRIMARY KEY, SIGNER_ID STRING, FLAG_KEY STRING, DETAILS VARIANT, FLAGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_INTEL_TAXONOMY ( TAX_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_MATCHES ( MATCH_ID STRING PRIMARY KEY, INDICATOR STRING, MATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THREAT_MODELS_12 ( MODEL_ID STRING PRIMARY KEY, NAME STRING, DESCRIPTION STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_SCORES ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_SCORES_13 ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, REASON VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THREAT_SIGNALS ( SIGNAL_ID STRING PRIMARY KEY, SUBJECT STRING, SIGNAL_TYPE STRING, SCORE FLOAT, DETAILS VARIANT, SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THRESHOLD_ACTIONS ( ACTION_ID STRING PRIMARY KEY, METRIC_NAME STRING, THRESHOLD VARIANT, ACTION VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THRESHOLD_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, THRESHOLD_ID STRING, ACCOUNT_ID STRING, METRIC_NAME STRING, VALUE NUMBER, NOTIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THRESHOLD_VIOLATION_ALERTS ( ALERT_ID STRING PRIMARY KEY, THRESH_ID STRING, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_COUNTERS ( CTR_ID STRING PRIMARY KEY, PROFILE_ID STRING, SUBJECT_REF STRING, COUNT INT, WINDOW_START TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_EVENTS ( EVT_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_EVENTS ( EVT_ID STRING PRIMARY KEY, RULE_ID STRING, TARGET_REF STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_EVENTS_10 ( EVENT_ID STRING PRIMARY KEY, RULE_ID STRING, KEY STRING, ACTION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_LOGS_6353 ( LOG_ID STRING PRIMARY KEY, USAGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_PROFILE_USAGE_6352 ( USAGE_ID STRING PRIMARY KEY, PROFILE_ID STRING, CALL_COUNT INT DEFAULT 0, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THROTTLE_RULES ( RULE_ID STRING PRIMARY KEY, TARGET STRING, LIMITS JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THROUGHPUT_BY_HOUR ( HOUR_ID STRING PRIMARY KEY, COMPONENT STRING, HOUR_START TIMESTAMP_LTZ, CALLS INT, ERRORS INT );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_GENERATION_JOBS ( JOB_ID STRING PRIMARY KEY, INPUT_LOCATION STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_GENERATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, THUMB_LOCATION STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_INDEX ( THUMB_ID STRING PRIMARY KEY, BUNDLE_ID STRING, URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_INDEX ( THUMB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, PAGE INT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_STORE ( THUMB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, LOCATION STRING, WIDTH INT, HEIGHT INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THUMBNAIL_STORE ( THUMB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, SIZE STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TICKET_ACTIVITY_LOGS ( LOG_ID STRING PRIMARY KEY, TICKET_ID STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TICKET_UPDATES_05 ( UPDATE_ID STRING PRIMARY KEY, TICKET_ID STRING, AUTHOR STRING, UPDATE_TEXT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TIMELINE_EVENTS ( EVENT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TIMEPROOF_INDEX ( TP_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TIMESTAMP_PROOF STRING, ANCHOR_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TIMESTAMPS_06 ( TS_ID STRING PRIMARY KEY, BUNDLE_ID STRING, TA_ID STRING, TS_TOKEN VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TIMESTAMP_AUTHORITIES_06 ( TA_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.TIME_SERIES_METRICS_06 ( METRIC_ID STRING PRIMARY KEY, NAME STRING, TS TIMESTAMP_LTZ, VALUE FLOAT, TAGS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TIME_TO_RESTORE_METRICS ( METRIC_ID STRING PRIMARY KEY, TEAM STRING, AVG_MIN NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TIME_TO_SIGN_METRICS ( MET_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, MEDIAN_SECONDS NUMBER, P95_SECONDS NUMBER, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TLS_CERT_INDEX ( CERT_IDX_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, CERT_FINGERPRINT STRING, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TLS_CERT_ROTATION ( ROT_ID STRING PRIMARY KEY, COMPONENT STRING, EXPIRES_AT TIMESTAMP_LTZ, ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TMP_SIG_EVENT ( EVENT_ID STRING, EVENT_PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TOGGLE_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, TOGGLE_ID STRING, SUBJECT_REF STRING, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESULT BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_AUDIT ( TA_ID STRING PRIMARY KEY, TOKEN_ID STRING, ACTION STRING, DETAILS VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_BLACKLIST ( BL_ID STRING PRIMARY KEY, TOKEN_HASH STRING, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_BLACKLIST ( BL_ID STRING PRIMARY KEY, TOKEN_HASH STRING, BLACKLISTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_BLACKLIST ( BL_ID STRING PRIMARY KEY, TOKEN_HASH STRING, REASON STRING, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_BLACKLIST_CHECKS ( CHECK_ID STRING PRIMARY KEY, TOKEN_HASH STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), FOUND BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATIONS ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING, REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATIONS_06 ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REVOKED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATIONS_12 ( REVOC_ID STRING PRIMARY KEY, TOKEN_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_INDEX_6238 ( REV_ID STRING PRIMARY KEY, TOKEN_HASH STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_JOBS ( JOB_ID STRING PRIMARY KEY, TOKEN_ID STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_LOGS_6239 ( LOG_ID STRING PRIMARY KEY, REV_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_QUEUE ( REQ_ID STRING PRIMARY KEY, TOKEN_ID STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_REVOCATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_ROTATION_HISTORY ( ROT_ID STRING PRIMARY KEY, TOKEN_REF STRING, ROTATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.TOKEN_USAGE ( USAGE_ID STRING PRIMARY KEY, TOKEN_ID STRING, USED_BY STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TOPIC_TREND_METRICS ( METRIC_ID STRING PRIMARY KEY, TOPIC_ID STRING, TREND_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TOS_VERSIONS ( VERSION_ID STRING PRIMARY KEY, BODY CLOB, EFFECTIVE_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRACING_SUMMARIES ( SUM_ID STRING PRIMARY KEY, TRACE_ID STRING, SUMMARY JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRACKING_CONSENT_REGISTER ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRACKING_CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.TRAFFIC_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, PATTERN_ID STRING, DETECTED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRAFFIC_FORECAST_RESULTS ( RES_ID STRING PRIMARY KEY, SERVICE_REF STRING, FORECAST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAFFIC_PATTERN_INDEX ( IDX_ID STRING PRIMARY KEY, PATTERN_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRAFFIC_SHAPING_EVENTS ( EVENT_ID STRING PRIMARY KEY, POLICY_ID STRING, METRICS VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAFFIC_SHAPING_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, MODULE STRING, ASSIGNEE STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DUE_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_COMPLETION_LOGS ( LOG_ID STRING PRIMARY KEY, TRAIN_ID STRING, USER_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_CONTENT_REGISTRY ( CONTENT_ID STRING PRIMARY KEY, NAME STRING, CONTENT JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_CONTENT_USAGE ( USAGE_ID STRING PRIMARY KEY, CONTENT_ID STRING, OPERATOR_REF STRING, USED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_CATALOG ( DATA_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, LOCATION STRING, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, MODEL_ID STRING, LOCATION STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_LINEAGE ( LINEAGE_ID STRING PRIMARY KEY, SOURCE_REF STRING, TRANSFORM JSON, LINKED_MODEL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_REGISTRY ( DATA_ID STRING PRIMARY KEY, NAME STRING, SOURCE JSON, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_REGISTRY ( DATA_ID STRING PRIMARY KEY, SOURCE_REF STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_DATA_USAGE ( USG_ID STRING PRIMARY KEY, DATA_ID STRING, MODEL_ID STRING, USAGE_METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_FEEDBACK_01 ( FEEDBACK_ID STRING PRIMARY KEY, MODEL_ID STRING, INPUT VARIANT, RATING INT, COMMENTS STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_FEEDBACK_12 ( FB_ID STRING PRIMARY KEY, JOB_ID STRING, USER STRING, FEEDBACK TEXT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_HISTORY ( TH_ID STRING PRIMARY KEY, ASSIGN_ID STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), SCORE NUMBER );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_JOBS_12 ( JOB_ID STRING PRIMARY KEY, MODEL_ID STRING, CONFIG VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, FINISHED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_JOB_QUEUE ( JOB_ID STRING PRIMARY KEY, DATA_REF STRING, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_LOGS_6080 ( LOG_ID STRING PRIMARY KEY, REC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_MATERIAL_FEEDBACK ( FB_ID STRING PRIMARY KEY, CONTENT_ID STRING, OPERATOR_REF STRING, FEEDBACK JSON, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_MATERIAL_REGISTRY ( MAT_ID STRING PRIMARY KEY, NAME STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_RECORD_LOGS_6095 ( LOG_ID STRING PRIMARY KEY, TRAIN_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRAINING_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRANSACTIONAL_AUDIT_ANOMALIES ( ANOM_ID STRING PRIMARY KEY, IDX_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSACTIONAL_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, TX_REF STRING, PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSACTION_AUDIT_DETAILS ( DETAIL_ID STRING PRIMARY KEY, IDX_ID STRING, PAYLOAD VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSACTION_AUDIT_INDEX ( IDX_ID STRING PRIMARY KEY, TX_REF STRING, TX_TYPE STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSCRIPTION_JOBS ( JOB_ID STRING PRIMARY KEY, AUDIO_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRANSCRIPTION_JOBS ( JOB_ID STRING PRIMARY KEY, AUDIO_REF STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSCRIPTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT CLOB, CONFIDENCE NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSCRIPTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TEXT CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSCRIPTS ( TRANSCRIPT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ACTOR STRING, TEXT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSFER_CONTROL_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, TRANSFER_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSFORMER_REGISTRY ( TRANSFORMER_ID STRING PRIMARY KEY, NAME STRING, LANGUAGE STRING, ENTRYPOINT STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATIONS ( TRANS_ID STRING PRIMARY KEY, RESOURCE_REF STRING, LOCALE STRING, CONTENT CLOB, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_CACHE ( CACHE_ID STRING PRIMARY KEY, SOURCE_TEXT STRING, LOCALE STRING, TRANSLATED_TEXT STRING, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_FEEDBACK_QUEUE ( Q_ID STRING PRIMARY KEY, RES_ID STRING, FEEDBACK CLOB, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_LANG STRING, TARGET_LANG STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_JOBS_08 ( JOB_ID STRING PRIMARY KEY, SOURCE_LANG STRING, TARGET_LANG STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_JOBS_6047 ( JOB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LANG STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_LOGS ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, OUTPUT_URL STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_LOGS_6048 ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_MEMORY_INDEX ( MEM_ID STRING PRIMARY KEY, SOURCE_TEXT STRING, TRANSLATION STRING, LOCALE_PAIR STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_MODEL_REGISTRY ( MODEL_ID STRING PRIMARY KEY, NAME STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_PROVIDER_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, LATENCY_MS NUMBER, ERR_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_PROVIDER_METRICS ( MET_ID STRING PRIMARY KEY, PROVIDER_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_PROV_ACCOUNTS ( ACCT_ID STRING PRIMARY KEY, PROVIDER STRING, CREDENTIAL_META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_QUALITY_CHECKS ( CHECK_ID STRING PRIMARY KEY, RUN_ID STRING, METRICS VARIANT, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_QUALITY_METRICS ( MET_ID STRING PRIMARY KEY, RES_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_QUALITY_SCORES ( SCORE_ID STRING PRIMARY KEY, RES_ID STRING, SCORE NUMBER, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, PDF_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_REQUEST_QUEUE ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, TARGET_LANG STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_REQUEST_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, PROVIDER_ID STRING, RESULT JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, TRANSLATED_TEXT CLOB, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_RESULTS_08 ( RESULT_ID STRING PRIMARY KEY, JOB_ID STRING, RESULT VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATION_USAGE ( USAGE_ID STRING PRIMARY KEY, PROVIDER STRING, CHAR_COUNT INT, COST NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATOR_PERF_STATS ( STAT_ID STRING PRIMARY KEY, PROVIDER STRING, LATENCY_MS NUMBER, ERR_RATE NUMBER, SAMPLE_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRANSLATOR_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAGE_OUTCOME_INDEX ( OUT_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAGE_PRIORITY_RULES ( RULE_ID STRING PRIMARY KEY, SCOPE VARIANT, PRIORITY INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_ACCOUNT_METRICS ( MET_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_ACCOUNT_REGISTRY ( TRIAL_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDS_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_ACCOUNT_REGISTRY ( TRIAL_ID STRING PRIMARY KEY, TENANT_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_EVENTS ( EVENT_ID STRING PRIMARY KEY, TENANT_ID STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_EVENTS ( EVT_ID STRING PRIMARY KEY, TRIAL_ID STRING, EVENT JSON, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_EVENTS ( EVT_ID STRING PRIMARY KEY, TRIAL_ID STRING, TENANT_ID STRING, EVENT JSON, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_METRICS ( METRIC_ID STRING PRIMARY KEY, TENANT_ID STRING, CONVERSION_RATE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_METRICS ( MET_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.TRIAL_CONVERSION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRIGGERED_ALERTS ( ALERT_ID STRING PRIMARY KEY, RULE_ID STRING, PAYLOAD VARIANT, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_ANCHOR_REPO ( ANCHOR_ID STRING PRIMARY KEY, ANCHOR_JSON VARIANT, ADDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.TRUST_ASSURANCE_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_ASSURANCE_CHECKS ( CHECK_ID STRING PRIMARY KEY, CERT_ID STRING, RESULT JSON, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_BAND_TRANSITION_LOGS ( LOG_ID STRING PRIMARY KEY, ASSIGN_ID STRING, FROM_BAND STRING, TO_BAND STRING, TRANSITIONED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_HISTORY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SNAPSHOT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_LEVELS ( TL_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LEVEL STRING, SOURCE STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_POLICY_CATALOG ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_AGGREGATES ( AGG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AVG_TRUST FLOAT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_AGGREGATES ( AGG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, AGG_PAYLOAD VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_ALERTS ( ALERT_ID STRING PRIMARY KEY, SIGNER_ID STRING, THRESHOLD NUMBER, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_COMPONENTS ( COMP_ID STRING PRIMARY KEY, TS_ID STRING, NAME STRING, VALUE NUMBER, ADDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_FACTORS ( FACTOR_ID STRING PRIMARY KEY, SCORE_ID STRING, FACTOR_KEY STRING, FACTOR_VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SIGNER_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_HISTORY ( HIST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TRUST_SCORE_HISTORY ( H_ID STRING PRIMARY KEY, SCORE_ID STRING, PREV_SCORE NUMBER, NEW_SCORE NUMBER, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TWO_FACTOR_CHALLENGES ( CHALLENGE_ID STRING PRIMARY KEY, SIGNER_ID STRING, METHOD STRING, STATUS STRING DEFAULT 'PENDING', EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TWO_FACTOR_RESULTS ( RES_ID STRING PRIMARY KEY, CHALLENGE_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TWO_FA_ENFORCEMENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TWO_FA_EVENT_LOGS ( LOG_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METHOD STRING, SUCCESS BOOLEAN, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.U2F_KEY_REGISTRY ( KEY_ID STRING PRIMARY KEY, USER_REF STRING, KEY_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_CHANGE_HISTORY ( CH_ID STRING PRIMARY KEY, CHANGE_JSON VARIANT, CHANGED_BY STRING, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_CONFIG_13 ( CONFIG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_CUSTOMIZATION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CUSTOM_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.UI_CUSTOMIZATION_REGISTRY ( CUSTOM_ID STRING PRIMARY KEY, TENANT_ID STRING, CONFIG VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_FEATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, KEY STRING, ENABLED BOOLEAN DEFAULT FALSE, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_LOCALIZATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.UI_LOCALIZATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCALES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UI_THEMES_13 ( THEME_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, THEME VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UNLOCK_HISTORY ( UNLOCK_ID STRING PRIMARY KEY, LOCK_ID STRING, UNLOCKED_BY STRING, UNLOCKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.UNSUBSCRIBE_REQUESTS ( REQ_ID STRING PRIMARY KEY, CONTACT_ID STRING, CHANNEL STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UNSUBSCRIBE_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UPDATE_DEPLOYMENTS ( DEPLOY_ID STRING PRIMARY KEY, COMPONENT STRING, VERSION STRING, DEPLOYED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DEPLOYED_BY STRING );

CREATE OR REPLACE TABLE DOCGEN.UPDATE_DEPLOY_ERRORS ( ERR_ID STRING PRIMARY KEY, DEPLOY_ID STRING, ERROR_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UPGRADE_MIGRATION_JOBS ( JOB_ID STRING PRIMARY KEY, DESCRIPTION CLOB, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.UPGRADE_MIGRATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UPTIME_MONITORING_EVENTS ( EVT_ID STRING PRIMARY KEY, SERVICE_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USAGE_AGGREGATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, WINDOW JSON, STATUS STRING DEFAULT 'PENDING', STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_AGGREGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, AGG_PAYLOAD VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ALARMS ( ALARM_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, METRIC STRING, THRESHOLD VARIANT, NOTIFIED BOOLEAN DEFAULT FALSE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ALARM_LOGS ( LOG_ID STRING PRIMARY KEY, ALARM_ID STRING, TRIGGERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ALERT_LOGS_6367 ( LOG_ID STRING PRIMARY KEY, ALERT_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ANOMALY_ACTIONS ( ACTION_ID STRING PRIMARY KEY, ALERT_ID STRING, ACTION_JSON VARIANT, EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ANOMALY_ALERTS ( ALERT_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ANOMALY_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, ANOMALIES VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_ANOMALY_RUNS ( RUN_ID STRING PRIMARY KEY, PROFILE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USAGE_BASELINE_PROFILES ( PROFILE_ID STRING PRIMARY KEY, TENANT_ID STRING, METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_CHARGEBACK_RESULTS ( RES_ID STRING PRIMARY KEY, RUN_ID STRING, RESULTS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_CHARGEBACK_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_CHARGEBACK_RUNS ( RUN_ID STRING PRIMARY KEY, RULE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USAGE_COSTING_07 ( COST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, COST_BREAKDOWN VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USAGE_COST_ALLOCATION ( ALLOC_ID STRING PRIMARY KEY, TENANT_ID STRING, COST_JSON VARIANT, ALLOCATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_COST_BREAKDOWNS ( BREAK_ID STRING PRIMARY KEY, RUN_ID STRING, ACCOUNT_ID STRING, COST_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_CREDITS ( CREDIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, CREDITS NUMBER, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USAGE_CREDIT_ADJUSTMENTS ( ADJ_ID STRING PRIMARY KEY, TENANT_ID STRING, AMOUNT NUMBER, REASON CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_EVENTS_STAGE ( EVENT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FEATURE_KEY STRING, UNITS NUMBER, RAW_EVENT VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP );

CREATE OR REPLACE TABLE DOCGEN.USAGE_EVENT_SAMPLES ( SAMPLE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_EVENT_SCHEMA_VERSIONS ( SV_ID STRING PRIMARY KEY, SCHEMA_JSON VARIANT, VERSION_NUM INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_FORECASTS ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, FORECAST_MONTH DATE, ESTIMATE VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_FORECASTS_06 ( FORECAST_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PREDICTION VARIANT, HORIZON STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_HEATMAP_TILES ( TILE_ID STRING PRIMARY KEY, SCOPE VARIANT, DATA VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_INBOUND_ERRORS ( ERROR_ID STRING PRIMARY KEY, RAW_PAYLOAD VARIANT, ERROR_MSG STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_INGEST_FAILURES ( FAILURE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, ERROR VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_QUOTA_CONSUMPTION ( CONSUME_ID STRING PRIMARY KEY, QUOTA_ID STRING, PERIOD_START DATE, PERIOD_END DATE, USAGE_COUNT NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_QUOTA_DEFINITIONS ( QUOTA_ID STRING PRIMARY KEY, TENANT_ID STRING, FEATURE_NAME STRING, LIMIT_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, RUN_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USAGE_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, DISCREPANCIES VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_RETENTION_POLICIES ( POLICY_ID STRING PRIMARY KEY, TENANT_ID STRING, RETENTION_DAYS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_SIMULATION_JOBS ( JOB_ID STRING PRIMARY KEY, TENANT_ID STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USAGE_SIMULATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USAGE_SUMMARY_11 ( SUMMARY_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_CERTIFICATES ( CERT_ID STRING PRIMARY KEY, USER_REF STRING, CERT_META VARIANT, ISSUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_CERTIFICATE_EVENTS ( EVENT_ID STRING PRIMARY KEY, CERT_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RESOURCE_REF STRING, REASON CLOB, STATUS STRING DEFAULT 'OPEN', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_REQUEST_ACTIONS ( ACTION_ID STRING PRIMARY KEY, REQ_ID STRING, ACTION_JSON VARIANT, PERFORMED_BY STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_REVIEW_LOGS_6101 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACCESS_REVIEW_QUEUE_6100 ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY ( ACTIVITY_ID STRING PRIMARY KEY, USER_ID STRING, ACTION STRING, ENTITY_REF STRING, ACTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY_COUNTS VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_AGGREGATES ( AGG_ID STRING PRIMARY KEY, USER_REF STRING, AGG_JSON VARIANT, AGG_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_CACHE_07 ( CACHE_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY VARIANT, CACHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_EVENTS ( EVT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_HEATMAP ( HM_ID STRING PRIMARY KEY, SUBJECT_REF STRING, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ, BUCKETS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_INDEX ( IDX_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY JSON, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_LEDGER ( LEDGER_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_SESSIONS ( SESSION_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY_JSON VARIANT, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_SEEN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SNAP_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_STREAM ( STREAM_ID STRING PRIMARY KEY, USER_REF STRING, ACTION STRING, PAYLOAD VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_STREAMS ( STREAM_ID STRING PRIMARY KEY, SUBJECT_REF STRING, ACTIVITY_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_SUMMARIES ( SUMMARY_ID STRING PRIMARY KEY, USER_REF STRING, SUMMARY_JSON VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ACTIVITY_SUMMARY ( SUM_ID STRING PRIMARY KEY, USER_REF STRING, ACTIVITY_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_AGENTS ( UA_ID STRING PRIMARY KEY, USER_AGENT STRING, NORMALIZED VARIANT, FIRST_SEEN TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_AGENT_INDEX ( IDX_ID STRING PRIMARY KEY, USER_AGENT STRING, META VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ALERTS_07 ( ALERT_ID STRING PRIMARY KEY, USER_REF STRING, TITLE STRING, BODY CLOB, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ALERT_READS_07 ( READ_ID STRING PRIMARY KEY, ALERT_ID STRING, USER_REF STRING, READ_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PROFILE JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_BEHAVIOR_PROFILES ( PROFILE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PROFILE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_BOOKMARKS_07 ( BOOKMARK_ID STRING PRIMARY KEY, USER_REF STRING, REF STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AGGREGATES ( AGG_ID STRING PRIMARY KEY, TENANT_ID STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_JSON VARIANT, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_TYPE STRING, GRANTED BOOLEAN, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT ( UCA_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_AUDIT_V2 ( AUDIT_ID STRING PRIMARY KEY, SIGNER_ID STRING, CONSENT_JSON VARIANT, ACTION STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_CACHE ( CACHE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, LAST_SEEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_EVENTS ( EVENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_ID STRING, EVENT_TYPE STRING, EVENT_PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_HISTORY ( HISTORY_ID STRING PRIMARY KEY, CONSENT_ID STRING, ACTION STRING, BY_USER STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_INDEX_6144 ( CONS_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_LOG ( CONSENT_LOG_ID STRING PRIMARY KEY, SIGNER_ID STRING, TC_ID STRING, VERSION_NUMBER INT, CONSENTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_LOGS ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_LOGS ( LOG_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCOPE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_TYPE STRING, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_RECORDS ( CONSENT_ID STRING PRIMARY KEY, USER_REF STRING, SCOPE VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_REGISTRY ( CONSENT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, GRANTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_REPORTS ( RPT_ID STRING PRIMARY KEY, TENANT_ID STRING, SUMMARY VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_REVOCATIONS ( REV_ID STRING PRIMARY KEY, CONSENT_ID STRING, REVOKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), REASON CLOB );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_STORE ( CONSENT_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_JSON VARIANT, GIVEN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_SUMMARY_MV ( MV_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CONSENTS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_TOKENS_07 ( TOKEN_ID STRING PRIMARY KEY, USER_REF STRING, CONSENT_SCOPE STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_CONSENT_VERSIONS ( VERSION_ID STRING PRIMARY KEY, CONSENT_ID STRING, VERSION_NUMBER INT, BODY CLOB, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_ERASURE_JOBS ( JOB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_ERASURE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ACTIONS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_EXPORTS ( EXPORT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, LOCATION STRING, STATUS STRING, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_EXPORT_JOBS ( JOB_ID STRING PRIMARY KEY, USER_REF STRING, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, EXPORT_ID STRING, FILE_LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DATA_EXPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, LOCATION STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DEVICES ( DEVICE_ID STRING PRIMARY KEY, USER_REF STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DEVICES_13 ( DEVICE_ID STRING PRIMARY KEY, USER_ID STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_DEVICE_AUTHN_6242 ( AUTHN_ID STRING PRIMARY KEY, USER_REF STRING, DEVICE_ID STRING, AUTHN_METHOD STRING, AUTHN_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_DEVICE_LINK_HISTORY ( LINK_H_ID STRING PRIMARY KEY, USER_REF STRING, DEVICE_ID STRING, LINKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), UNLINKED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_DEVICE_REGISTRATION_LOGS ( LOG_ID STRING PRIMARY KEY, DEVICE_ID STRING, USER_REF STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_DOCUMENT_LABELS ( LABEL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, LABEL JSON, LABELED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK ( FB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, COMMENTS STRING, RATING INT, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK ( FB_ID STRING PRIMARY KEY, USER_ID STRING, CATEGORY STRING, COMMENTS STRING, RATING INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK ( FB_ID STRING PRIMARY KEY, USER_REF STRING, TARGET_REF STRING, RATING INT, COMMENTS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK ( FEEDBACK_ID STRING PRIMARY KEY, REQUEST_ID STRING, USER_ID STRING, RATING INT, COMMENT STRING, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK_ANALYTICS ( ANALYTIC_ID STRING PRIMARY KEY, SUBJECT_REF STRING, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK_INDEX ( FB_ID STRING PRIMARY KEY, SUBJECT_REF STRING, DOCUMENT_ID STRING, RATING INT, FEEDBACK_TEXT CLOB, SUBMITTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK_INDEX_6136 ( FB_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, USER_REF STRING, FEEDBACK_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK_QUEUE ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SUBJECT_REF STRING, FEEDBACK_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_FEEDBACK_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, ANALYSIS JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATIONS ( NOTIF_ID STRING PRIMARY KEY, USER_REF STRING, CHANNEL STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATION_LOGS_6063 ( LOG_ID STRING PRIMARY KEY, PREF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, CHANNELS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATION_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATION_PREFERENCES_6062 ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFERENCES JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_NOTIFICATION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SUBJECT_REF STRING, TOKEN_HASH STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_OPTOUTS ( OPTOUT_ID STRING PRIMARY KEY, USER_REF STRING, REASON STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_OPTOUT_REGISTRY ( OPTOUT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, CATEGORY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PREF JSON, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_ID STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES_04 ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES_07 ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREF_KEY STRING, PREF_VALUE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES_13 ( PREF_ID STRING PRIMARY KEY, USER_ID STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PREFERENCES_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PREF_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVACY_EVENTS ( UPE_ID STRING PRIMARY KEY, USER_REF STRING, EVENT_TYPE STRING, DETAILS VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVACY_LOGS_6280 ( LOG_ID STRING PRIMARY KEY, REQ_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVACY_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREF_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVACY_REQUESTS_6279 ( REQ_ID STRING PRIMARY KEY, USER_REF STRING, REQUEST_TYPE STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVACY_SETTINGS ( UPS_ID STRING PRIMARY KEY, USER_REF STRING, SETTINGS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVILEGE_AUDIT ( AUDIT_ID STRING PRIMARY KEY, SUBJECT_REF STRING, PRIVILEGE STRING, ACTION STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVILEGE_CHANGES ( CHANGE_ID STRING PRIMARY KEY, USER_REF STRING, OLD_PRIVS VARIANT, NEW_PRIVS VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVILEGE_HISTORIES ( HIST_ID STRING PRIMARY KEY, USER_REF STRING, PRIVILEGE_JSON VARIANT, CHANGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIVILEGE_REVIEWS ( REVIEW_ID STRING PRIMARY KEY, USER_REF STRING, REVIEW_JSON VARIANT, REVIEWED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIV_ESCALATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, SUBJECT_REF STRING, REQUESTOR STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PRIV_ESCALATION_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, DECISION STRING, DECIDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PROFILES ( USER_REF STRING PRIMARY KEY, PROFILE_DATA VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_PROFILE_HASH_INDEX ( HASH_ID STRING PRIMARY KEY, USER_REF STRING, PROFILE_HASH STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_RECENT_ACTIVITY_07 ( ACTIVITY_ID STRING PRIMARY KEY, USER_REF STRING, ACTION STRING, TARGET_REF STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REDACTION_REQUESTS ( REQ_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, REQUESTOR STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REGION_LOGS_6089 ( LOG_ID STRING PRIMARY KEY, PREF_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REGION_PREFERENCES_6088 ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, REGION STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REPORTS ( REPORT_ID STRING PRIMARY KEY, USER_REF STRING, REPORT_TYPE STRING, PAYLOAD VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REPORT_LOGS ( LOG_ID STRING PRIMARY KEY, REPORT_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_REPORT_PREFERENCES ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, REPORTS ARRAY, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_RISK_HISTORY ( HIST_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RISK_JSON VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, RISK_SCORE NUMBER, CALCULATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_RISK_SCORES ( SCORE_ID STRING PRIMARY KEY, USER_REF STRING, RISK_SCORE NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.USER_RISK_SCORE_HISTORY ( SCORE_ID STRING PRIMARY KEY, SUBJECT_REF STRING, SCORE NUMBER, REASON CLOB, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_ROLES_06 ( UR_ID STRING PRIMARY KEY, USER_REF STRING, ROLE_ID STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SATISFACTION_METRICS ( MET_ID STRING PRIMARY KEY, PERIOD_START DATE, PERIOD_END DATE, AVERAGE_RATING FLOAT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SAT_ALERTS ( ALERT_ID STRING PRIMARY KEY, TARGET_REF STRING, THRESHOLD FLOAT, LAST_EVALUATED TIMESTAMP_LTZ, STATUS STRING DEFAULT 'OK' );

CREATE OR REPLACE TABLE DOCGEN.USER_SEARCH_PREFS ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SECURITY_EVENTS_02 ( EVENT_ID STRING PRIMARY KEY, USER_REF STRING, EVENT_TYPE STRING, DETAILS VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSIONS ( SESSION_ID STRING PRIMARY KEY, USER_ID STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSIONS_03 ( SESSION_ID STRING PRIMARY KEY, SIGNATORY_REF STRING, BUNDLE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), LAST_UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSIONS_METRICS_06 ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, KEY STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_DEVICES ( USID STRING PRIMARY KEY, SESSION_ID STRING, DEVICE_META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_GEO_INDEX ( IDX_ID STRING PRIMARY KEY, SESSION_ID STRING, GEO VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_METADATA ( META_ID STRING PRIMARY KEY, SESSION_ID STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_METRICS ( METRIC_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_PREFERENCES_6400 ( PREF_ID STRING PRIMARY KEY, USER_REF STRING, PREFERENCES VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_TOKENS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, SUBJECT_REF STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_TOKENS_ARCHIVE ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, EXPIRED_AT TIMESTAMP_LTZ, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_TOKENS_ARCHIVE_02 ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, EXPIRED_AT TIMESTAMP_LTZ, ARCHIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SESSION_TOKENS_PERMS ( TOKEN_ID STRING PRIMARY KEY, SESSION_ID STRING, USER_REF STRING, PERMISSIONS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_SUPPORT_NOTES ( NOTE_ID STRING PRIMARY KEY, USER_REF STRING, NOTE CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_VERIFICATION_EVENTS ( EVENT_ID STRING PRIMARY KEY, USER_REF STRING, METHOD STRING, PAYLOAD VARIANT, EVENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.USER_VERIFICATION_RESULTS ( RES_ID STRING PRIMARY KEY, EVENT_ID STRING, RESULT JSON, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UUID_COUNTER ( COUNTER_NAME STRING PRIMARY KEY, COUNTER BIGINT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.UX_EVENT_AGGREGATES ( AGG_ID STRING PRIMARY KEY, METRIC_NAME STRING, AGG_PAYLOAD VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UX_EVENT_STREAM ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, EVENT_TYPE STRING, PAYLOAD VARIANT, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.UX_METRICS ( UX_ID STRING PRIMARY KEY, METRIC_NAME STRING, VALUE VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_DISCREPANCY_LOGS ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, DISCREPANCY_JSON VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_RECONCILIATION_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_RECONCILIATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_RESULTS_10 ( RESULT_ID STRING PRIMARY KEY, RULE_ID STRING, BUNDLE_ID STRING, PASSED BOOLEAN, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_RULES_07 ( RULE_ID STRING PRIMARY KEY, NAME STRING, EXPRESSION STRING, ERROR_MSG STRING, ENABLED BOOLEAN DEFAULT TRUE );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_RULES_10 ( RULE_ID STRING PRIMARY KEY, NAME STRING, TARGET STRING, EXPRESSION STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VALIDATION_VIOLATIONS_07 ( VIOLATION_ID STRING PRIMARY KEY, RULE_ID STRING, DOCUMENT_ID STRING, DETAILS VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VARIANT_ROLLOUT_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VARIANT_USAGE_LOGS_6347 ( LOG_ID STRING PRIMARY KEY, USAGE_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_BACKUPS_12 ( BACKUP_ID STRING PRIMARY KEY, SHARD_ID STRING, S3_REF STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_BACKUP_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SNAPSHOT_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_COMPACTION_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_INDEX STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_COMPACTION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, BEFORE_SIZE NUMBER, AFTER_SIZE NUMBER, DURATION_MS NUMBER, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_FINGERPRINT_INDEX ( IDX_ID STRING PRIMARY KEY, FID STRING, META VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_FINGERPRINT_STORE ( FID STRING PRIMARY KEY, SIGNER_ID STRING, VECTOR VECTOR, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_IMPORT_JOBS ( JOB_ID STRING PRIMARY KEY, SOURCE_LOCATION STRING, INDEX_REF STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_IMPORT_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, IMPORTED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_INDEX_REPLICAS ( REPLICA_ID STRING PRIMARY KEY, SHARD_ID STRING, HOST STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_INDEX_SHARDS ( SHARD_ID STRING PRIMARY KEY, INDEX_ID STRING, NODE_REF STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_INGEST_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_INGEST_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_METADATA_12 ( VECTOR_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SHARD_ID STRING, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_REBUILD_JOBS ( JOB_ID STRING PRIMARY KEY, INDEX_NAME STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_REBUILD_LOGS ( LOG_ID STRING PRIMARY KEY, JOB_ID STRING, STATUS STRING, DETAILS VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_REINDEX_REQUESTS ( REQ_ID STRING PRIMARY KEY, SHARD_REF STRING, INITIATED_BY STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_REINDEX_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, STATS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_RESTORE_REQUESTS_12 ( REQ_ID STRING PRIMARY KEY, BACKUP_ID STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_RESTORE_RESULTS_12 ( RESULT_ID STRING PRIMARY KEY, REQ_ID STRING, STATUS STRING, DETAILS VARIANT, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_SHARD_LOADS ( LOAD_ID STRING PRIMARY KEY, SHARD_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, FINISHED_AT TIMESTAMP_LTZ, ERROR_JSON VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_SHARD_MANIFEST ( SHARD_ID STRING PRIMARY KEY, INDEX_REF STRING, LOCATION STRING, CHECKSUM STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_SNAPSHOT_MANIFEST ( SNAP_ID STRING PRIMARY KEY, LOCATION STRING, SIZE_BYTES NUMBER, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_BACKUPS ( BACKUP_ID STRING PRIMARY KEY, INDEX_REF STRING, S3_PATH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_HEALTH_INDEX ( IDX_ID STRING PRIMARY KEY, SHARD_REF STRING, STATUS STRING, LAST_CHECK TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_META ( META_ID STRING PRIMARY KEY, STORE_REF STRING, META VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_RESTORE_JOBS ( JOB_ID STRING PRIMARY KEY, BACKUP_ID STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_RESTORE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_SHARD_MANIFEST ( MANIFEST_ID STRING PRIMARY KEY, SHARD_REF STRING, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_SNAPSHOTS ( SNAP_ID STRING PRIMARY KEY, LOCATION STRING, METADATA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VECTOR_STORE_SNAPSHOT_INDEX ( IDX_ID STRING PRIMARY KEY, SNAP_ID STRING, KEY STRING, VALUE VARIANT, INDEXED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ASSURANCE_REPORTS ( REP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, REPORT_JSON VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_CONTRACTS_INDEX ( CONTRACT_ID STRING PRIMARY KEY, VENDOR_ID STRING, TERMS VARIANT, SIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_CONTRACT_AUDIT ( AUDIT_ID STRING PRIMARY KEY, CONTRACT_ID STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_CONTRACT_COMPLIANCE ( COMP_ID STRING PRIMARY KEY, CONTRACT_ID STRING, CHECKS VARIANT, LAST_CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_CONTRACT_REGISTRY ( CONTRACT_ID STRING PRIMARY KEY, VENDOR STRING, TERMS VARIANT, EFFECTIVE_AT TIMESTAMP_LTZ, EXPIRES_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_MAPPINGS ( MAP_ID STRING PRIMARY KEY, PROVIDER_ID STRING, EXTERNAL_NAME STRING, META VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_MITIGATION_JOBS ( JOB_ID STRING PRIMARY KEY, VEND_ID STRING, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_MITIGATION_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_MONITORING_RESULTS ( RES_ID STRING PRIMARY KEY, VENDOR_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_EVENTS ( EVENT_ID STRING PRIMARY KEY, VENDOR_REF STRING, EVENT_JSON VARIANT, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_QUEUE ( Q_ID STRING PRIMARY KEY, VENDOR_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_REGISTRY ( VENDOR_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, META VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, OUTCOME VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_RESULTS ( RES_ID STRING PRIMARY KEY, STEP_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_ONBOARDING_STEPS ( STEP_ID STRING PRIMARY KEY, VENDOR_ID STRING, STEP_JSON VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_PERFORMANCE_METRICS ( MET_ID STRING PRIMARY KEY, VEND_ID STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RATINGS ( RATING_ID STRING PRIMARY KEY, PROVIDER_NAME STRING, RATING NUMBER, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, VEND_ID STRING, SCOPE VARIANT, RESULT JSON, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_ASSESSMENTS ( ASSESS_ID STRING PRIMARY KEY, VEND_ID STRING, SCORE NUMBER, DETAILS VARIANT, ASSESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_INDEX_6075 ( RISK_ID STRING PRIMARY KEY, VENDOR_REF STRING, RISK_SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_LOGS_6076 ( LOG_ID STRING PRIMARY KEY, RISK_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_REGISTRY ( VEND_ID STRING PRIMARY KEY, NAME STRING, RISK_PROFILE VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VENDOR_RISK_REGISTRY ( VEND_ID STRING PRIMARY KEY, NAME STRING, RISK_SCORE NUMBER, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_AUDIT_6247 ( AUDIT_ID STRING PRIMARY KEY, V_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, RES_ID STRING, ACTION STRING, PERFORMED_BY STRING, TIMESTAMP TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_AUDIT_TRAIL ( AUDIT_ID STRING PRIMARY KEY, VERIFY_ID STRING, ACTION STRING, PERFORMED_BY STRING, AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_AUDIT_TRAILS ( AUDIT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VERIFIER STRING, RESULT STRING, AUDITED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_CACHE ( CACHE_ID STRING PRIMARY KEY, SIGNATURE_REF STRING, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_EVIDENCES_09 ( EVIDENCE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VERIFIER STRING, RESULT STRING, DETAIL VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_FAILURE_REASONS ( REASON_ID STRING PRIMARY KEY, SIGNATURE_REF STRING, REASON STRING, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, POLICY_ID STRING, TARGET_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_BINDINGS ( BIND_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, TARGET_REF STRING, BOUND_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, ASSIGN_ID STRING, RESULT JSON, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_HISTORY ( H_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACTION STRING, PERFORMED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, BODY CLOB, CREATED_BY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_POLICY_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, RULES JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_QUEUE ( QUEUE_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_QUEUE_05 ( Q_ID STRING PRIMARY KEY, BUNDLE_ID STRING, ATTEMPTS INT DEFAULT 0, STATUS STRING DEFAULT 'PENDING', NEXT_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_REQUESTS ( REQ_ID STRING PRIMARY KEY, BUNDLE_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_RESULTS ( RESULT_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_RESULTS ( VERIF_ID STRING PRIMARY KEY, REQ_ID STRING, RESULT VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_RESULTS_05 ( RESULT_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, DETAILS VARIANT, VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_SCORE_INDEX ( IDX_ID STRING PRIMARY KEY, BUNDLE_ID STRING, SCORE NUMBER, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_STATS ( STAT_ID STRING PRIMARY KEY, PERIOD_START TIMESTAMP_LTZ, PERIOD_END TIMESTAMP_LTZ, TOTAL_VERIFICATIONS INT, SUCCESSFUL INT, FAILED INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_THRESHOLDS ( THRESH_ID STRING PRIMARY KEY, NAME STRING, THRESHOLD_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_WORKERS ( WORKER_ID STRING PRIMARY KEY, NAME STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VERIFICATION_WORKFLOWS ( WF_ID STRING PRIMARY KEY, NAME STRING, STEPS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_CONFIG_REGISTRY ( CONFIG_ID STRING PRIMARY KEY, NAME STRING, CONFIG JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_HEALTH_CHECKS ( CHECK_ID STRING PRIMARY KEY, VERIFIER_REF STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_HEALTH_HISTORY ( HEALTH_ID STRING PRIMARY KEY, SERVICE_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_METRICS ( MET_ID STRING PRIMARY KEY, VERIFIER_REF STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_SERVICE_LOGS ( LOG_ID STRING PRIMARY KEY, BUNDLE_ID STRING, VERIFIER STRING, LOG_PAYLOAD VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERIFIER_SERVICE_REGISTRY ( SERVICE_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, METADATA VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSIONED_DOCUMENT_INDEX ( VIDX_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUM INT, BUNDLE_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSIONED_DOCUMENT_STORE ( STORE_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, VERSION_NUMBER INT, LOCATION STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_AUDIT ( AUDIT_ID STRING PRIMARY KEY, VERSION_ID STRING, ACTION STRING, PERFORMED_BY STRING, DETAILS VARIANT, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_BRANCHES ( BRANCH_ID STRING PRIMARY KEY, BASE_VERSION STRING, NAME STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.VERSION_BRANCHES ( BRANCH_ID STRING PRIMARY KEY, BASE_VERSION STRING, NAME STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_DIFFS ( DIFF_ID STRING PRIMARY KEY, VERSION_ID STRING, DIFF VARIANT, COMPUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_PURGE_JOBS ( JOB_ID STRING PRIMARY KEY, TARGET_DOC STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VERSION_PURGE_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, REMOVED_COUNT NUMBER, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VERSION_RETENTION_OVERRIDES ( OVERRIDE_ID STRING PRIMARY KEY, VERSION_ID STRING, RETENTION_UNTIL TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIDEO_ANALYSIS_JOBS ( JOB_ID STRING PRIMARY KEY, IDX_ID STRING, CONFIG VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIDEO_ANALYSIS_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, METRICS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIDEO_EVIDENCE_INDEX ( VIDEO_ID STRING PRIMARY KEY, BUNDLE_ID STRING, LOCATION STRING, DURATION_MS NUMBER, UPLOADED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIDEO_TRANSCRIPTION_INDEX ( TRANS_ID STRING PRIMARY KEY, MEDIA_ID STRING, TRANSCRIPT CLOB, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIEW_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, VIEW_ID STRING, USER_ID STRING, ACCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VIEW_ACCESS_LOGS ( LOG_ID STRING PRIMARY KEY, VIEW_NAME STRING, SUBJECT_REF STRING, ACCESS_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.VIOLATION_RESOLUTION_LOG ( LOG_ID STRING PRIMARY KEY, VIOL_ID STRING, RESOLVED_BY STRING, RESOLUTION JSON, RESOLVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VISIBILITY_POLICY_EVALUATIONS ( EVAL_ID STRING PRIMARY KEY, POLICY_ID STRING, SUBJECT_REF STRING, RESULT VARIANT, EVALUATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VPN_GATEWAY_CONFIGS ( CFG_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, UPDATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_MITIGATION ( MIT_ID STRING PRIMARY KEY, VULN_ID STRING, ACTION_JSON VARIANT, ASSIGNED_TO STRING, STATUS STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_SCAN_JOBS ( JOB_ID STRING PRIMARY KEY, SCOPE VARIANT, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_SCAN_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, FINDINGS VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_SCAN_RESULTS ( RES_ID STRING PRIMARY KEY, SCAN_REF STRING, FINDINGS VARIANT, SCANNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_TICKET_REGISTRY ( TICKET_ID STRING PRIMARY KEY, SCAN_ID STRING, STATUS STRING, ASSIGNED_TO STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_TICKET_UPDATES ( UPDATE_ID STRING PRIMARY KEY, TICKET_ID STRING, UPDATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_TRACKER ( VULN_ID STRING PRIMARY KEY, COMPONENT STRING, SEVERITY STRING, STATUS STRING, DISCOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.VULNERABILITY_TRACKER ( VULN_ID STRING PRIMARY KEY, DESCRIPTION CLOB, SEVERITY STRING, STATUS STRING, DISCOVERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WALLET_PROVISIONING_REQUESTS ( REQ_ID STRING PRIMARY KEY, TENANT_ID STRING, DETAILS VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WALLET_PROVISIONING_RESULTS ( RES_ID STRING PRIMARY KEY, REQ_ID STRING, WALLET_REF STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATCHERS ( WATCHER_ID STRING PRIMARY KEY, ENTITY_TYPE STRING, ENTITY_ID STRING, SUBSCRIBER STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATCHER_ASSIGNMENTS ( ASSIGN_ID STRING PRIMARY KEY, WATCHER_ID STRING, ENTITY_REF STRING, ASSIGNED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_APPLICATION_LOG ( LOG_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, POLICY_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_APPLICATION_LOGS ( LOG_ID STRING PRIMARY KEY, POLICY_ID STRING, DOCUMENT_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_APPLIED ( APPL_ID STRING PRIMARY KEY, DOCUMENT_ID STRING, RULE_ID STRING, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_JOB_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, ARTIFACT_URL STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_POLICY_REGISTRY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WATERMARK_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, RULE_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOKS_INBOUND_10 ( WEBHOOK_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKFILL_JOBS ( JOB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, RANGE VARIANT, STATUS STRING DEFAULT 'PENDING', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKFILL_LOG ( BACKFILL_ID STRING PRIMARY KEY, STARTED_AT TIMESTAMP_LTZ, ENDED_AT TIMESTAMP_LTZ, STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKFILL_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PROCESSED_COUNT INT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKOFF_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKOFF_PROFILES ( PROFILE_ID STRING PRIMARY KEY, NAME STRING, SETTINGS VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKOFF_QUEUE ( Q_ID STRING PRIMARY KEY, PAYLOAD VARIANT, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKOFF_RESULTS ( RES_ID STRING PRIMARY KEY, Q_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAIL VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKPRESSURE ( ENTRY_ID STRING PRIMARY KEY, SOURCE STRING, CURRENT_QDEPTH INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_BACKPRESSURE_METRICS ( MET_ID STRING PRIMARY KEY, SOURCE STRING, QUEUE_DEPTH INT, REPORTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_CONSUMERS ( CONSUMER_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, SECRET_HASH STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_CONSUMERS ( CONSUMER_ID STRING PRIMARY KEY, PROVIDER STRING, ENDPOINT STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_CONSUMERS ( CONSUMER_ID STRING PRIMARY KEY, PROVIDER STRING, LAST_RECEIVED_AT TIMESTAMP_LTZ, FAILURE_COUNT INT DEFAULT 0, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_CONSUMER_OFFSETS ( OFFSET_ID STRING PRIMARY KEY, CONSUMER_NAME STRING, LAST_OFFSET STRING, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_CONSUMER_REGISTRY ( CONSUMER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DEADLETTER ( DLQ_ID STRING PRIMARY KEY, EVENT_ID STRING, PAYLOAD VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), FAILURE_REASON STRING ) ;

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DEADLETTER ( DLQ_ID STRING PRIMARY KEY, EVENT_ID STRING, PAYLOAD VARIANT, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), FAILURE_REASON STRING );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, Q_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE_CODE INT, RESPONSE_BODY VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_ATTEMPTS_07 ( ATTEMPT_ID STRING PRIMARY KEY, DELIVERY_ID STRING, ATTEMPT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT, SUCCESS BOOLEAN );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_LOG ( DELIV_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_LOGS ( DL_ID STRING PRIMARY KEY, SUB_ID STRING, EVENT_ID STRING, STATUS STRING, HTTP_STATUS INT, RESPONSE VARIANT, SENT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_LOG_10 ( LOG_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, HANDLER_ID STRING, STATUS STRING, RESPONSE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_METRICS ( METRIC_ID STRING PRIMARY KEY, PROVIDER STRING, SUCCESS INT, FAIL INT, WINDOW_START TIMESTAMP_LTZ, WINDOW_END TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_METRICS ( METRIC_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, LATENCY_MS NUMBER, STATUS STRING, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_QUEUE ( Q_ID STRING PRIMARY KEY, DESTINATION STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_QUEUE_07 ( DELIVERY_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'QUEUED', CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DELIVERY_STATS ( STATS_ID STRING PRIMARY KEY, ENDPOINT STRING, SUCCESS_COUNT INT, FAILURE_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DLQ ( DLQ_ID STRING PRIMARY KEY, EVT_ID STRING, ERROR_MESSAGE STRING, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DLQ ( DLQ_ID STRING PRIMARY KEY, INBOUND_ID STRING, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ERROR_MSG STRING, HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_DLQ ( DLQ_ID STRING PRIMARY KEY, RAW_ID STRING, REASON STRING, FAILED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_ENDPOINTS ( ENDPOINT_ID STRING PRIMARY KEY, NAME STRING, URL STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_ERROR_LOGS ( LOG_ID STRING PRIMARY KEY, Q_ID STRING, ERROR_MSG STRING, TRACE VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_EVENTS_04 ( EVENT_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, SENT_AT TIMESTAMP_LTZ, STATUS STRING, RESPONSE VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_EVENTS_07 ( EVENT_ID STRING PRIMARY KEY, SESSION_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_EVENT_LOG ( EVT_ID STRING PRIMARY KEY, SUB_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_EVENT_QUEUE ( EVT_ID STRING PRIMARY KEY, CONSUMER_ID STRING, PAYLOAD VARIANT, STATUS STRING DEFAULT 'PENDING', RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_EVENT_RETRIES ( RETRY_ID STRING PRIMARY KEY, EVT_ID STRING, ATTEMPT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING, DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_FAILURE_DEADLETTER ( DLQ_ID STRING PRIMARY KEY, DELIV_ID STRING, ERROR_JSON VARIANT, STORED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_FILTERS ( FILTER_ID STRING PRIMARY KEY, PROVIDER STRING, PATH_PATTERN STRING, ENABLED BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_HANDLERS_10 ( HANDLER_ID STRING PRIMARY KEY, SOURCE STRING, ENDPOINT STRING, METHOD STRING, ENABLED BOOLEAN DEFAULT TRUE, CONFIG VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INBOUND ( INBOUND_ID STRING PRIMARY KEY, ENDPOINT_ID STRING, PAYLOAD VARIANT, HEADERS VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INBOUND ( INBOUND_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), VERIFIED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INBOUND ( IN_ID STRING PRIMARY KEY, CONSUMER_ID STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), PROCESSED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INBOUND_AUDIT ( AUDIT_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, RECEIVED_PAYLOAD VARIANT, VERIFIED BOOLEAN, VERIFIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INBOUND_LOG ( LOG_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), HANDLED BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_INGEST_MONITOR ( MON_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, LAST_RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), METRICS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PARSER_LOGS ( LOG_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, PARSER_VERSION STRING, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PARSE_ERRORS ( ERROR_ID STRING PRIMARY KEY, RAW_ID STRING, ERROR_MSG STRING, OCCURRED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PARSING_JOBS ( JOB_ID STRING PRIMARY KEY, EVENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ, COMPLETED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PARSING_RESULTS ( RES_ID STRING PRIMARY KEY, JOB_ID STRING, PARSED_JSON VARIANT, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PAYLOAD_ARCHIVE ( ARCHIVE_ID STRING PRIMARY KEY, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROCESSOR_LOGS_6151 ( LOG_ID STRING PRIMARY KEY, METRIC_ID STRING, ENTRY VARIANT, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROCESSOR_METRICS_6150 ( METRIC_ID STRING PRIMARY KEY, ENDPOINT STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROCESS_LOGS ( LOG_ID STRING PRIMARY KEY, IN_ID STRING, STATUS STRING, DETAILS VARIANT, PROCESSED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROCESS_QUEUE ( Q_ID STRING PRIMARY KEY, INBOUND_ID STRING, STATUS STRING DEFAULT 'QUEUED', ATTEMPTS INT DEFAULT 0, NEXT_RUN_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROVIDER_HEALTH ( HEALTH_ID STRING PRIMARY KEY, PROVIDER_ID STRING, STATUS STRING, CHECKED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROVIDER_INDEX ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_PROVIDER_REGISTRY ( PROVIDER_ID STRING PRIMARY KEY, NAME STRING, ENDPOINT JSON, CONFIG VARIANT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_REGISTRATIONS ( WH_ID STRING PRIMARY KEY, SOURCE STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_REPLAY_REQUESTS ( REPLAY_ID STRING PRIMARY KEY, ORIGINAL_EVENT_ID STRING, REQUESTED_BY STRING, STATUS STRING DEFAULT 'PENDING', REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_REPLAY_RESULTS ( RES_ID STRING PRIMARY KEY, REPLAY_ID STRING, OUTCOME JSON, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRIES_04 ( RETRY_ID STRING PRIMARY KEY, EVENT_ID STRING, ATTEMPT INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, LAST_ERROR VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_ATTEMPTS ( ATTEMPT_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, ATTEMPT_NO INT, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_HISTORY ( RETRY_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, ATTEMPT INT, STATUS STRING, ATTEMPTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_LOG ( RETRY_LOG_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, ATTEMPT_NO INT, STATUS STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, SCHEDULE VARIANT, MAX_ATTEMPTS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, BACKOFF_SECONDS ARRAY, MAX_ATTEMPTS INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() ) ;

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, NAME STRING, POLICY_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_POLICY ( POLICY_ID STRING PRIMARY KEY, PROVIDER STRING, MAX_ATTEMPTS INT, INITIAL_DELAY_SECONDS INT, BACKOFF_MULTIPLIER FLOAT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, DL_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, EVENT_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 ) ;

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, EVENT_ID STRING, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0 );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, PAYLOAD VARIANT, ATTEMPT_COUNT INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( RETRY_ID STRING PRIMARY KEY, ORIGINAL_EVENT JSON, ATTEMPT INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'PENDING' );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_QUEUE ( RETRY_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, ATTEMPTS INT DEFAULT 0, NEXT_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_RETRY_RESULTS ( RES_ID STRING PRIMARY KEY, RETRY_ID STRING, STATUS STRING, COMPLETED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_MAPPINGS ( MAPPING_ID STRING PRIMARY KEY, PROVIDER_ID STRING, SCHEMA_JSON VARIANT, VERSION INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_MIGRATIONS ( MIG_ID STRING PRIMARY KEY, SCHEMA_NAME STRING, FROM_VERSION INT, TO_VERSION INT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_MISMATCH_INDEX ( MISMATCH_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, DETECTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, MAPPING VARIANT, VERSION INT, REGISTERED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, NAME STRING, VERSION INT, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_REGISTRY ( SCHEMA_ID STRING PRIMARY KEY, PROVIDER STRING, MAPPING_JSON VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_VERSIONS ( SCHEMA_VERSION_ID STRING PRIMARY KEY, SCHEMA_ID STRING, VERSION_NUMBER INT, MAPPING_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_VERSIONS_02 ( SCHEMA_VERSION_ID STRING PRIMARY KEY, SCHEMA_ID STRING, VERSION_NUMBER INT, MAPPING_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SCHEMA_VERSIONS_03 ( SCHEMA_VERSION_ID STRING PRIMARY KEY, SCHEMA_ID STRING, VERSION_NUMBER INT, MAPPING_JSON VARIANT, APPLIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SIGNATURE_EVENTS ( EVENT_ID STRING PRIMARY KEY, SOURCE STRING, PAYLOAD VARIANT, RECEIVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SIGNATURE_VALIDATIONS ( VALID_ID STRING PRIMARY KEY, RAW_ID STRING, IS_VALID BOOLEAN, VALIDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SIGNER_MAP ( MAP_ID STRING PRIMARY KEY, RAW_ID STRING, SIGNER_ID STRING, MAPPED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SIGNER_SESSIONS_07 ( SESSION_ID STRING PRIMARY KEY, SIGNER_ID STRING, BUNDLE_ID STRING, STATUS STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SUBSCRIPTIONS ( SUB_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, EVENT_NAME STRING, TARGET_URL STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SUBSCRIPTIONS_04 ( SUB_ID STRING PRIMARY KEY, TARGET_URL STRING, EVENT_TYPES ARRAY, SECRET_HASH STRING, ACTIVE BOOLEAN DEFAULT TRUE, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SUBSCRIPTION_INDEX ( SUB_ID STRING PRIMARY KEY, PROVIDER_ID STRING, TARGET_URL STRING, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_SUBSCRIPTION_REGISTRY ( SUB_ID STRING PRIMARY KEY, TARGET_URL STRING, EVENT_TYPES ARRAY, SECRET_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEBHOOK_TRANSFORMATIONS ( TRANSFORM_ID STRING PRIMARY KEY, WEBHOOK_ID STRING, TRANSFORM_JS CLOB, VERSION INT, APPLIED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WEEKLY_ACTIVITY_AGG ( AGG_ID STRING PRIMARY KEY, WEEK_START DATE, METRICS VARIANT, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WEEKLY_SIGNATURE_AGGREGATES ( AGG_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, WEEK_START DATE, TOTAL_SIGNATURES INT, FAILED_SIGNATURES INT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WHITELIST_AUDIT ( AUDIT_ID STRING PRIMARY KEY, WL_ID STRING, ACTION STRING, ACTOR STRING, ACTION_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), DETAILS VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WHITELIST_EXCEPTIONS ( EX_ID STRING PRIMARY KEY, SIGNER_ID STRING, EXPIRES_AT TIMESTAMP_LTZ, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WHITELIST_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CRITERIA VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_DISPATCH_LOG ( LOG_ID STRING PRIMARY KEY, WORKER_REF STRING, TASK_REF STRING, DISPATCHED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), STATUS STRING );

CREATE OR REPLACE TABLE DOCGEN.WORKER_ERROR_STATS ( STAT_ID STRING PRIMARY KEY, WORKER_REF STRING, ERROR_COUNT INT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_HEARTBEAT ( HB_ID STRING PRIMARY KEY, WORKER_REF STRING, STATUS STRING, LAST_HEARTBEAT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_HEARTBEATS ( HEARTBEAT_ID STRING PRIMARY KEY, WORKER_NAME STRING, LAST_HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_LEASES ( LEASE_ID STRING PRIMARY KEY, WORKER_NAME STRING, LEASE_EXPIRES_AT TIMESTAMP_LTZ, HEARTBEAT_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_POOL_ALERTS ( ALERT_ID STRING PRIMARY KEY, POOL_NAME STRING, ALERT_JSON VARIANT, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_POOL_METRICS ( MET_ID STRING PRIMARY KEY, POOL_NAME STRING, METRICS VARIANT, RECORDED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKER_STATS ( WORKER_ID STRING PRIMARY KEY, JOBS_RUN INT, LAST_RUN_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_ALERTS ( ALERT_ID STRING PRIMARY KEY, WF_ID STRING, SEVERITY STRING, MESSAGE CLOB, RAISED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_DEADLETTER_QUEUE ( DLQ_ID STRING PRIMARY KEY, RUN_ID STRING, ERROR CLOB, ENQUEUED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_EVENT_INDEX ( IDX_ID STRING PRIMARY KEY, WORKFLOW_REF STRING, EVENT_TYPE STRING, EVENT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_EXECUTION_LOGS ( LOG_ID STRING PRIMARY KEY, WF_ID STRING, EXECUTION_JSON VARIANT, RAN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_INSTANCES ( INST_ID STRING PRIMARY KEY, WF_ID STRING, DOCUMENT_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_RETRY_POLICIES ( POLICY_ID STRING PRIMARY KEY, NAME STRING, RULES VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_RETRY_QUEUE ( Q_ID STRING PRIMARY KEY, WF_ID STRING, NEXT_RUN_AT TIMESTAMP_LTZ, ATTEMPTS INT DEFAULT 0, PAYLOAD VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_RUNS ( RUN_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_STATE_STORE ( STATE_ID STRING PRIMARY KEY, WORKFLOW_REF STRING, STATE_JSON VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_STEP_LOGS ( LOG_ID STRING PRIMARY KEY, INSTANCE_ID STRING, STEP_REF STRING, ACTOR STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_STEP_LOGS ( LOG_ID STRING PRIMARY KEY, INST_ID STRING, STEP_REF STRING, ACTOR STRING, ACTION STRING, LOGGED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_TASKS ( TASK_ID STRING PRIMARY KEY, RUN_ID STRING, STEP_INDEX INT, TASK_JSON VARIANT, STATUS STRING, SCHEDULE JSON, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_TASK_RUNS ( RUN_ID STRING PRIMARY KEY, TASK_ID STRING, STATUS STRING, STARTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ENDED_AT TIMESTAMP_LTZ, OUTPUT VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_TEMPLATES ( TEMPLATE_ID STRING PRIMARY KEY, NAME STRING, DEFINITION VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKFLOW_WAIT_QUEUE ( Q_ID STRING PRIMARY KEY, INST_ID STRING, STEP_REF STRING, WAKE_AT TIMESTAMP_LTZ, STATUS STRING DEFAULT 'WAITING' );

CREATE OR REPLACE TABLE DOCGEN.WORKLOAD_BALANCER ( BAL_ID STRING PRIMARY KEY, OPERATOR STRING, LOAD_METRICS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WORKLOAD_PROJECTIONS ( PROJ_ID STRING PRIMARY KEY, OPERATOR STRING, PROJECTION JSON, GENERATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.WRITEOFF_APPROVALS ( APP_ID STRING PRIMARY KEY, REQ_ID STRING, APPROVED_BY STRING, APPROVED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), NOTES VARIANT );

CREATE OR REPLACE TABLE DOCGEN.WRITEOFF_REQUESTS ( REQ_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, AMOUNT NUMBER, REASON STRING, STATUS STRING, REQUESTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ZIP_RECONCILE ( RECON_ID STRING PRIMARY KEY, MANIFEST_ID STRING, STATUS STRING, DETAILS VARIANT, RUN_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_INDEX_METADATA ( INDEX_ID STRING PRIMARY KEY, SNAPSHOT_ID STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), META VARIANT );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_STATUS_LU ( STATUS_KEY STRING PRIMARY KEY, DESCRIPTION STRING );

CREATE OR REPLACE TABLE DOCGEN.OPERATORS ( OPERATOR_ID STRING PRIMARY KEY, NAME STRING, CONTACT VARIANT, ON_CALL BOOLEAN DEFAULT FALSE );

CREATE OR REPLACE TABLE DOCGEN.ACCOUNTS_INTEGRATION_KEYS ( ACCOUNT_ID STRING PRIMARY KEY, INTEGRATION_KEY_HASH STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(), ROTATED_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.MONITORING_ALERT_RULES ( RULE_ID STRING PRIMARY KEY, NAME STRING, CONDITION VARIANT, SEVERITY STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.THIRD_PARTY_CALLBACKS ( CALLBACK_ID STRING PRIMARY KEY, REQUEST_ID STRING, TARGET_URL STRING, PAYLOAD VARIANT, STATUS STRING, ATTEMPTS INT DEFAULT 0, LAST_ATTEMPT_AT TIMESTAMP_LTZ );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_FLAGS ( FLAG_ID STRING PRIMARY KEY, REQUEST_ID STRING, FLAG_KEY STRING, FLAG_VALUE VARIANT, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_RATE_LIMITS ( RATE_LIMIT_ID STRING PRIMARY KEY, ACCOUNT_ID STRING, LIMIT_PER_MINUTE INT, WINDOW_SECONDS INT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.ALERT_POLICY_CONFIG ( POLICY_ID STRING PRIMARY KEY, ALERT_TYPE STRING, THRESHOLD VARIANT, ACTIONS VARIANT, UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

CREATE OR REPLACE TABLE DOCGEN.TMP_EMBEDDINGS ( DOCUMENT_ID STRING, SECTION_ID STRING, EMBEDDING VARIANT, PROVENANCE VARIANT, METADATA VARIANT );

CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ASSEMBLY_JOBS ( ASSEMBLY_ID STRING PRIMARY KEY, TEMPLATE_ID STRING, ACCOUNT_ID STRING, STATUS STRING, RENDERED_URL STRING, CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP() );

ALTER TABLE DOCGEN.SIGNATURE_EVENTS CLUSTER BY (ACCOUNT_ID, REQUEST_ID);

ALTER TABLE DOCGEN.SIGNATURE_EVENTS CLUSTER BY (REQUEST_ID, SIGNER_ID);

ALTER TABLE DOCGEN.SIGNATURE_REQUESTS ADD ROW ACCESS POLICY docgen_tenant_row_access ON (ACCOUNT_ID);

ALTER TABLE DOCGEN.SIGNATURE_VALIDATION CLUSTER BY (REQUEST_ID, VERIFIED_AT);

COMMENT ON TABLE DOCGEN.SIGNATURE_EVENTS IS 'Normalized signature events extracted from raw stage. Use STREAM DOCGEN.STREAM_SIG_EVENTS_RAW to process incoming files via Snowpipe.';

COMMENT ON TABLE DOCGEN.SIGNATURE_REQUESTS IS 'High-level signature request per document. Status flows: PENDING -> RENDERED -> COMPLETED.';

COMMENT ON TABLE DOCGEN.SIGNATURE_REQUESTS IS 'Stores signature request lifecycle for E-Sign flows (demo)';

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.AUDIT_SUMMARY_MV AS SELECT ACCOUNT_ID, COUNT(*) AS TOTAL_SIGNATURES, MAX(CREATED_AT) AS LAST_ACTIVITY FROM DOCGEN.SIGNATURE_EVENTS GROUP BY ACCOUNT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.DOCUMENT_SIGNATURE_SUMMARY_MV AS SELECT DOCUMENT_ID, COUNT(*) AS SIGNATURE_COUNT, MAX(EVENT_TS) AS LAST_SIGNED_AT FROM DOCGEN.SIGNATURE_EVENTS GROUP BY DOCUMENT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_ACCESS_REVIEW_RESULTS AS SELECT TEMPLATE_ID, COUNT(*) AS REVIEWS FROM DOCGEN.ACCESS_REVIEW_RESULTS GROUP BY TEMPLATE_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_ADMIN_AUDIT_ACTIVITY AS SELECT at.AUDIT_ID, at.ADMIN_USER, at.ACTION, at.TARGET, at.AUDIT_TS FROM DOCGEN.ADMIN_AUDIT at ORDER BY at.AUDIT_TS DESC;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_ADMIN_CHANGE_REQUESTS AS SELECT REQUESTOR, COUNT(*) AS PENDING_REQUESTS, MAX(REQUESTED_AT) AS LAST_REQUEST FROM DOCGEN.TEMPLATE_CHANGE_REQUESTS WHERE STATUS='OPEN' GROUP BY REQUESTOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_ADMIN_TELEMETRY_AGG AS SELECT COMPONENT, COUNT(*) AS EVENTS, MAX(RECORDED_AT) AS LAST_EVENT FROM DOCGEN.ADMIN_TELEMETRY_EVENTS GROUP BY COMPONENT;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_ARCHIVE_HEALTH_CHECKS AS SELECT MANIFEST_ID, STATUS, MAX(LAST_VERIFIED_AT) AS LAST_VERIFIED FROM DOCGEN.ARCHIVE_HEALTH_METRICS GROUP BY MANIFEST_ID, STATUS;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_AUDIT_OVERVIEW AS SELECT TARGET_REF, COUNT(*) AS EVENTS FROM DOCGEN.AUDIT_SNAPSHOT_ITEMS GROUP BY TARGET_REF;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_AUDIT_RETENTION AS SELECT POLICY_ID, COUNT(*) AS ITEMS FROM DOCGEN.AUDIT_SNAPSHOT_ITEMS GROUP BY POLICY_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_AUDIT_SUMMARY AS SELECT COUNT(*) AS total_audits, MAX(CREATED_AT) AS last_audit FROM DOCGEN.ADMIN_ACTIONS;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_BILLING_AUDIT AS SELECT ACCOUNT_ID, COUNT(*) AS DISPUTES, MAX(SUBMITTED_AT) AS LAST_DISPUTE FROM DOCGEN.BILLING_DISPUTE_QUEUE GROUP BY ACCOUNT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_COMPLIANCE_AUDIT AS SELECT TENANT_ID, COUNT(*) AS ISSUES FROM DOCGEN.COMPLIANCE_ISSUES GROUP BY TENANT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_COMPLIANCE_EXPORT_MANIFEST AS SELECT MANIFEST_ID, COUNT(*) AS ITEMS, MAX(ARCHIVED_AT) AS LAST_ARCHIVE FROM DOCGEN.DOCUMENT_ARCHIVE_MANIFEST GROUP BY MANIFEST_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_CONSENT_AUDIT AS SELECT CONSENT_ID, SUBJECT_REF, CONSENT_TYPE, GIVEN_AT, META FROM DOCGEN.SIGNATURE_CONSENTS;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_CONSENT_AUDIT AS SELECT SIGNER_ID, COUNT(*) AS CONSENTS FROM DOCGEN.SIGNER_CONSENT_LOG GROUP BY SIGNER_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_EVIDENCE_CHAIN_INDEX AS SELECT BUNDLE_ID, COUNT(*) AS CHAIN_LENGTH FROM DOCGEN.PROOF_CHAIN GROUP BY BUNDLE_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_HEALTH_SUMMARY AS SELECT CHECK_NAME, STATUS, MAX(CHECKED_AT) AS LAST_CHECK FROM DOCGEN.HEALTH_CHECKS GROUP BY CHECK_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_INCIDENT_METRICS AS SELECT INCIDENT_ID, COUNT(*) AS ACTIONS, MAX(CREATED_AT) AS LAST_ACTION FROM DOCGEN.OPERATOR_ACTION_HISTORY GROUP BY INCIDENT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_INDEX_SNAPSHOTS AS SELECT SNAPSHOT_ID, LOCATION, CREATED_AT FROM DOCGEN.INDEX_SNAPSHOTS ORDER BY CREATED_AT DESC;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_KPI_ALERTS AS SELECT KPI_NAME, COUNT(*) AS TRIGGERS FROM DOCGEN.METRICS_ALERTS GROUP BY KPI_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_OPERATOR_CAPACITY_FORECASTS AS SELECT OPERATOR, AVG((FORECAST:expected)::NUMBER) AS AVG_EXPECTED FROM DOCGEN.OPERATOR_CAPACITY_PLANNING GROUP BY OPERATOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_OPERATOR_PERF AS SELECT OPERATOR, AVG(METRIC:response_time::NUMBER) AS AVG_RESP FROM DOCGEN.OPERATOR_PERF_METRICS GROUP BY OPERATOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_OPERATOR_RESPONSE_TIMES AS SELECT INCIDENT_ID, AVG(RESPONSE_SECONDS) AS AVG_RESPONSE FROM DOCGEN.OPERATOR_RESPONSE_TIMES GROUP BY INCIDENT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_OPERATOR_UTILIZATION AS SELECT OPERATOR, SUM((METRIC:work)::NUMBER) AS TOTAL_WORK FROM DOCGEN.OPERATION_METRICS GROUP BY OPERATOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_POLICY_AUDIT AS SELECT POLICY_ID, COUNT(*) AS EVENTS, MAX(EVENT_AT) AS LAST_EVENT FROM DOCGEN.POLICY_AUDIT GROUP BY POLICY_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_POLICY_VIOLATIONS AS SELECT POLICY_ID, COUNT(*) AS VIOLATIONS FROM DOCGEN.POLICY_COMPLIANCE_INDEX WHERE COMPLIANT = FALSE GROUP BY POLICY_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PREVIEW_AUDIT AS SELECT TEMPLATE_ID, COUNT(*) AS PREVIEWS, MAX(REQUESTED_AT) AS LAST_PREVIEW FROM DOCGEN.TEMPLATE_PREV_REQUESTS GROUP BY TEMPLATE_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PRIVACY_COMPLIANCE AS SELECT TENANT_ID, COUNT(*) AS REQUESTS FROM DOCGEN.PRIVACY_REQUESTS GROUP BY TENANT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PRIVACY_EVENTS AS SELECT EVENT_TYPE, COUNT(*) AS TOTAL FROM DOCGEN.USER_PRIVACY_EVENTS GROUP BY EVENT_TYPE;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PRIV_ACTION_AUDIT AS SELECT PERFORMED_BY, COUNT(*) AS ACTIONS, MAX(PERFORMED_AT) AS LAST_ACTION FROM DOCGEN.OP_PRIV_ACTION_AUDIT GROUP BY PERFORMED_BY;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_HEALTH AS SELECT PROVIDER_NAME, STATUS, MAX(LAST_CHECK) AS LAST_CHECK FROM DOCGEN.PROVIDER_STATUS GROUP BY PROVIDER_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_HEALTH_SUMMARY AS SELECT PROVIDER_NAME, COUNT(*) AS EVENTS, MAX(RECORDED_AT) AS LAST_EVENT FROM DOCGEN.PROVIDER_HEALTH_EVENTS GROUP BY PROVIDER_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_LATENCY AS SELECT PROVIDER_NAME, AVG((DETAILS:latency)::NUMBER) AS AVG_LATENCY FROM DOCGEN.PROVIDER_API_LOGS GROUP BY PROVIDER_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_METRICS AS SELECT PROVIDER_NAME, AVG(LATENCY) AS AVG_LATENCY, SUM(ERRORS) AS TOTAL_ERRORS FROM DOCGEN.PROVIDER_API_LOGS GROUP BY PROVIDER_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_SLA_REPORT AS SELECT PROVIDER, AVG((DETAILS:latency)::NUMBER) AS AVG_LATENCY, SUM(CASE WHEN STATUS='FAIL' THEN 1 ELSE 0 END) AS FAILS FROM DOCGEN.PROVIDER_API_LOGS GROUP BY PROVIDER;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_PROVIDER_UPTIME AS SELECT PROVIDER_NAME, SUM(CASE WHEN STATUS='UP' THEN 1 ELSE 0 END)::INT / NULLIF(SUM(1),0) AS UPTIME_RATIO FROM DOCGEN.PROVIDER_STATUS GROUP BY PROVIDER_NAME;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_RECENT_EVENTS AS SELECT EVENT_ID, REQUEST_ID, SIGNER_ID, EVENT_TYPE, EVENT_TS FROM DOCGEN.SIGNATURE_EVENTS WHERE EVENT_TS >= DATEADD('day', -30, CURRENT_TIMESTAMP());

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_RECENT_SIGNATURE_EVENTS AS SELECT EVENT_ID, REQUEST_ID, SIGNER_ID, EVENT_TYPE, EVENT_TS FROM DOCGEN.SIGNATURE_EVENTS WHERE EVENT_TS >= DATEADD(hour, -24, CURRENT_TIMESTAMP());

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_RELEASE_NOTES AS SELECT VERSION, COUNT(*) AS NOTES_COUNT FROM DOCGEN.FEATURE_RELEASE_NOTES GROUP BY VERSION;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_RETENTION_POLICIES AS SELECT POLICY_ID, COUNT(*) AS TARGETS FROM DOCGEN.MEDIA_RETENTION_POLICIES GROUP BY POLICY_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SDK_TELEMETRY_AGG AS SELECT SDK_NAME, VERSION, COUNT(*) AS HEARTBEATS, MAX(HEARTBEAT_AT) AS LAST FROM DOCGEN.SDK_TELEMETRY_HEARTBEAT GROUP BY SDK_NAME, VERSION;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SHIFT_COVERAGE AS SELECT OPERATOR, COUNT(*) AS SHIFTS, MAX(STARTED_AT) AS LAST_SHIFT FROM DOCGEN.OPERATOR_SHIFT_LOGS GROUP BY OPERATOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SHIFT_PREFERENCES AS SELECT OPERATOR, COUNT(*) AS PREF_COUNT FROM DOCGEN.SHIFT_PREFERENCES GROUP BY OPERATOR;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SIGNATURE_AUDIT_SUMMARY AS SELECT ACCOUNT_ID, COUNT(*) AS TOTAL_EVENTS, SUM(CASE WHEN ACTION = 'SIGN' THEN 1 ELSE 0 END) AS SIGN_COUNT, MAX(AUDIT_TS) AS LAST_AUDIT_AT FROM DOCGEN.SIGNATURE_AUDIT_TRAIL GROUP BY ACCOUNT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SIGNATURE_AUDIT_SUMMARY AS SELECT ACCOUNT_ID, COUNT(*) AS TOTAL_SIGNATURES, SUM(CASE WHEN RESULT='SUCCESS' THEN 1 ELSE 0 END) AS SUCCESS_COUNT, CURRENT_TIMESTAMP() AS SNAPSHOT_AT FROM DOCGEN.SIGNATURE_VERIFICATIONS GROUP BY ACCOUNT_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SIGNATURE_AUDIT_SUMMARY AS SELECT REQUEST_ID, COUNT(*) AS EVENT_COUNT, MAX(EVENT_TS) AS LAST_EVENT_AT FROM DOCGEN.SIGNATURE_EVENTS GROUP BY REQUEST_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SIGNER_ACTIVITY AS SELECT REQUEST_ID, SIGNER_ID, EVENT_TYPE, COUNT(*) as CNT FROM DOCGEN.SIGNATURE_EVENTS GROUP BY REQUEST_ID, SIGNER_ID, EVENT_TYPE;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SLA_DASHBOARD AS SELECT SLO_ID, COUNT(*) AS FAILS, MAX(MONITORED_AT) AS LAST_MON FROM DOCGEN.SLO_VIOLATIONS GROUP BY SLO_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_SYSTEM_HEALTH_SUMMARY AS SELECT COMPONENT, MAX(UPDATED_AT) AS LAST_UPDATE, COUNT(*) FILTER (WHERE STATUS!='OK') AS ISSUES FROM DOCGEN.SERVICE_HEALTH_DASHBOARD GROUP BY COMPONENT;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_TEMPLATE_PREVIEW_METRICS AS SELECT TEMPLATE_ID, COUNT(*) AS PREVIEWS, MAX(REQUESTED_AT) AS LAST_PREVIEW FROM DOCGEN.DOCUMENT_PREV_REQUESTS GROUP BY TEMPLATE_ID;

CREATE OR REPLACE MATERIALIZED VIEW DOCGEN.MV_WHO_DID_WHAT AS SELECT PERFORMED_BY, ACTION, COUNT(*) AS CNT FROM DOCGEN.AUDIT_SNAPSHOT_ITEMS GROUP BY PERFORMED_BY, ACTION;

CREATE OR REPLACE PROCEDURE DOCGEN.COMPACT_RETRIEVAL_RESULTS() RETURNS STRING LANGUAGE SQL AS $$ -- keep only last 1000 retrievals per request to avoid unbounded growth (demo) DELETE FROM DOCGEN.RETRIEVAL_RESULTS WHERE RETRIEVAL_ID IN ( SELECT RETRIEVAL_ID FROM DOCGEN.RETRIEVAL_RESULTS QUALIFY ROW_NUMBER() OVER (PARTITION BY REQUEST_ID ORDER BY RETRIEVED_AT DESC) > 1000 ); $$

CREATE OR REPLACE PROCEDURE DOCGEN.GET_SIMILARITY_CACHE(query_hash STRING) RETURNS VARIANT LANGUAGE SQL AS $$ SELECT RESULTS FROM DOCGEN.SIMILARITY_CACHE WHERE QUERY_HASH = :query_hash AND EXPIRES_AT > CURRENT_TIMESTAMP();

CREATE OR REPLACE PROCEDURE DOCGEN.NEXT_UUID(counter_name STRING) RETURNS STRING LANGUAGE SQL AS $$ UPDATE DOCGEN.UUID_COUNTER SET COUNTER = COALESCE(COUNTER,0) + 1 WHERE COUNTER_NAME = :counter_name;

CREATE OR REPLACE TASK DOCGEN.TASK_PROCESS_EXPORTS WAREHOUSE = 'COMPUTE_WH' SCHEDULE = 'USING CRON 0 */2 * * * UTC' AS CALL DOCGEN.EXPORT_WORKER(10);

CREATE OR REPLACE TASK DOCGEN.TASK_REFRESH_SIGNATURE_REPORTS WAREHOUSE = 'COMPUTE_WH' SCHEDULE = 'USING CRON 0 * * * * UTC' AS CALL DOCGEN.REFRESH_SIGNATURE_REPORTS();

CREATE OR REPLACE TASK DOCGEN.TASK_RETENTION_ENFORCEMENT WAREHOUSE = "COMPUTE_WH" SCHEDULE = 'USING CRON 30 4 * * * UTC' AS -- For demo, call purge stored-proc with retention for documents CALL DOCGEN.PURGE_OLD_DOCUMENTS(365, TRUE);

CREATE OR REPLACE TASK DOCGEN.TASK_RUN_ACCESS_REVIEWS WAREHOUSE = 'COMPUTE_WH' SCHEDULE = 'USING CRON 0 6 * * MON UTC' AS CALL DOCGEN.RUN_ACCESS_REVIEW();

CREATE OR REPLACE VIEW DOCGEN.V_ACTIVE_MODEL_FOR_FEATURE AS SELECT r.FEATURE_KEY, r.PRIORITY, m.MODEL_ID, m.MODEL_NAME, m.PROVIDER, m.MODEL_VERSION FROM DOCGEN.MODEL_ROUTING_RULE r JOIN DOCGEN.MODEL_REGISTRY m ON r.MODEL_ID = m.MODEL_ID WHERE r.ACTIVE = TRUE ORDER BY r.FEATURE_KEY, r.PRIORITY;

CREATE OR REPLACE VIEW DOCGEN.V_ADMIN_ACTIVITY AS SELECT a.ACTION_ID, a.ADMIN_USER, a.ACTION, a.TARGET, a.ACTION_TS FROM DOCGEN.ADMIN_ACTIONS a ORDER BY a.ACTION_TS DESC;

CREATE OR REPLACE VIEW DOCGEN.V_ADMIN_AUDIT_SUMMARY_07 AS SELECT ACTION_ID, ADMIN_ID, ACTION, TARGET_REF, ACTION_AT FROM DOCGEN.ADMIN_ACTIONS_07 ORDER BY ACTION_AT DESC;

CREATE OR REPLACE VIEW DOCGEN.V_ADMIN_DASHBOARD AS SELECT (SELECT COUNT(*) FROM DOCGEN.BILLING_RUN) AS billing_runs, (SELECT COUNT(*) FROM DOCGEN.EVIDENCE_BUNDLE) AS evidence_count, (SELECT COUNT(*) FROM DOCGEN.INCIDENTS WHERE STATUS = 'OPEN') AS open_incidents;

CREATE OR REPLACE VIEW DOCGEN.V_ADMIN_ROLES AS SELECT ROLE_ID, NAME, CREATED_AT FROM DOCGEN.ADMIN_ROLES ORDER BY CREATED_AT DESC;

CREATE OR REPLACE VIEW DOCGEN.V_ADMIN_SIGNATURE_SUMMARY AS SELECT COUNT(DISTINCT BUNDLE_ID) AS TOTAL_BUNDLES, SUM(CASE WHEN STATUS='COMPLETED' THEN 1 ELSE 0 END) AS COMPLETED FROM DOCGEN.FINALIZED_BUNDLES;

CREATE OR REPLACE VIEW DOCGEN.V_ALERT_DASHBOARD AS SELECT ALERT_NAME, COUNT(*) AS COUNT, MAX(LOGGED_AT) AS LAST_AT FROM DOCGEN.ALERT_LOG GROUP BY ALERT_NAME;

CREATE OR REPLACE VIEW DOCGEN.V_BILLING_OVERVIEW AS SELECT ACCOUNT_ID, SUM(AMOUNT) AS TOTAL_BILLED FROM DOCGEN.BILLING_LINE_ITEM GROUP BY ACCOUNT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_BILLING_TRENDS AS SELECT DATE_TRUNC('DAY', CREATED_AT) AS DAY, SUM(AMOUNT) AS AMOUNT FROM DOCGEN.BILLING_LINE_ITEM GROUP BY DAY ORDER BY DAY DESC;

CREATE OR REPLACE VIEW DOCGEN.V_CAPACITY_UTILIZATION AS SELECT PLAN_ID, AVG((VALUE:usage)::NUMBER) AS AVG_USAGE FROM DOCGEN.CAPACITY_USAGE GROUP BY PLAN_ID;

CREATE OR REPLACE VIEW DOCGEN.V_COMPLIANCE_DASHBOARD AS SELECT TENANT_ID, COUNT(DISTINCT BUNDLE_ID) AS BUNDLES, SUM(CASE WHEN ARCHIVED_AT IS NOT NULL THEN 1 ELSE 0 END) AS ARCHIVED FROM DOCGEN.SIGNATURE_EVIDENCE_BUNDLES GROUP BY TENANT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_COMPLIANCE_OVERVIEW AS SELECT TEMPLATE_ID, COUNT(*) AS EXECUTIONS, SUM(CASE WHEN RESULT:status='FAIL' THEN 1 ELSE 0 END) AS FAILS FROM DOCGEN.COMPLIANCE_EXECUTIONS GROUP BY TEMPLATE_ID;

CREATE OR REPLACE VIEW DOCGEN.V_FRAUD_DASHBOARD AS SELECT STATUS, COUNT(*) AS CASES FROM DOCGEN.FRAUD_CASES GROUP BY STATUS;

CREATE OR REPLACE VIEW DOCGEN.V_HEALTH_OVERVIEW AS SELECT COMPONENT, STATUS, MAX(CHECKED_AT) AS LAST_CHECK FROM DOCGEN.HEALTH_CHECKS GROUP BY COMPONENT, STATUS;

CREATE OR REPLACE VIEW DOCGEN.V_INCIDENT_PLANS AS SELECT PLAN_ID, NAME, CREATED_AT FROM DOCGEN.INCIDENT_RESPONSE_PLANS ORDER BY CREATED_AT DESC;

CREATE OR REPLACE VIEW DOCGEN.V_INCIDENT_TRENDS AS SELECT DATE_TRUNC('WEEK', CREATED_AT) AS WEEK, COUNT(*) AS INCIDENTS FROM DOCGEN.INCIDENT_REPORTS GROUP BY WEEK ORDER BY WEEK DESC;

CREATE OR REPLACE VIEW DOCGEN.V_INCIDENT_WORKFLOW AS SELECT i.INCIDENT_ID, i.TITLE, i.STATUS, e.REPORTS FROM DOCGEN.INCIDENTS i LEFT JOIN (SELECT INCIDENT_ID, ARRAY_AGG(OBJECT_CONSTRUCT('REPORT_ID', REPORT_ID, 'SEVERITY', SEVERITY)) AS REPORTS FROM DOCGEN.INCIDENT_REPORTS GROUP BY INCIDENT_ID) e ON e.INCIDENT_ID = i.INCIDENT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_INDEX_OVERVIEW AS SELECT INDEX_NAME, COUNT(*) AS SHARD_COUNT FROM DOCGEN.INDEX_SHARD_MANIFEST GROUP BY INDEX_NAME;

CREATE OR REPLACE VIEW DOCGEN.V_OPERATOR_ACTIVITY AS SELECT o.ACTION_ID, o.OPERATOR, o.ACTION, o.TARGET, o.CREATED_AT FROM DOCGEN.OPERATOR_ACTIONS o ORDER BY o.CREATED_AT DESC;

CREATE OR REPLACE VIEW DOCGEN.V_OPERATOR_SCORECARD AS SELECT OPERATOR, COUNT(*) AS ACTIONS, MAX(CREATED_AT) AS LAST_ACTION FROM DOCGEN.OPERATOR_ACTION_LOG GROUP BY OPERATOR;

CREATE OR REPLACE VIEW DOCGEN.V_OPERATOR_TRAINING_SUMMARY AS SELECT OPERATOR, COUNT(*) AS COMPLETED FROM DOCGEN.TRAINING_HISTORY GROUP BY OPERATOR;

CREATE OR REPLACE VIEW DOCGEN.V_PRIVACY_AUDIT AS SELECT PA.*, PV.DESCRIPTION FROM DOCGEN.PRIVACY_ACTIONS_ADMIN PA LEFT JOIN DOCGEN.PRIVACY_VIOLATIONS PV ON PA.VIOLATION_ID = PV.PV_ID;

CREATE OR REPLACE VIEW DOCGEN.V_PRIVACY_DASHBOARD AS SELECT TENANT_ID, COUNT(*) AS REQUESTS, SUM(CASE WHEN STATUS='COMPLETED' THEN 1 ELSE 0 END) AS COMPLETED FROM DOCGEN.PRIVACY_REQUESTS GROUP BY TENANT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_PROVIDER_OVERVIEW AS SELECT PROVIDER_ID, AVG((METRICS:latency_ms)::FLOAT) AS AVG_LATENCY FROM DOCGEN.PROVIDER_PERFORMANCE, LATERAL FLATTEN(INPUT => METRICS) GROUP BY PROVIDER_ID;

CREATE OR REPLACE VIEW DOCGEN.V_PROVIDER_STATUS AS SELECT PROVIDER_ID, STATUS, LAST_UPDATED FROM DOCGEN.SIGNATURE_PROVIDER_STATUS;

CREATE OR REPLACE VIEW DOCGEN.V_RECENT_ALERTS AS SELECT ALERT_ID, ALERT_TYPE, ENTITY_REF, CREATED_AT FROM DOCGEN.SIGNATURE_ALERTS ORDER BY CREATED_AT DESC LIMIT 200;

CREATE OR REPLACE VIEW DOCGEN.V_RECENT_SIGNATURE_ACTIVITY AS SELECT EVENT_ID, BUNDLE_ID, EVENT_TYPE, EVENT_TS FROM DOCGEN.TIMELINE_EVENTS ORDER BY EVENT_TS DESC LIMIT 1000;

CREATE OR REPLACE VIEW DOCGEN.V_REPORTING_JOB_RESULTS AS SELECT RESULT_ID, JOB_ID, NAME, STATUS, GENERATED_AT FROM DOCGEN.REPORTING_JOB_RESULTS ORDER BY GENERATED_AT DESC;

CREATE OR REPLACE VIEW DOCGEN.V_SECURITY_DASHBOARD AS SELECT SEVERITY, COUNT(*) AS INCIDENTS FROM DOCGEN.SECURITY_INCIDENTS GROUP BY SEVERITY;

CREATE OR REPLACE VIEW DOCGEN.V_SIGNATURE_METRICS AS SELECT v.METRIC_ID, v.TENANT_ID, v.METRIC_NAME, v.METRIC_VALUE, v.GENERATED_AT FROM DOCGEN.REPORTING_METRICS v;

CREATE OR REPLACE VIEW DOCGEN.V_SIM_AUDIT AS SELECT QUERY_HASH, COUNT(*) AS CALLS, MAX(CREATED_AT) AS LAST_CALL FROM DOCGEN.SIMILARITY_QUERY_HISTORY GROUP BY QUERY_HASH;

CREATE OR REPLACE VIEW DOCGEN.V_SLA_DASHBOARD AS SELECT SLO_ID, NAME, (SELECT MAX(RECORDED_AT) FROM DOCGEN.SLO_HISTORY WHERE SLO_ID = SLO_ID) AS LAST_METRIC FROM DOCGEN.SLO_CONFIGS;

CREATE OR REPLACE VIEW DOCGEN.V_TEMPLATE_SEARCH AS SELECT t.TEMPLATE_ID, t.TAG, tm.METRIC_VALUE FROM DOCGEN.TEMPLATE_TAGS t LEFT JOIN DOCGEN.TEMPLATE_METRICS tm ON t.TEMPLATE_ID = tm.TEMPLATE_ID;

CREATE OR REPLACE VIEW DOCGEN.V_TENANT_AUDIT_SUMMARY AS SELECT TENANT_ID, COUNT(*) AS AUDIT_EVENTS, MAX(AUDIT_TS) AS LAST_AUDIT FROM DOCGEN.ADMIN_AUDIT GROUP BY TENANT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_TENANT_COMPLIANCE_OVERVIEW AS SELECT TENANT_ID, COUNT(DISTINCT BUNDLE_ID) AS BUNDLES, SUM(CASE WHEN FINALIZED='true' THEN 1 ELSE 0 END) AS FINALIZED FROM DOCGEN.SIGNATURE_EVIDENCE_BUNDLES GROUP BY TENANT_ID;

CREATE OR REPLACE VIEW DOCGEN.V_USER_SESSION_SUMMARY AS SELECT USER_REF, COUNT(*) AS SESSIONS, MAX(EVENT_AT) AS LAST_SEEN FROM DOCGEN.LOGIN_EVENTS GROUP BY USER_REF;

INSERT INTO DOCGEN.ACCOUNTS (ACCOUNT_ID, NAME) VALUES ('acct-1','Demo Account');

INSERT INTO DOCGEN.BACKUP_DOCUMENT_ARCHIVE_CLONE SELECT * FROM DOCGEN.DOCUMENT_ARCHIVE WHERE CREATED_AT < DATEADD('day', -1, CURRENT_TIMESTAMP());

INSERT INTO DOCGEN.CI_ARTIFACTS_REGISTRY (ARTIFACT_ID, NAME, DESCRIPTION) VALUES (UUID_STRING(), 'smoke_demo','Demo smoke artifact registered');

INSERT INTO DOCGEN.DOCUMENT_ASSEMBLY_JOBS (ASSEMBLY_ID, TEMPLATE_ID, ACCOUNT_ID, STATUS) VALUES ('asm-1','tmpl-1','acct-1','PENDING');

INSERT INTO DOCGEN.FEATURE_FLAGS (FLAG_ID, NAME, ENABLED) VALUES (UUID_STRING(), 'ENABLE_HSM', FALSE);

INSERT INTO DOCGEN.OPERATOR_ROLES (ROLE_ID, ROLE_NAME, DESCRIPTION) VALUES (UUID_STRING(), 'signature_ops', 'Operator role for signature platform');

INSERT INTO DOCGEN.PROVIDER_BILLING_EVENTS (EVENT_ID, PROVIDER_ID, AMOUNT) VALUES (UUID_STRING(), 'prov-demo-1', 0.50);

INSERT INTO DOCGEN.RETENTION_POLICY (POLICY_ID, ENTITY_NAME, RETENTION_DAYS, ACTION, ACTIVE) VALUES ('ret_doc_365', 'DOCUMENT_ARCHIVE', 365, 'Purge', TRUE);

INSERT INTO DOCGEN.SEQ_IDS VALUES ('request_seq',0);

INSERT INTO DOCGEN.SIGNATURE_ALERTS (ALERT_ID, ALERT_TYPE, ENTITY_REF, DETAILS) VALUES (UUID_STRING(), 'OCSP_FAIL', 'cert-1', PARSE_JSON('{"reason":"ocsp-unavailable"}'));

INSERT INTO DOCGEN.SIGNATURE_EVENT_TYPES (EVENT_TYPE, DESCRIPTION) VALUES ('REMINDER_SENT','Notification reminder sent'),('EXPIRED','Signing window expired');

INSERT INTO DOCGEN.SIGNATURE_EVENT_TYPES (EVENT_TYPE, DESCRIPTION) VALUES ('VIEWED','Signer viewed document'), ('SIGNED','Signer completed signature'), ('DECLINED','Signer declined');

INSERT INTO DOCGEN.SIGNATURE_NOTIFICATIONS (NOTIF_ID, REQUEST_ID, SIGNER_ID, CHANNEL, STATUS) VALUES (UUID_STRING(), 'req-0001','signer-1','email','PENDING');

INSERT INTO DOCGEN.SIGNATURE_NOTIFICATION_TEMPLATES (TEMPLATE_ID, CHANNEL, SUBJECT, BODY) VALUES ('tmpl-email-1','email','Please sign','Dear {{name}}, please sign {{document}}');

INSERT INTO DOCGEN.SIGNATURE_PROVIDER_CONFIG (PROVIDER_ID, ACCOUNT_ID, PROVIDER_NAME, CONFIG, PRIORITY) VALUES ('prov-demo-1','acct-1','DemoProvider',PARSE_JSON('{"endpoint":"https://demo-provider.local"}'),0);

INSERT INTO DOCGEN.SIGNATURE_RATECARD_EVENTS (EVENT_ID, ACCOUNT_ID, TEMPLATE_ID, EVENT_TYPE, EVENT_VALUE) VALUES (UUID_STRING(),'acct-1','tmpl-1','SIGNATURE_COMPLETED',PARSE_JSON('{"qty":1,"price":0.5}'));

INSERT INTO DOCGEN.SIGNATURE_RATECARD_EVENTS (EVENT_ID, ACCOUNT_ID, TEMPLATE_ID, EVENT_TYPE, EVENT_VALUE) VALUES (UUID_STRING(),'acct-1','tmpl-1','SIGNATURE_CREATED',PARSE_JSON('{"qty":1}'));

INSERT INTO DOCGEN.SIGNATURE_REQUESTS (REQUEST_ID, DOCUMENT_ID, ACCOUNT_ID, CREATED_BY, STATUS) VALUES ('req-0001','doc-0001','acct-1','system','PENDING');

INSERT INTO DOCGEN.SIGNATURE_STATUS_LU (STATUS_KEY, DESCRIPTION) VALUES ('PENDING','Awaiting action'), ('SIGNED','Signed by signer'), ('COMPLETED','All signers completed'), ('REVOKED','Signature revoked');

INSERT INTO DOCGEN.SIGNERS (SIGNER_ID, REQUEST_ID, ACCOUNT_ID, SIGNER_EMAIL, SIGNER_NAME) VALUES ('signer-1','req-0001','acct-1','alice@example.com','Alice');

INSERT INTO DOCGEN.USER_SESSIONS (SESSION_ID, USER_ID) VALUES (UUID_STRING(), 'user-demo-1');




-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: snowpark/procedures/ups ert_signature_webhook.py -- # UPSERT_SIGNATURE_WEBHOOK(stage_payload VARIANT) - idempotent MERGE-style ingestion from snowflake.snowpark import Session import uuid, json def upsert_signature_webhook(session: Session, stage_payload): data = stage_payload req_id = data.get('request_id') or str(uuid.uuid4()) session.sql(f""" MERGE INTO DOCGEN.SIGNATURE_EVENTS tgt USING (SELECT PARSE_JSON('{json.dumps(data)}') AS payload) src ON tgt.EVENT_ID = src.payload:event_id::STRING WHEN NOT MATCHED THEN INSERT (EVENT_ID, REQUEST_ID, DOCUMENT_ID, SIGNER_ID, ACCOUNT_ID, EVENT_TYPE, EVENT_PAYLOAD, EVENT_TS) VALUES (src.payload:event_id::STRING, src.payload:request_id::STRING, src.payload:document_id::STRING, src.payload:signer_id::STRING, src.payload:account_id::STRING, src.payload:event_type::STRING, src.payload, CURRENT_TIMESTAMP());

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: snowpark/procedures/ups ert_signature_webhook.py # UPSERT_SIGNATURE_WEBHOOK(stage_payload VARIANT) - idempotent MERGE-style ingestion from snowflake.snowpark import Session import uuid, json def upsert_signature_webhook(session: Session, stage_payload): data = stage_payload req_id = data.get('request_id') or str(uuid.uuid4()) session.sql(f""" MERGE INTO DOCGEN.SIGNATURE_EVENTS tgt USING (SELECT PARSE_JSON('{json.dumps(data)}') AS payload) src ON tgt.EVENT_ID = src.payload:event_id::STRING WHEN NOT MATCHED THEN INSERT (EVENT_ID, REQUEST_ID, DOCUMENT_ID, SIGNER_ID, ACCOUNT_ID, EVENT_TYPE, EVENT_PAYLOAD, EVENT_TS) VALUES (src.payload:event_id::STRING, src.payload:request_id::STRING, src.payload:document_id::STRING, src.payload:signer_id::STRING, src.payload:account_id::STRING, src.payload:event_type::STRING, src.payload, CURRENT_TIMESTAMP());

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1551_signature_monitoring_alert_rules.sql    




-- Show-once integration key hash table pattern (store only KDF/hash) for admin integrations @36 @66;

-- User u : [SELECT Email FROM User WHERE IsActive = true LIMIT 5]) if (u.Email != null) toAddrs.add(u.Email);

-- User: - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4101_signature_admin_alert_acknowledgements.sql USE DATABASE AI_FEATURE_HUB;

-- User: -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4101_signature_admin_alert_acknowledgements.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders. With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste. -- - Anara: Emitting next 130 Snowflake DDL artifacts (files 896–1025) ready to copy/paste. @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1342_signature_pipeline_stages.sql -- Create stages and file formats for signature events and evidence exports per deployment patterns @1 @6. USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1501_signature_webhook_raw.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1851_signature_feature_usage_ledger.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 100 Snowflake-only E-Signature artifacts (DDL, Snowpark procedures, TASKs, views and helper stubs) ready to copy/paste @31 @36;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1342_signature_pipeline_stages.sql -- Create stages and file formats for signature events and evidence exports per deployment patterns @1 @6. -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1501_signature_webhook_raw.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 100 artifacts output at a time.Hope the count is 100 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1851_signature_feature_usage_ledger.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: -- Continuing Snowflake E-Sign DDL tranche;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: Emitting next 130 Snowflake DDL artifacts (files 1109–1238) ready to copy/paste;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1209_signature_operator_shift_audit.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/301_signature_request_history.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/5741_signature_audit_checksums.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/5871_signature_admin_alert_subscriptions.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6071_signature_operator_incident_priorities.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6252_signature_admin_alert_suppression_rules.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6252_signature_onchain_anchor_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6346_signature_template_change_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6421_signature_quality_review_queue.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6501_signature_provider_sla_history.sql @31 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/651_signature_provider_billing_invoices.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6694_signature_tenant_notification_rules.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6824_signature_admin_escalation_notifications.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7058_signature_document_qos_profiles.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/707_signature_admin_alerts.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/707_signature_template_retention_policies.sql @31 @24 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7101_signature_api_key_rotation_history.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7188_signature_service_config_keys.sql @31 @24 @1 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7255_signature_manual_review_templates.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7385_signature_template_review_assignments.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7421_signature_policy_exception_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7481_signature_incident_response_playbooks.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7561_signature_template_change_metrics.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7611_signature_access_policy_exceptions.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7671_signature_policy_versions.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7745_signature_alert_subscription_policies.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7801_signature_device_attestation_records.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7861_signature_risk_assessment_templates.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/7951_signature_incident_response_runs.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8001_signature_operational_review_followups.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8131_signature_api_key_rotation_audit.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8301_signature_provenance_edges.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8551_signature_operational_runbook_entries.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8601_signature_access_policy_templates.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8731_signature_operator_availability_calendar.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8861_signature_admin_alert_subscriptions.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/8932_signature_docgen_content_drift_alerts.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9051_signature_policy_change_log.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9051_signature_session_termination_jobs.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9201_signature_audit_summary_mv.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9201_signature_model_drift_retraining_results.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9251_signature_session_archive.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9381_signature_operator_incident_playbooks.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9456_signature_statement_templates.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9537_signature_operator_oncall_rota.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/9731_signature_inspector_checklists.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts (files 766–895) ready to copy/paste. @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- Continuing Snowflake E-Sign DDL tranche;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- Emitting next 130 Snowflake DDL artifacts for E-Sign module @1;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- Generated Snowflake E-Signature DDL tranche following Snowpark/DDL patterns @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- These DDL artifacts follow the Snowflake E-Sign delivery and registration patterns in your workspace @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of Snowflake E-Signature DDL artifacts (DDL + administrative and telemetry tables) following the Snowpark/External Function and evidence/archive patterns in your workspace @31 @24 @52;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of next 130 Snowflake DDL artifacts (sql/ddl/577 through sql/ddl/706) for the E-Signature module. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of next 130 Snowflake DDL artifacts. @55 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of next 130 Snowflake artifacts (DDL, Snowpark procedures, TASKs, External Function templates, FAISS skeletons, and registration scripts) per your Snowflake E-Sign delivery patterns. @51 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 130 Snowflake DDL artifacts (copy/paste-ready) following the Snowflake E-Signature patterns in your workspace. @1 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 130 Snowflake DDL artifacts (copy/paste-ready) following the Snowflake E-Signature patterns in your workspace. @31 @58;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 130 Snowflake DDL artifacts for the E-Signature module (copy/paste-ready files) per the Snowflake delivery patterns in your workspace. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 130 Snowflake E-Sign artifacts (DDL, stored procedures, TASKs, Views, and External Function templates) ready to copy/paste. @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing generation of Snowflake E-Signature DDL artifacts. @31 @24 @36;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts (files 1026–1155) ready to copy/paste per the Snowflake E-Sign delivery patterns in your workspace. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts (files 1109–1238) ready to copy/paste;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts (files 1156–1285) ready to copy/paste following the Snowflake E-Sign delivery patterns in your workspace. @31 @24 @54;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts (sql/ddl/6122_signature_* through sql/ddl/6251_signature_*) per your Snowflake E-Sign generation patterns @1 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 130 Snowflake DDL artifacts for the E-Signature module following the Snowpark/External Function and evidence/PKI patterns in your workspace @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 130 Snowflake DDL artifacts (copy/paste-ready) for the E-Signature module. @1 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 130 Snowflake DDL artifacts for the E-Signature module. @31 @24 @59;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1209_signature_operator_shift_audit.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/301_signature_request_history.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/5741_signature_audit_checksums.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/5871_signature_admin_alert_subscriptions.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6071_signature_operator_incident_priorities.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6252_signature_admin_alert_suppression_rules.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6252_signature_onchain_anchor_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6346_signature_template_change_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6421_signature_quality_review_queue.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6501_signature_provider_sla_history.sql @31 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/651_signature_provider_billing_invoices.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6694_signature_tenant_notification_rules.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6824_signature_admin_escalation_notifications.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7058_signature_document_qos_profiles.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/707_signature_admin_alerts.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7101_signature_api_key_rotation_history.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7188_signature_service_config_keys.sql @31 @24 @1 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7255_signature_manual_review_templates.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7385_signature_template_review_assignments.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7421_signature_policy_exception_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7481_signature_incident_response_playbooks.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7561_signature_template_change_metrics.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7611_signature_access_policy_exceptions.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7671_signature_policy_versions.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7745_signature_alert_subscription_policies.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7801_signature_device_attestation_records.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7861_signature_risk_assessment_templates.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/7951_signature_incident_response_runs.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8001_signature_operational_review_followups.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8131_signature_api_key_rotation_audit.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8301_signature_provenance_edges.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8551_signature_operational_runbook_entries.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8601_signature_access_policy_templates.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8731_signature_operator_availability_calendar.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8861_signature_admin_alert_subscriptions.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/8932_signature_docgen_content_drift_alerts.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9051_signature_policy_change_log.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9051_signature_session_termination_jobs.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9201_signature_audit_summary_mv.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9201_signature_model_drift_retraining_results.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9251_signature_session_archive.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9381_signature_operator_incident_playbooks.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9456_signature_statement_templates.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9537_signature_operator_oncall_rota.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/9731_signature_inspector_checklists.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Generated Snowflake DDL artifacts follow the Snowpark/External Function and E-Sign patterns in your workspace. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: The following 130 Snowflake DDL artifacts continue the E-Signature module per the Snowflake patterns in your workspace. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: These DDL artifacts continue the Snowflake E-Signature module generation and follow the Snowpark/registration and evidence/archive patterns in your workspace @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste --- - Anara: FILENAME: sql/ddl/707_signature_template_retention_policies.sql @31 @24 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3001_signature_compliance_contact_directory.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3001_signature_legal_hold_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3051_signature_task_execution_audit.sql @31 @24 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3201_signature_recovery_token_store.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3280_signature_payment_disputes.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3430_signature_entitlement_audit_trail.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3501_signature_account_activity_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3701_signature_policy_audit_snapshots.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/3780_signature_csr_approve_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4196_signature_compliance_dashboard_alerts.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4251_signature_customer_satisfaction_surveys.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4251_signature_user_access_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4301_signature_agent_config.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4481_signature_policy_change_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4546_signature_partner_integration_logs.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4657_signature_template_retirement_schedule.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4733_signature_workflow_event_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4795_signature_customer_onboarding_checklists.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4858_signature_session_timeout_policies.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/4923_signature_archival_retention_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/5001_signature_transaction_audit_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6242_signature_user_device_authn_6242.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6301_signature_template_revision_index_6301.sql @31 @24 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6334_signature_template_fork_requests_6334.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/6408_signature_execution_trace_6408.sql — creates a table to store low-level execution traces for signature workflows for audit and debugging @138 USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: -- -- Generated per Snowflake E-Signature patterns @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 150 Snowflake DDL artifacts (files 6034–6183) as copy/paste-ready CREATE TABLE statements that follow the Snowflake E-Sign signature-domain and operational patterns @1 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 150 Snowflake DDL artifacts (files 6184–6333) following Snowpark/External Function and evidence/PKI patterns in your Snowflake design artifacts. @1;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 150 SQL DDL artifacts (files 4046–4195) for the E-Signature module. @156 @55 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 150 SQL DDL artifacts for the E-Signature module. @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 150 Snowflake DDL artifacts (copy/paste-ready) following the Snowpark / External Function / evidence & PKI patterns in your workspace @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 150 Snowflake DDL artifacts (files 3901–4050) for the E-Signature module now. @1 @24 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 150 Snowflake DDL artifacts (copy/paste-ready) for the E-Signature module per your requested patterns and repo layout @31 @24 @36;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 150 Snowflake DDL artifacts (copy/paste-ready) for the E-Signature module. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3001_signature_compliance_contact_directory.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3001_signature_legal_hold_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3051_signature_task_execution_audit.sql @31 @24 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3201_signature_recovery_token_store.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3280_signature_payment_disputes.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3430_signature_entitlement_audit_trail.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3501_signature_account_activity_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3701_signature_policy_audit_snapshots.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/3780_signature_csr_approve_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4196_signature_compliance_dashboard_alerts.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4251_signature_customer_satisfaction_surveys.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4251_signature_user_access_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4301_signature_agent_config.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4481_signature_policy_change_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4657_signature_template_retirement_schedule.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4733_signature_workflow_event_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4795_signature_customer_onboarding_checklists.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4858_signature_session_timeout_policies.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4923_signature_archival_retention_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/5001_signature_transaction_audit_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6242_signature_user_device_authn_6242.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6301_signature_template_revision_index_6301.sql @31 @24 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6334_signature_template_fork_requests_6334.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/6408_signature_execution_trace_6408.sql — creates a table to store low-level execution traces for signature workflows for audit and debugging @138 -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2751_signature_legal_notice_templates.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission: next 150 Snowflake DDL artifacts (sql/ddl/2601–2750) following the E-Signature Snowflake patterns and registration/runbook guidance. @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 150 Snowflake DDL artifacts (sql/ddl/2701–2850) following the Snowflake E-Signature generation and registration patterns in your workspace @1 @24 @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts output at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2751_signature_legal_notice_templates.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1266_signature_operator_incident_escalation_actions.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1376_signature_policy_violation_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1466_signature_document_edit_history.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1602_signature_api_throttle_profiles.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1602_signature_session_fragment_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1701_signature_operation_telemetry.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1821_signature_notification_delivery_logs.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/1951_signature_audit_retention_index.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2101_signature_api_usage_metrics.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2175_signature_partner_onboarding_requests.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2241_signature_incident_service_mappings.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/2301_signature_ops_misc_2301.sql USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 200 Snowflake DDL artifacts (files 2001–2200) following the Snowpark/External Function and evidence/PKI patterns in your workspace @31;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 200 Snowflake DDL artifacts (files 2175–2374) following the Snowpark/External Function and evidence/PKI patterns in your workspace @155 @1 @55;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 200 Snowflake DDL artifacts (files 1266–1465) ready to copy/paste following the Snowflake E-Sign delivery patterns in your workspace @31 @24 @153;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 200 Snowflake DDL artifacts (files 1551–1750) ready to copy/paste following the Snowflake E-Sign delivery patterns in your workspace @31 @24 @56;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting next 200 Snowflake DDL artifacts (files 1751–1950) ready to copy/paste following the Snowflake E-Sign delivery patterns in your workspace @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Emitting the next 200 Snowflake DDL artifacts (sql/ddl/2501–2700) following the Snowflake E-Sign artifact and registration patterns. @31 @24;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1266_signature_operator_incident_escalation_actions.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1376_signature_policy_violation_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1466_signature_document_edit_history.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1602_signature_api_throttle_profiles.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1602_signature_session_fragment_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1701_signature_operation_telemetry.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1821_signature_notification_delivery_logs.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/1951_signature_audit_retention_index.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2101_signature_api_usage_metrics.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2175_signature_partner_onboarding_requests.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2241_signature_incident_service_mappings.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 200 artifacts output at a time.Hope the count is 200 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/2301_signature_ops_misc_2301.sql -- USE DATABASE AI_FEATURE_HUB;

-- User: continue with the generation of Salesforce related artifacts of onboarding module and dont ask me comments, just keep generating the full implementation without any placeholders.With minimum of 90 artifacts generation or output to screen at a time.Hope we dont miss the 90 count of artifacts everytime we generate the tranch.everything is copy/paste. - Anara: Below are 90 SFDX-ready Salesforce Apex artifacts (45 fully implemented onboarding service classes + 45 matching @isTest unit tests) implementing defensive Schema guards, idempotent patterns, ActivationAudit-style audit writes via dynamic SObject, Integration_Call-style logging via dynamic SObject, and governor-safe async patterns (Queueable) following your onboarding runbook patterns @31 @54 @1 File: force-app/main/default/classes/Onb_2001_TenantProvisionService.cls public with sharing class Onb_2001_TenantProvisionService { public static Id provisionTenant(Map<String, Object> payload) { try { if (payload == null || !payload.containsKey('name')) return null;

-- User: continue with the generation of Salesforce related artifacts of onboarding module and dont ask me comments, just keep generating the full implementation without any placeholders.With minimum of 90 artifacts generation or output to screen at a time.Hope we dont miss the 90 count of artifacts everytime we generate the tranch.everything is copy/paste. -- - Anara: Below are 90 SFDX-ready Salesforce Apex artifacts (45 fully implemented onboarding service classes + 45 matching @isTest unit tests) implementing defensive Schema guards, idempotent patterns, ActivationAudit-style audit writes via dynamic SObject, Integration_Call-style logging via dynamic SObject, and governor-safe async patterns (Queueable) following your onboarding runbook patterns @31 @54 @1 -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 150 artifacts generation / output to screen at a time.Hope the count is 150 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/4546_signature_partner_integration_logs.sql -- USE DATABASE AI_FEATURE_HUB;

-- call guidance. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- call guidance. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- call logging table for External Functions and middleware call audits @217 @236;

-- callbacks to third-party systems for audit & retry (webhook delivery to external listeners). @31 @24 @52 

-- callout to middleware via Named Credential (callout not executed here) // record job run dynamically if (Schema.getGlobalDescribe().containsKey('Job_Run__c')) { SObject job = Schema.getGlobalDescribe().get('Job_Run__c').newSObject();

-- calls back to record the manifest entry. CREATE OR REPLACE PROCEDURE DOCGEN.REGISTER_INDEX_SNAPSHOT(snapshot_id STRING, index_name STRING, s3_prefix STRING, shard_count NUMBER, index_version STRING, checksum STRING) RETURNS STRING LANGUAGE PYTHON RUNTIME_VERSION='3.10' HANDLER='register_index_snapshot' IMPORTS = ('@~/procedures/register_index_snapshot.py');

-- comments (Snowflake doesn't have traditional indexes;

-- comments and clustering guidance (demo) -- USE DATABASE AI_FEATURE_HUB;

-- comments and clustering guidance (demo) USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready Snowflake DDL artifacts for the E-Signature module emitted in this tranche following your Snowpark/DDL, External Function, FAISS snapshot and evidence/archive patterns @1 @3 @31 - User: [[mention:k9o0gt4m3otk178iywmmzev4:SnowflakeESignV12txt:DOCUMENT]] Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste. - Anara: FILENAME: sql/ddl/1001_signature_requests.sql -- Emitted per Snowflake_E-Sign_V1.2 patterns and registration order. @1 @3 USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready Snowflake DDL artifacts for the E-Signature module emitted in this tranche following your Snowpark/DDL, External Function, FAISS snapshot and evidence/archive patterns @1 @3 @31 -- - User: [[mention:k9o0gt4m3otk178iywmmzev4:SnowflakeESignV12txt:DOCUMENT]] Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste. -- - Anara: FILENAME: sql/ddl/1001_signature_requests.sql -- Emitted per Snowflake_E-Sign_V1.2 patterns and registration order. @1 @3 -- USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready and follows Snowflake E-Sign DDL patterns. -- Generated per the Snowflake E-Sign artifact conventions. @31 @24 -- - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: FILENAME: sql/ddl/5611_signature_token_revocations.sql -- USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready and follows Snowflake E-Sign DDL patterns. Generated per the Snowflake E-Sign artifact conventions. @31 @24 - User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste - Anara: FILENAME: sql/ddl/5611_signature_token_revocations.sql USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready) -- USE DATABASE AI_FEATURE_HUB;

-- copy/paste-ready) USE DATABASE AI_FEATURE_HUB;

-- create a simple backup table copy for DOCUMENT_ARCHIVE (for dev recovery) -- USE DATABASE AI_FEATURE_HUB;

-- create a simple backup table copy for DOCUMENT_ARCHIVE (for dev recovery) USE DATABASE AI_FEATURE_HUB;

-- create tenant record defensively using sObject newSObject if (!Schema.getGlobalDescribe().containsKey('Tenant__c')) return null;

-- createRun('JR','PROV');

-- createRun(String name, String type) { try { if (!Schema.getGlobalDescribe().containsKey('Job_Run__c')) return null;

-- createVersion(Id templateId, String body) { try { if (!Schema.getGlobalDescribe().containsKey('Template_Version__c')) return null;

-- createVersion(null,'b');

-- created = new List<Id>();

-- created.add(r.getId());

-- created;

-- delete olds;

-- described in the Evidence design. @28 @31 -- USE DATABASE AI_FEATURE_HUB;

-- described in the Evidence design. @28 @31 USE DATABASE AI_FEATURE_HUB;

-- described in your Snowflake design artifacts). @4 @102;

-- grants for operational control of template access per tenant @31 @170;

-- grants scaffold as starting point per least-privilege guidance @1 @6. 

-- insert a;

-- insert aa;

-- insert e;

-- insert ic;

-- insert job;

-- insert m;

-- insert r;

-- insert t;

-- insert u;

-- insert v;

-- insert(rec, false);

-- insert(rows, false);

-- insert(t, false);

-- show-once UX for Admin Console. @124 @16 

-- show-once key operations and policy changes. @104 @31;

-- show-once patterns and scoped access. @26 @24;

-- update dlq;

-- update job status dynamically if (Schema.getGlobalDescribe().containsKey('VerificationJob__c')) { SObject v = Schema.getGlobalDescribe().get('VerificationJob__c').newSObject();

-- update(v,false);

-- updates;

-- use library for reusable clause inserts in assemblies. @338 @31;

-- use library for reusable text snippets used during assembly and AI clause generation @31 @625;

-- use to detect outages and trigger failover @1 @6. 

-- use, storage, and retention to ensure privacy controls. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- use, storage, and retention to ensure privacy controls. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- use. @31 @24 @52 

-- use. @31 @24 @52 

-- used by Admin Console for A/B or canary routing @180 @176;

-- used by CI smoke tests to allow safe teardown and validation. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- used by CI smoke tests to allow safe teardown and validation. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- used by FAISS snapshot loader and container orchestration @84 @31;

-- used by FAISS snapshot loader patterns. @31 @66;

-- used by assembly service and admin UI @131 @130;

-- used by biometric/trust scoring and retrieval @229 @176;

-- used by container pull @31 @84;

-- used by document assembly and preview flows. @97 @31;

-- used by escalation/apply logic to map thresholds to actions @1 @6. 

-- used by ingest procedures 

-- used by ingestion logic. @31 @24 @52 -- USE DATABASE AI_FEATURE_HUB;

-- used by ingestion logic. @31 @24 @52 USE DATABASE AI_FEATURE_HUB;

-- used by notification workers. @31 @24 @52 -- USE DATABASE AI_FEATURE_HUB;

-- used by notification workers. @31 @24 @52 USE DATABASE AI_FEATURE_HUB;

-- used by on-call rota and escalation workflows @31 @56;

-- used by provisioning scripts @22 @36;

-- used by scheduled tasks. @112 @31;

-- used by signature validation and compliance investigations @68 @311.;

-- used by smoke and CI tests for signature end-to-end flows. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- used by smoke and CI tests for signature end-to-end flows. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- used by the reconciliation stored-proc @296 -- USE DATABASE AI_FEATURE_HUB;

-- used by the reconciliation stored-proc @296 USE DATABASE AI_FEATURE_HUB;

-- used by verification procedures and evidence capture @3 @51;

-- used by verification procedures. @118 @36;

-- used during signer flows for forensic replay. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- used during signer flows for forensic replay. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- used for DR and restore operations @66 @263 -- - User: [[mention:k9o0gt4m3otk178iywmmzev4:SnowflakeESignV12txt:DOCUMENT]] Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.With minimum of 130 artifacts output at a time.Hope the count is 130 every tranch.Again no comments at the end and no packaging into Zip etc.. everything is copy / paste -- - Anara: Continuing emission of the next 130 Snowflake E-Sign artifacts (DDL, stored procedures, External Function templates, TASKs, UDFs, views, FAISS helpers, registration scripts and smoke-test snippets) following the Snowpark / External Function / FAISS and evidence/PKI patterns in your workspace. @1 @24 @31;

-- used for billing and entitlement audits @203 @36;

-- used for evidence bundle indexing and retrieval. @16 @24;

-- used in FAISS snapshot export. @100 @31;

-- used in FAISS snapshot orchestration. @6 @22 -- USE DATABASE AI_FEATURE_HUB;

-- used in FAISS snapshot orchestration. @6 @22 USE DATABASE AI_FEATURE_HUB;

-- used in anchoring. @34 @41;

-- used in evidence signing or API clients @316 @110;

-- used in signing notifications and evidence packaging. @31 @24 @52 

-- used in verification/analytics. @16 @24;

-- used to render preview PDFs prior to signing. @31 @24 @52

-- used to represent audit chain and derivation @19 @3;

-- used which template, when) for billing and audit correlations. @1 @31 -- USE DATABASE AI_FEATURE_HUB;

-- used which template, when) for billing and audit correlations. @1 @31 USE DATABASE AI_FEATURE_HUB;

-- used. @31 @24 @52 

-- user registry to map operator identities to notification endpoints for paging @1 @6. 

-- uses and their semantics (used by orchestration). @31 @11 



