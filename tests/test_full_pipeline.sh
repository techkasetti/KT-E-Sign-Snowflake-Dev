#!/usr/bin/env bash
# Simple shell harness to run full demo smoke flow
set -e
export SNOW_ACCOUNT="client_prod_001"
export SNOW_USER="svc_docgen"
export SNOW_ROLE="DOCGEN_ADMIN"
# Run ingest (simulate PUT to stage + pipe ingestion)
python3 tools/generate_demo_payloads.py
# (In real flow, upload JSONL to S3 path watched by Pipe)
# Run ingestion proc
snowsql -a $SNOW_ACCOUNT -u $SNOW_USER -r $SNOW_ROLE -q "CALL DOCGEN.INGEST_SIGNATURE_EVENTS();"
# Verify signature via HSM external sign (if present)
snowsql -a $SNOW_ACCOUNT -u $SNOW_USER -r $SNOW_ROLE -q "CALL DOCGEN.HSM_SIGN_VIA_EXTERNAL('req_demo_1','s_demo_1', PARSE_JSON('{}'));"
# Create evidence
snowsql -a $SNOW_ACCOUNT -u $SNOW_USER -r $SNOW_ROLE -q "CALL DOCGEN.EVIDENCE_ZIPPER('req_demo_1','system');"
# Run retention enforcement (dry-run)
snowsql -a $SNOW_ACCOUNT -u $SNOW_USER -r $SNOW_ROLE -q "CALL DOCGEN.PURGE_OLD_DOCUMENTS(365, TRUE);"

-- End of tranche.

Note: These artifacts extend the E‑Signature Snowflake side with ingestion, verification, HSM delegation, admin queries, alerts, retention enforcement, FAISS snapshot orchestration hooks, and CI/test harnesses following your Snowpark/External Function and registration patterns @31 @6 @112 @29. If you want the next tranche I will continue emitting additional SQL/py/test/CI files to cover every remaining Snowflake object in the E‑Signature backlog.

- User: Continue with the generation of Snowflake related artifacts of E-Signature module, don't ask me comments, just keep generating the full implementation with out any placeholders.Output with maximum output

- Anara: FILENAME:sql/ddl/signature_domain_schema.sql
Purpose: Full schema for E-Signature domain: requests, signers, events, validations, document archive, embeddings, evidence bundles, manifests, and helper tables.
USE DATABASE AI_FEATURE_HUB;
USE SCHEMA DOCGEN;

-- 1) Document archive (rendered documents, staging URL, lifecycle)
CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_ARCHIVE (
  DOCUMENT_ID STRING PRIMARY KEY,
  TEMPLATE_ID STRING,
  ASSEMBLY_RUN_ID STRING,
  DOCUMENT_URL STRING,
  DOCUMENT_HASH STRING,
  MIME_TYPE STRING DEFAULT 'application/pdf',
  SIZE_BYTES NUMBER,
  CREATED_BY STRING,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 2) Signer / signature request model
CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_REQUESTS (
  REQUEST_ID STRING PRIMARY KEY,
  ACCOUNT_ID STRING,
  DOCUMENT_ID STRING,
  TEMPLATE_ID STRING,
  REQUESTER_ID STRING,
  STATUS STRING, -- PENDING, VIEWED, RENDERED, COMPLETED, CANCELLED
  EXTERNAL_REF STRING,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE OR REPLACE TABLE DOCGEN.SIGNERS (
  SIGNER_ID STRING PRIMARY KEY,
  REQUEST_ID STRING,
  ACCOUNT_ID STRING,
  SIGNER_EMAIL STRING,
  SIGNER_NAME STRING,
  SIGNER_ORDER NUMBER,
  AUTH_METHOD STRING, -- email, sms, aadhaar, biometric
  STATUS STRING, -- PENDING, NOTIFIED, VIEWED, SIGNED, REJECTED
  AUTH_PAYLOAD VARIANT,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 3) Raw events ingestion + normalized events
CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS_RAW (
  RAW_VARIANT VARIANT,
  FILE_NAME STRING,
  INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_EVENTS (
  EVENT_ID STRING PRIMARY KEY,
  REQUEST_ID STRING,
  SIGNER_ID STRING,
  EVENT_TYPE STRING, -- VIEWED, SIGNED, DOWNLOAD, CANCELLED, etc.
  EVENT_TS TIMESTAMP_LTZ,
  DEVICE_INFO VARIANT,
  IP_ADDR STRING,
  USER_AGENT STRING,
  PAYLOAD VARIANT,
  INSERTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 4) Signature validation / HSM results
CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_VALIDATION (
  VALIDATION_ID STRING PRIMARY KEY,
  REQUEST_ID STRING,
  SIGNER_ID STRING,
  VALIDATION_STATUS STRING, -- SIGNED, SIGNED_BY_HSM, FAILED, REVOKED
  VALIDATION_HASH STRING,
  SIGNATURE_BLOB_BASE64 STRING,
  CERT_CHAIN VARIANT,
  VERIFIED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP,
  NOTES STRING
);

-- 5) Evidence bundle and manifest tables
CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_BUNDLE (
  BUNDLE_ID STRING PRIMARY KEY,
  DOCUMENT_ID STRING,
  ACCOUNT_ID STRING,
  ARCHIVE_LOCATION STRING, -- S3 or stage URL
  BUNDLE_HASH STRING,
  METADATA VARIANT,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE OR REPLACE TABLE DOCGEN.EVIDENCE_EXPORT_MANIFEST (
  MANIFEST_ID STRING PRIMARY KEY,
  S3_PATH STRING,
  ROW_COUNT NUMBER,
  EXPORT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 6) Index/table for embeddings (lightweight)
CREATE OR REPLACE TABLE DOCGEN.DOCUMENT_EMBEDDINGS (
  EMBEDDING_ID STRING PRIMARY KEY,
  DOCUMENT_ID STRING,
  SECTION_ID STRING,
  EMBEDDING VARIANT,
  PROVENANCE VARIANT,
  METADATA VARIANT,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 7) Audit & activation records
CREATE OR REPLACE TABLE DOCGEN.ACTIVATION_AUDIT (
  AUDIT_ID STRING PRIMARY KEY,
  ACCOUNT_ID STRING,
  ACTION_TYPE STRING,
  ACTION_BY STRING,
  ACTION_PAYLOAD VARIANT,
  RESULT_STATUS STRING,
  NOTES STRING,
  ACTION_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 8) Alerting table
CREATE OR REPLACE TABLE DOCGEN.ALERTS (
  ALERT_ID STRING PRIMARY KEY,
  ALERT_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP,
  ALERT_TYPE STRING,
  PAYLOAD VARIANT,
  SEVERITY STRING,
  RESOLVED BOOLEAN DEFAULT FALSE,
  RESOLVED_AT TIMESTAMP_LTZ
);

-- 9) Purge audit (retention)
CREATE OR REPLACE TABLE DOCGEN.PURGE_AUDIT (
  PURGE_ID STRING PRIMARY KEY,
  ENTITY_NAME STRING,
  ROWS_PURGED NUMBER,
  CUT_OFF TIMESTAMP_LTZ,
  EXECUTED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 10) Telemetry: signature metrics
CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_TELEMETRY (
  TELEMETRY_ID STRING PRIMARY KEY,
  REQUEST_ID STRING,
  ACCOUNT_ID STRING,
  EVENT_TYPE STRING,
  LATENCY_MS NUMBER,
  DEVICE_TYPE STRING,
  GEO VARIANT,
  CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

-- 11) Reconciliation (for billing / usage)
CREATE OR REPLACE TABLE DOCGEN.SIGNATURE_USAGE (
  USAGE_ID STRING PRIMARY KEY,
  ACCOUNT_ID STRING,
  FEATURE_KEY STRING,
  UNITS NUMBER,
  UNIT_PRICE NUMBER,
  USAGE_TS TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP
);

